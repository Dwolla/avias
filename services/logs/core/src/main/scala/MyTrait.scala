package org.lyranthe.araethura.logs
trait Amazonlogs[F[_]] {
  def putRetentionPolicy(input: models.PutRetentionPolicyRequest): F[Unit]
  def disassociateKmsKey(input: models.DisassociateKmsKeyRequest): F[Unit]
  def putLogEvents(input: models.PutLogEventsRequest): F[models.PutLogEventsResponse]
  def describeResourcePolicies(input: models.DescribeResourcePoliciesRequest): F[models.DescribeResourcePoliciesResponse]
  def describeExportTasks(input: models.DescribeExportTasksRequest): F[models.DescribeExportTasksResponse]
  def putDestination(input: models.PutDestinationRequest): F[models.PutDestinationResponse]
  def describeSubscriptionFilters(input: models.DescribeSubscriptionFiltersRequest): F[models.DescribeSubscriptionFiltersResponse]
  def listTagsLogGroup(input: models.ListTagsLogGroupRequest): F[models.ListTagsLogGroupResponse]
  def tagLogGroup(input: models.TagLogGroupRequest): F[Unit]
  def deleteResourcePolicy(input: models.DeleteResourcePolicyRequest): F[Unit]
  def createExportTask(input: models.CreateExportTaskRequest): F[models.CreateExportTaskResponse]
  def deleteDestination(input: models.DeleteDestinationRequest): F[Unit]
  def deleteRetentionPolicy(input: models.DeleteRetentionPolicyRequest): F[Unit]
  def deleteLogStream(input: models.DeleteLogStreamRequest): F[Unit]
  def deleteLogGroup(input: models.DeleteLogGroupRequest): F[Unit]
  def getLogEvents(input: models.GetLogEventsRequest): F[models.GetLogEventsResponse]
  def describeMetricFilters(input: models.DescribeMetricFiltersRequest): F[models.DescribeMetricFiltersResponse]
  def putDestinationPolicy(input: models.PutDestinationPolicyRequest): F[Unit]
  def putSubscriptionFilter(input: models.PutSubscriptionFilterRequest): F[Unit]
  def describeLogStreams(input: models.DescribeLogStreamsRequest): F[models.DescribeLogStreamsResponse]
  def associateKmsKey(input: models.AssociateKmsKeyRequest): F[Unit]
  def filterLogEvents(input: models.FilterLogEventsRequest): F[models.FilterLogEventsResponse]
  def describeDestinations(input: models.DescribeDestinationsRequest): F[models.DescribeDestinationsResponse]
  def createLogStream(input: models.CreateLogStreamRequest): F[Unit]
  def cancelExportTask(input: models.CancelExportTaskRequest): F[Unit]
  def deleteSubscriptionFilter(input: models.DeleteSubscriptionFilterRequest): F[Unit]
  def untagLogGroup(input: models.UntagLogGroupRequest): F[Unit]
  def deleteMetricFilter(input: models.DeleteMetricFilterRequest): F[Unit]
  def testMetricFilter(input: models.TestMetricFilterRequest): F[models.TestMetricFilterResponse]
  def putResourcePolicy(input: models.PutResourcePolicyRequest): F[models.PutResourcePolicyResponse]
  def putMetricFilter(input: models.PutMetricFilterRequest): F[Unit]
  def createLogGroup(input: models.CreateLogGroupRequest): F[Unit]
  def describeLogGroups(input: models.DescribeLogGroupsRequest): F[models.DescribeLogGroupsResponse]
}