package org.lyranthe.araethura.logs
trait Amazonlogs[F[_]] {
  def putRetentionPolicy(input: org.lyranthe.araethura.logs.models.PutRetentionPolicyRequest): F[scala.Unit]
  def disassociateKmsKey(input: org.lyranthe.araethura.logs.models.DisassociateKmsKeyRequest): F[scala.Unit]
  def putLogEvents(input: org.lyranthe.araethura.logs.models.PutLogEventsRequest): F[org.lyranthe.araethura.logs.models.PutLogEventsResponse]
  def describeResourcePolicies(input: org.lyranthe.araethura.logs.models.DescribeResourcePoliciesRequest): F[org.lyranthe.araethura.logs.models.DescribeResourcePoliciesResponse]
  def describeExportTasks(input: org.lyranthe.araethura.logs.models.DescribeExportTasksRequest): F[org.lyranthe.araethura.logs.models.DescribeExportTasksResponse]
  def putDestination(input: org.lyranthe.araethura.logs.models.PutDestinationRequest): F[org.lyranthe.araethura.logs.models.PutDestinationResponse]
  def describeSubscriptionFilters(input: org.lyranthe.araethura.logs.models.DescribeSubscriptionFiltersRequest): F[org.lyranthe.araethura.logs.models.DescribeSubscriptionFiltersResponse]
  def listTagsLogGroup(input: org.lyranthe.araethura.logs.models.ListTagsLogGroupRequest): F[org.lyranthe.araethura.logs.models.ListTagsLogGroupResponse]
  def tagLogGroup(input: org.lyranthe.araethura.logs.models.TagLogGroupRequest): F[scala.Unit]
  def deleteResourcePolicy(input: org.lyranthe.araethura.logs.models.DeleteResourcePolicyRequest): F[scala.Unit]
  def createExportTask(input: org.lyranthe.araethura.logs.models.CreateExportTaskRequest): F[org.lyranthe.araethura.logs.models.CreateExportTaskResponse]
  def deleteDestination(input: org.lyranthe.araethura.logs.models.DeleteDestinationRequest): F[scala.Unit]
  def deleteRetentionPolicy(input: org.lyranthe.araethura.logs.models.DeleteRetentionPolicyRequest): F[scala.Unit]
  def deleteLogStream(input: org.lyranthe.araethura.logs.models.DeleteLogStreamRequest): F[scala.Unit]
  def deleteLogGroup(input: org.lyranthe.araethura.logs.models.DeleteLogGroupRequest): F[scala.Unit]
  def getLogEvents(input: org.lyranthe.araethura.logs.models.GetLogEventsRequest): F[org.lyranthe.araethura.logs.models.GetLogEventsResponse]
  def describeMetricFilters(input: org.lyranthe.araethura.logs.models.DescribeMetricFiltersRequest): F[org.lyranthe.araethura.logs.models.DescribeMetricFiltersResponse]
  def putDestinationPolicy(input: org.lyranthe.araethura.logs.models.PutDestinationPolicyRequest): F[scala.Unit]
  def putSubscriptionFilter(input: org.lyranthe.araethura.logs.models.PutSubscriptionFilterRequest): F[scala.Unit]
  def describeLogStreams(input: org.lyranthe.araethura.logs.models.DescribeLogStreamsRequest): F[org.lyranthe.araethura.logs.models.DescribeLogStreamsResponse]
  def associateKmsKey(input: org.lyranthe.araethura.logs.models.AssociateKmsKeyRequest): F[scala.Unit]
  def filterLogEvents(input: org.lyranthe.araethura.logs.models.FilterLogEventsRequest): F[org.lyranthe.araethura.logs.models.FilterLogEventsResponse]
  def describeDestinations(input: org.lyranthe.araethura.logs.models.DescribeDestinationsRequest): F[org.lyranthe.araethura.logs.models.DescribeDestinationsResponse]
  def createLogStream(input: org.lyranthe.araethura.logs.models.CreateLogStreamRequest): F[scala.Unit]
  def cancelExportTask(input: org.lyranthe.araethura.logs.models.CancelExportTaskRequest): F[scala.Unit]
  def deleteSubscriptionFilter(input: org.lyranthe.araethura.logs.models.DeleteSubscriptionFilterRequest): F[scala.Unit]
  def untagLogGroup(input: org.lyranthe.araethura.logs.models.UntagLogGroupRequest): F[scala.Unit]
  def deleteMetricFilter(input: org.lyranthe.araethura.logs.models.DeleteMetricFilterRequest): F[scala.Unit]
  def testMetricFilter(input: org.lyranthe.araethura.logs.models.TestMetricFilterRequest): F[org.lyranthe.araethura.logs.models.TestMetricFilterResponse]
  def putResourcePolicy(input: org.lyranthe.araethura.logs.models.PutResourcePolicyRequest): F[org.lyranthe.araethura.logs.models.PutResourcePolicyResponse]
  def putMetricFilter(input: org.lyranthe.araethura.logs.models.PutMetricFilterRequest): F[scala.Unit]
  def createLogGroup(input: org.lyranthe.araethura.logs.models.CreateLogGroupRequest): F[scala.Unit]
  def describeLogGroups(input: org.lyranthe.araethura.logs.models.DescribeLogGroupsRequest): F[org.lyranthe.araethura.logs.models.DescribeLogGroupsResponse]
}