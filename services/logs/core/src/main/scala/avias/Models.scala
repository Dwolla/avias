package avias.logs.models
final case class DescribeMetricFiltersResponse(metricFilters: scala.Option[scala.List[avias.logs.models.MetricFilter]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class TestMetricFilterResponse(matches: scala.Option[scala.List[avias.logs.models.MetricFilterMatchRecord]] = scala.None)
final case class DataAlreadyAcceptedException(expectedSequenceToken: scala.Option[java.lang.String] = scala.None)
final case class PutLogEventsResponse(nextSequenceToken: scala.Option[java.lang.String] = scala.None, rejectedLogEventsInfo: scala.Option[avias.logs.models.RejectedLogEventsInfo] = scala.None)
final case class TagLogGroupRequest(logGroupName: java.lang.String, tags: scala.collection.immutable.Map[java.lang.String, java.lang.String])
case object ResourceNotFoundException
final case class DescribeDestinationsResponse(destinations: scala.Option[scala.List[avias.logs.models.Destination]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class Destination(targetArn: scala.Option[java.lang.String] = scala.None, arn: scala.Option[java.lang.String] = scala.None, accessPolicy: scala.Option[java.lang.String] = scala.None, creationTime: scala.Option[scala.Long] = scala.None, roleArn: scala.Option[java.lang.String] = scala.None, destinationName: scala.Option[java.lang.String] = scala.None)
final case class CreateExportTaskResponse(taskId: scala.Option[java.lang.String] = scala.None)
final case class CancelExportTaskRequest(taskId: java.lang.String)
case object ServiceUnavailableException
final case class ResourcePolicy(policyName: scala.Option[java.lang.String] = scala.None, policyDocument: scala.Option[java.lang.String] = scala.None, lastUpdatedTime: scala.Option[scala.Long] = scala.None)
final case class PutSubscriptionFilterRequest(filterPattern: java.lang.String, filterName: java.lang.String, logGroupName: java.lang.String, destinationArn: java.lang.String, roleArn: scala.Option[java.lang.String] = scala.None, distribution: scala.Option[java.lang.String] = scala.None)
final case class PutDestinationPolicyRequest(destinationName: java.lang.String, accessPolicy: java.lang.String)
final case class PutDestinationResponse(destination: scala.Option[avias.logs.models.Destination] = scala.None)
case object InvalidOperationException
final case class GetLogEventsResponse(events: scala.Option[scala.List[avias.logs.models.OutputLogEvent]] = scala.None, nextForwardToken: scala.Option[java.lang.String] = scala.None, nextBackwardToken: scala.Option[java.lang.String] = scala.None)
final case class DeleteRetentionPolicyRequest(logGroupName: java.lang.String)
final case class UntagLogGroupRequest(logGroupName: java.lang.String, tags: scala.List[java.lang.String])
final case class ListTagsLogGroupRequest(logGroupName: java.lang.String)
final case class OutputLogEvent(timestamp: scala.Option[scala.Long] = scala.None, ingestionTime: scala.Option[scala.Long] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class DescribeLogGroupsResponse(logGroups: scala.Option[scala.List[avias.logs.models.LogGroup]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class DescribeLogStreamsResponse(logStreams: scala.Option[scala.List[avias.logs.models.LogStream]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class MetricTransformation(metricName: java.lang.String, metricNamespace: java.lang.String, metricValue: java.lang.String, defaultValue: scala.Option[scala.Double] = scala.None)
final case class SubscriptionFilter(filterPattern: scala.Option[java.lang.String] = scala.None, creationTime: scala.Option[scala.Long] = scala.None, filterName: scala.Option[java.lang.String] = scala.None, roleArn: scala.Option[java.lang.String] = scala.None, logGroupName: scala.Option[java.lang.String] = scala.None, destinationArn: scala.Option[java.lang.String] = scala.None, distribution: scala.Option[java.lang.String] = scala.None)
final case class DescribeSubscriptionFiltersResponse(subscriptionFilters: scala.Option[scala.List[avias.logs.models.SubscriptionFilter]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class ListTagsLogGroupResponse(tags: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None)
final case class DeleteLogStreamRequest(logGroupName: java.lang.String, logStreamName: java.lang.String)
final case class PutResourcePolicyResponse(resourcePolicy: scala.Option[avias.logs.models.ResourcePolicy] = scala.None)
final case class DescribeSubscriptionFiltersRequest(logGroupName: java.lang.String, filterNamePrefix: scala.Option[java.lang.String] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None)
final case class SearchedLogStream(logStreamName: scala.Option[java.lang.String] = scala.None, searchedCompletely: scala.Option[scala.Boolean] = scala.None)
final case class InvalidSequenceTokenException(expectedSequenceToken: scala.Option[java.lang.String] = scala.None)
final case class ExportTaskStatus(code: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class DeleteMetricFilterRequest(logGroupName: java.lang.String, filterName: java.lang.String)
final case class DeleteLogGroupRequest(logGroupName: java.lang.String)
case object OperationAbortedException
case object LimitExceededException
final case class FilterLogEventsRequest(logGroupName: java.lang.String, interleaved: scala.Option[scala.Boolean] = scala.None, filterPattern: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None, startTime: scala.Option[scala.Long] = scala.None, endTime: scala.Option[scala.Long] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, logStreamNames: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class DisassociateKmsKeyRequest(logGroupName: java.lang.String)
final case class DeleteSubscriptionFilterRequest(logGroupName: java.lang.String, filterName: java.lang.String)
final case class FilterLogEventsResponse(events: scala.Option[scala.List[avias.logs.models.FilteredLogEvent]] = scala.None, searchedLogStreams: scala.Option[scala.List[avias.logs.models.SearchedLogStream]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class PutResourcePolicyRequest(policyName: scala.Option[java.lang.String] = scala.None, policyDocument: scala.Option[java.lang.String] = scala.None)
final case class MetricFilter(filterPattern: scala.Option[java.lang.String] = scala.None, metricTransformations: scala.Option[scala.List[avias.logs.models.MetricTransformation]] = scala.None, creationTime: scala.Option[scala.Long] = scala.None, filterName: scala.Option[java.lang.String] = scala.None, logGroupName: scala.Option[java.lang.String] = scala.None)
final case class DescribeDestinationsRequest(destinationNamePrefix: scala.Option[java.lang.String] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None)
final case class DescribeResourcePoliciesResponse(resourcePolicies: scala.Option[scala.List[avias.logs.models.ResourcePolicy]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class RejectedLogEventsInfo(tooNewLogEventStartIndex: scala.Option[scala.Int] = scala.None, tooOldLogEventEndIndex: scala.Option[scala.Int] = scala.None, expiredLogEventEndIndex: scala.Option[scala.Int] = scala.None)
final case class ExportTaskExecutionInfo(creationTime: scala.Option[scala.Long] = scala.None, completionTime: scala.Option[scala.Long] = scala.None)
final case class DescribeExportTasksResponse(exportTasks: scala.Option[scala.List[avias.logs.models.ExportTask]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class DescribeExportTasksRequest(taskId: scala.Option[java.lang.String] = scala.None, statusCode: scala.Option[java.lang.String] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None)
final case class PutMetricFilterRequest(logGroupName: java.lang.String, filterName: java.lang.String, filterPattern: java.lang.String, metricTransformations: scala.List[avias.logs.models.MetricTransformation])
final case class LogGroup(metricFilterCount: scala.Option[scala.Int] = scala.None, arn: scala.Option[java.lang.String] = scala.None, storedBytes: scala.Option[scala.Long] = scala.None, creationTime: scala.Option[scala.Long] = scala.None, kmsKeyId: scala.Option[java.lang.String] = scala.None, retentionInDays: scala.Option[scala.Int] = scala.None, logGroupName: scala.Option[java.lang.String] = scala.None)
final case class PutLogEventsRequest(logGroupName: java.lang.String, logStreamName: java.lang.String, logEvents: scala.List[avias.logs.models.InputLogEvent], sequenceToken: scala.Option[java.lang.String] = scala.None)
final case class CreateLogStreamRequest(logGroupName: java.lang.String, logStreamName: java.lang.String)
final case class ExportTask(taskName: scala.Option[java.lang.String] = scala.None, status: scala.Option[avias.logs.models.ExportTaskStatus] = scala.None, from: scala.Option[scala.Long] = scala.None, to: scala.Option[scala.Long] = scala.None, executionInfo: scala.Option[avias.logs.models.ExportTaskExecutionInfo] = scala.None, taskId: scala.Option[java.lang.String] = scala.None, destination: scala.Option[java.lang.String] = scala.None, logGroupName: scala.Option[java.lang.String] = scala.None, destinationPrefix: scala.Option[java.lang.String] = scala.None)
final case class DeleteResourcePolicyRequest(policyName: scala.Option[java.lang.String] = scala.None)
final case class DescribeLogStreamsRequest(logGroupName: java.lang.String, logStreamNamePrefix: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, descending: scala.Option[scala.Boolean] = scala.None, orderBy: scala.Option[java.lang.String] = scala.None)
final case class CreateExportTaskRequest(from: scala.Long, to: scala.Long, destination: java.lang.String, logGroupName: java.lang.String, taskName: scala.Option[java.lang.String] = scala.None, logStreamNamePrefix: scala.Option[java.lang.String] = scala.None, destinationPrefix: scala.Option[java.lang.String] = scala.None)
final case class DescribeLogGroupsRequest(logGroupNamePrefix: scala.Option[java.lang.String] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None)
final case class DescribeResourcePoliciesRequest(nextToken: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None)
final case class PutRetentionPolicyRequest(logGroupName: java.lang.String, retentionInDays: scala.Int)
final case class CreateLogGroupRequest(logGroupName: java.lang.String, kmsKeyId: scala.Option[java.lang.String] = scala.None, tags: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None)
final case class DeleteDestinationRequest(destinationName: java.lang.String)
final case class FilteredLogEvent(logStreamName: scala.Option[java.lang.String] = scala.None, timestamp: scala.Option[scala.Long] = scala.None, ingestionTime: scala.Option[scala.Long] = scala.None, message: scala.Option[java.lang.String] = scala.None, eventId: scala.Option[java.lang.String] = scala.None)
final case class MetricFilterMatchRecord(eventNumber: scala.Option[scala.Long] = scala.None, eventMessage: scala.Option[java.lang.String] = scala.None, extractedValues: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None)
final case class LogStream(uploadSequenceToken: scala.Option[java.lang.String] = scala.None, arn: scala.Option[java.lang.String] = scala.None, storedBytes: scala.Option[scala.Long] = scala.None, logStreamName: scala.Option[java.lang.String] = scala.None, creationTime: scala.Option[scala.Long] = scala.None, firstEventTimestamp: scala.Option[scala.Long] = scala.None, lastEventTimestamp: scala.Option[scala.Long] = scala.None, lastIngestionTime: scala.Option[scala.Long] = scala.None)
final case class DescribeMetricFiltersRequest(metricNamespace: scala.Option[java.lang.String] = scala.None, metricName: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, filterNamePrefix: scala.Option[java.lang.String] = scala.None, logGroupName: scala.Option[java.lang.String] = scala.None)
case object ResourceAlreadyExistsException
final case class GetLogEventsRequest(logStreamName: java.lang.String, logGroupName: java.lang.String, limit: scala.Option[scala.Int] = scala.None, startTime: scala.Option[scala.Long] = scala.None, endTime: scala.Option[scala.Long] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, startFromHead: scala.Option[scala.Boolean] = scala.None)
final case class TestMetricFilterRequest(filterPattern: java.lang.String, logEventMessages: scala.List[java.lang.String])
case object InvalidParameterException
final case class PutDestinationRequest(destinationName: java.lang.String, targetArn: java.lang.String, roleArn: java.lang.String)
final case class AssociateKmsKeyRequest(logGroupName: java.lang.String, kmsKeyId: java.lang.String)
final case class InputLogEvent(timestamp: scala.Long, message: java.lang.String)