package org.lyranthe.araethura.logs.http4s
import org.http4s.Method._
import org.lyranthe.araethura.logs.circe._
import org.lyranthe.araethura.logs.models
class AmazonlogsClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.logs.Amazonlogs[F] {
  private[this] final val ServiceType: String = "logs"
  private[this] final val ServiceAndPrefix: Option[String] = Some("Logs_20140328")
  override def putRetentionPolicy(input: models.PutRetentionPolicyRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.PutRetentionPolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutRetentionPolicy", POST, "/", input)
  override def disassociateKmsKey(input: models.DisassociateKmsKeyRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DisassociateKmsKeyRequest](client, awsData, ServiceType, ServiceAndPrefix, "DisassociateKmsKey", POST, "/", input)
  override def putLogEvents(input: models.PutLogEventsRequest): F[models.PutLogEventsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutLogEventsResponse, models.PutLogEventsRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutLogEvents", POST, "/", input)
  override def describeResourcePolicies(input: models.DescribeResourcePoliciesRequest): F[models.DescribeResourcePoliciesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeResourcePoliciesResponse, models.DescribeResourcePoliciesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeResourcePolicies", POST, "/", input)
  override def describeExportTasks(input: models.DescribeExportTasksRequest): F[models.DescribeExportTasksResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeExportTasksResponse, models.DescribeExportTasksRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeExportTasks", POST, "/", input)
  override def putDestination(input: models.PutDestinationRequest): F[models.PutDestinationResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutDestinationResponse, models.PutDestinationRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutDestination", POST, "/", input)
  override def describeSubscriptionFilters(input: models.DescribeSubscriptionFiltersRequest): F[models.DescribeSubscriptionFiltersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeSubscriptionFiltersResponse, models.DescribeSubscriptionFiltersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeSubscriptionFilters", POST, "/", input)
  override def listTagsLogGroup(input: models.ListTagsLogGroupRequest): F[models.ListTagsLogGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTagsLogGroupResponse, models.ListTagsLogGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsLogGroup", POST, "/", input)
  override def tagLogGroup(input: models.TagLogGroupRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.TagLogGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "TagLogGroup", POST, "/", input)
  override def deleteResourcePolicy(input: models.DeleteResourcePolicyRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteResourcePolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteResourcePolicy", POST, "/", input)
  override def createExportTask(input: models.CreateExportTaskRequest): F[models.CreateExportTaskResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateExportTaskResponse, models.CreateExportTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateExportTask", POST, "/", input)
  override def deleteDestination(input: models.DeleteDestinationRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteDestinationRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDestination", POST, "/", input)
  override def deleteRetentionPolicy(input: models.DeleteRetentionPolicyRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteRetentionPolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteRetentionPolicy", POST, "/", input)
  override def deleteLogStream(input: models.DeleteLogStreamRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteLogStreamRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteLogStream", POST, "/", input)
  override def deleteLogGroup(input: models.DeleteLogGroupRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteLogGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteLogGroup", POST, "/", input)
  override def getLogEvents(input: models.GetLogEventsRequest): F[models.GetLogEventsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetLogEventsResponse, models.GetLogEventsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetLogEvents", POST, "/", input)
  override def describeMetricFilters(input: models.DescribeMetricFiltersRequest): F[models.DescribeMetricFiltersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeMetricFiltersResponse, models.DescribeMetricFiltersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMetricFilters", POST, "/", input)
  override def putDestinationPolicy(input: models.PutDestinationPolicyRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.PutDestinationPolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutDestinationPolicy", POST, "/", input)
  override def putSubscriptionFilter(input: models.PutSubscriptionFilterRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.PutSubscriptionFilterRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutSubscriptionFilter", POST, "/", input)
  override def describeLogStreams(input: models.DescribeLogStreamsRequest): F[models.DescribeLogStreamsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeLogStreamsResponse, models.DescribeLogStreamsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeLogStreams", POST, "/", input)
  override def associateKmsKey(input: models.AssociateKmsKeyRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AssociateKmsKeyRequest](client, awsData, ServiceType, ServiceAndPrefix, "AssociateKmsKey", POST, "/", input)
  override def filterLogEvents(input: models.FilterLogEventsRequest): F[models.FilterLogEventsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.FilterLogEventsResponse, models.FilterLogEventsRequest](client, awsData, ServiceType, ServiceAndPrefix, "FilterLogEvents", POST, "/", input)
  override def describeDestinations(input: models.DescribeDestinationsRequest): F[models.DescribeDestinationsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeDestinationsResponse, models.DescribeDestinationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDestinations", POST, "/", input)
  override def createLogStream(input: models.CreateLogStreamRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.CreateLogStreamRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateLogStream", POST, "/", input)
  override def cancelExportTask(input: models.CancelExportTaskRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.CancelExportTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "CancelExportTask", POST, "/", input)
  override def deleteSubscriptionFilter(input: models.DeleteSubscriptionFilterRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteSubscriptionFilterRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteSubscriptionFilter", POST, "/", input)
  override def untagLogGroup(input: models.UntagLogGroupRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UntagLogGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "UntagLogGroup", POST, "/", input)
  override def deleteMetricFilter(input: models.DeleteMetricFilterRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteMetricFilterRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteMetricFilter", POST, "/", input)
  override def testMetricFilter(input: models.TestMetricFilterRequest): F[models.TestMetricFilterResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.TestMetricFilterResponse, models.TestMetricFilterRequest](client, awsData, ServiceType, ServiceAndPrefix, "TestMetricFilter", POST, "/", input)
  override def putResourcePolicy(input: models.PutResourcePolicyRequest): F[models.PutResourcePolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutResourcePolicyResponse, models.PutResourcePolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutResourcePolicy", POST, "/", input)
  override def putMetricFilter(input: models.PutMetricFilterRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.PutMetricFilterRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutMetricFilter", POST, "/", input)
  override def createLogGroup(input: models.CreateLogGroupRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.CreateLogGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateLogGroup", POST, "/", input)
  override def describeLogGroups(input: models.DescribeLogGroupsRequest): F[models.DescribeLogGroupsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeLogGroupsResponse, models.DescribeLogGroupsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeLogGroups", POST, "/", input)
}