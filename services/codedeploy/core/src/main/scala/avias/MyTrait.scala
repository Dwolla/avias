package avias.codedeploy
trait Amazoncodedeploy[F[_]] {
  def deleteDeploymentConfig(input: avias.codedeploy.models.DeleteDeploymentConfigInput): F[scala.Unit]
  def batchGetDeploymentInstances(input: avias.codedeploy.models.BatchGetDeploymentInstancesInput): F[avias.codedeploy.models.BatchGetDeploymentInstancesOutput]
  def deleteApplication(input: avias.codedeploy.models.DeleteApplicationInput): F[scala.Unit]
  def batchGetApplicationRevisions(input: avias.codedeploy.models.BatchGetApplicationRevisionsInput): F[avias.codedeploy.models.BatchGetApplicationRevisionsOutput]
  def createDeploymentGroup(input: avias.codedeploy.models.CreateDeploymentGroupInput): F[avias.codedeploy.models.CreateDeploymentGroupOutput]
  def listDeploymentInstances(input: avias.codedeploy.models.ListDeploymentInstancesInput): F[avias.codedeploy.models.ListDeploymentInstancesOutput]
  def stopDeployment(input: avias.codedeploy.models.StopDeploymentInput): F[avias.codedeploy.models.StopDeploymentOutput]
  def registerOnPremisesInstance(input: avias.codedeploy.models.RegisterOnPremisesInstanceInput): F[scala.Unit]
  def listGitHubAccountTokenNames(input: avias.codedeploy.models.ListGitHubAccountTokenNamesInput): F[avias.codedeploy.models.ListGitHubAccountTokenNamesOutput]
  def getDeploymentInstance(input: avias.codedeploy.models.GetDeploymentInstanceInput): F[avias.codedeploy.models.GetDeploymentInstanceOutput]
  def updateDeploymentGroup(input: avias.codedeploy.models.UpdateDeploymentGroupInput): F[avias.codedeploy.models.UpdateDeploymentGroupOutput]
  def listDeployments(input: avias.codedeploy.models.ListDeploymentsInput): F[avias.codedeploy.models.ListDeploymentsOutput]
  def createDeployment(input: avias.codedeploy.models.CreateDeploymentInput): F[avias.codedeploy.models.CreateDeploymentOutput]
  def removeTagsFromOnPremisesInstances(input: avias.codedeploy.models.RemoveTagsFromOnPremisesInstancesInput): F[scala.Unit]
  def deleteDeploymentGroup(input: avias.codedeploy.models.DeleteDeploymentGroupInput): F[avias.codedeploy.models.DeleteDeploymentGroupOutput]
  def addTagsToOnPremisesInstances(input: avias.codedeploy.models.AddTagsToOnPremisesInstancesInput): F[scala.Unit]
  def createDeploymentConfig(input: avias.codedeploy.models.CreateDeploymentConfigInput): F[avias.codedeploy.models.CreateDeploymentConfigOutput]
  def getDeployment(input: avias.codedeploy.models.GetDeploymentInput): F[avias.codedeploy.models.GetDeploymentOutput]
  def skipWaitTimeForInstanceTermination(input: avias.codedeploy.models.SkipWaitTimeForInstanceTerminationInput): F[scala.Unit]
  def updateApplication(input: avias.codedeploy.models.UpdateApplicationInput): F[scala.Unit]
  def getDeploymentConfig(input: avias.codedeploy.models.GetDeploymentConfigInput): F[avias.codedeploy.models.GetDeploymentConfigOutput]
  def listDeploymentConfigs(input: avias.codedeploy.models.ListDeploymentConfigsInput): F[avias.codedeploy.models.ListDeploymentConfigsOutput]
  def continueDeployment(input: avias.codedeploy.models.ContinueDeploymentInput): F[scala.Unit]
  def listOnPremisesInstances(input: avias.codedeploy.models.ListOnPremisesInstancesInput): F[avias.codedeploy.models.ListOnPremisesInstancesOutput]
  def listApplicationRevisions(input: avias.codedeploy.models.ListApplicationRevisionsInput): F[avias.codedeploy.models.ListApplicationRevisionsOutput]
  def listApplications(input: avias.codedeploy.models.ListApplicationsInput): F[avias.codedeploy.models.ListApplicationsOutput]
  def getApplicationRevision(input: avias.codedeploy.models.GetApplicationRevisionInput): F[avias.codedeploy.models.GetApplicationRevisionOutput]
  def createApplication(input: avias.codedeploy.models.CreateApplicationInput): F[avias.codedeploy.models.CreateApplicationOutput]
  def getOnPremisesInstance(input: avias.codedeploy.models.GetOnPremisesInstanceInput): F[avias.codedeploy.models.GetOnPremisesInstanceOutput]
  def getDeploymentGroup(input: avias.codedeploy.models.GetDeploymentGroupInput): F[avias.codedeploy.models.GetDeploymentGroupOutput]
  def registerApplicationRevision(input: avias.codedeploy.models.RegisterApplicationRevisionInput): F[scala.Unit]
  def batchGetDeploymentGroups(input: avias.codedeploy.models.BatchGetDeploymentGroupsInput): F[avias.codedeploy.models.BatchGetDeploymentGroupsOutput]
  def batchGetDeployments(input: avias.codedeploy.models.BatchGetDeploymentsInput): F[avias.codedeploy.models.BatchGetDeploymentsOutput]
  def batchGetApplications(input: avias.codedeploy.models.BatchGetApplicationsInput): F[avias.codedeploy.models.BatchGetApplicationsOutput]
  def batchGetOnPremisesInstances(input: avias.codedeploy.models.BatchGetOnPremisesInstancesInput): F[avias.codedeploy.models.BatchGetOnPremisesInstancesOutput]
  def getApplication(input: avias.codedeploy.models.GetApplicationInput): F[avias.codedeploy.models.GetApplicationOutput]
  def listDeploymentGroups(input: avias.codedeploy.models.ListDeploymentGroupsInput): F[avias.codedeploy.models.ListDeploymentGroupsOutput]
  def deregisterOnPremisesInstance(input: avias.codedeploy.models.DeregisterOnPremisesInstanceInput): F[scala.Unit]
}