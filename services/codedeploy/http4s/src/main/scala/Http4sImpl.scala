package org.lyranthe.araethura.codedeploy.http4s
import org.http4s.Method._
import org.lyranthe.araethura.codedeploy.circe._
import org.lyranthe.araethura.codedeploy.models
class AmazoncodedeployClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.codedeploy.Amazoncodedeploy[F] {
  private[this] final val ServiceType: String = "codedeploy"
  private[this] final val ServiceAndPrefix: Option[String] = Some("CodeDeploy_20141006")
  override def deleteDeploymentConfig(input: models.DeleteDeploymentConfigInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteDeploymentConfigInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDeploymentConfig", POST, "/", input)
  override def batchGetDeploymentInstances(input: models.BatchGetDeploymentInstancesInput): F[models.BatchGetDeploymentInstancesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchGetDeploymentInstancesOutput, models.BatchGetDeploymentInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetDeploymentInstances", POST, "/", input)
  override def deleteApplication(input: models.DeleteApplicationInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteApplicationInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteApplication", POST, "/", input)
  override def batchGetApplicationRevisions(input: models.BatchGetApplicationRevisionsInput): F[models.BatchGetApplicationRevisionsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchGetApplicationRevisionsOutput, models.BatchGetApplicationRevisionsInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetApplicationRevisions", POST, "/", input)
  override def createDeploymentGroup(input: models.CreateDeploymentGroupInput): F[models.CreateDeploymentGroupOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDeploymentGroupOutput, models.CreateDeploymentGroupInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateDeploymentGroup", POST, "/", input)
  override def listDeploymentInstances(input: models.ListDeploymentInstancesInput): F[models.ListDeploymentInstancesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListDeploymentInstancesOutput, models.ListDeploymentInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListDeploymentInstances", POST, "/", input)
  override def stopDeployment(input: models.StopDeploymentInput): F[models.StopDeploymentOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StopDeploymentOutput, models.StopDeploymentInput](client, awsData, ServiceType, ServiceAndPrefix, "StopDeployment", POST, "/", input)
  override def registerOnPremisesInstance(input: models.RegisterOnPremisesInstanceInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.RegisterOnPremisesInstanceInput](client, awsData, ServiceType, ServiceAndPrefix, "RegisterOnPremisesInstance", POST, "/", input)
  override def listGitHubAccountTokenNames(input: models.ListGitHubAccountTokenNamesInput): F[models.ListGitHubAccountTokenNamesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListGitHubAccountTokenNamesOutput, models.ListGitHubAccountTokenNamesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListGitHubAccountTokenNames", POST, "/", input)
  override def getDeploymentInstance(input: models.GetDeploymentInstanceInput): F[models.GetDeploymentInstanceOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDeploymentInstanceOutput, models.GetDeploymentInstanceInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDeploymentInstance", POST, "/", input)
  override def updateDeploymentGroup(input: models.UpdateDeploymentGroupInput): F[models.UpdateDeploymentGroupOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateDeploymentGroupOutput, models.UpdateDeploymentGroupInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDeploymentGroup", POST, "/", input)
  override def listDeployments(input: models.ListDeploymentsInput): F[models.ListDeploymentsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListDeploymentsOutput, models.ListDeploymentsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListDeployments", POST, "/", input)
  override def createDeployment(input: models.CreateDeploymentInput): F[models.CreateDeploymentOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDeploymentOutput, models.CreateDeploymentInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateDeployment", POST, "/", input)
  override def removeTagsFromOnPremisesInstances(input: models.RemoveTagsFromOnPremisesInstancesInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.RemoveTagsFromOnPremisesInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTagsFromOnPremisesInstances", POST, "/", input)
  override def deleteDeploymentGroup(input: models.DeleteDeploymentGroupInput): F[models.DeleteDeploymentGroupOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteDeploymentGroupOutput, models.DeleteDeploymentGroupInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDeploymentGroup", POST, "/", input)
  override def addTagsToOnPremisesInstances(input: models.AddTagsToOnPremisesInstancesInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AddTagsToOnPremisesInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "AddTagsToOnPremisesInstances", POST, "/", input)
  override def createDeploymentConfig(input: models.CreateDeploymentConfigInput): F[models.CreateDeploymentConfigOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDeploymentConfigOutput, models.CreateDeploymentConfigInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateDeploymentConfig", POST, "/", input)
  override def getDeployment(input: models.GetDeploymentInput): F[models.GetDeploymentOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDeploymentOutput, models.GetDeploymentInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDeployment", POST, "/", input)
  override def skipWaitTimeForInstanceTermination(input: models.SkipWaitTimeForInstanceTerminationInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.SkipWaitTimeForInstanceTerminationInput](client, awsData, ServiceType, ServiceAndPrefix, "SkipWaitTimeForInstanceTermination", POST, "/", input)
  override def updateApplication(input: models.UpdateApplicationInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateApplicationInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateApplication", POST, "/", input)
  override def getDeploymentConfig(input: models.GetDeploymentConfigInput): F[models.GetDeploymentConfigOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDeploymentConfigOutput, models.GetDeploymentConfigInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDeploymentConfig", POST, "/", input)
  override def listDeploymentConfigs(input: models.ListDeploymentConfigsInput): F[models.ListDeploymentConfigsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListDeploymentConfigsOutput, models.ListDeploymentConfigsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListDeploymentConfigs", POST, "/", input)
  override def continueDeployment(input: models.ContinueDeploymentInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.ContinueDeploymentInput](client, awsData, ServiceType, ServiceAndPrefix, "ContinueDeployment", POST, "/", input)
  override def listOnPremisesInstances(input: models.ListOnPremisesInstancesInput): F[models.ListOnPremisesInstancesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListOnPremisesInstancesOutput, models.ListOnPremisesInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListOnPremisesInstances", POST, "/", input)
  override def listApplicationRevisions(input: models.ListApplicationRevisionsInput): F[models.ListApplicationRevisionsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListApplicationRevisionsOutput, models.ListApplicationRevisionsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListApplicationRevisions", POST, "/", input)
  override def listApplications(input: models.ListApplicationsInput): F[models.ListApplicationsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListApplicationsOutput, models.ListApplicationsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListApplications", POST, "/", input)
  override def getApplicationRevision(input: models.GetApplicationRevisionInput): F[models.GetApplicationRevisionOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetApplicationRevisionOutput, models.GetApplicationRevisionInput](client, awsData, ServiceType, ServiceAndPrefix, "GetApplicationRevision", POST, "/", input)
  override def createApplication(input: models.CreateApplicationInput): F[models.CreateApplicationOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateApplicationOutput, models.CreateApplicationInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateApplication", POST, "/", input)
  override def getOnPremisesInstance(input: models.GetOnPremisesInstanceInput): F[models.GetOnPremisesInstanceOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetOnPremisesInstanceOutput, models.GetOnPremisesInstanceInput](client, awsData, ServiceType, ServiceAndPrefix, "GetOnPremisesInstance", POST, "/", input)
  override def getDeploymentGroup(input: models.GetDeploymentGroupInput): F[models.GetDeploymentGroupOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDeploymentGroupOutput, models.GetDeploymentGroupInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDeploymentGroup", POST, "/", input)
  override def registerApplicationRevision(input: models.RegisterApplicationRevisionInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.RegisterApplicationRevisionInput](client, awsData, ServiceType, ServiceAndPrefix, "RegisterApplicationRevision", POST, "/", input)
  override def batchGetDeploymentGroups(input: models.BatchGetDeploymentGroupsInput): F[models.BatchGetDeploymentGroupsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchGetDeploymentGroupsOutput, models.BatchGetDeploymentGroupsInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetDeploymentGroups", POST, "/", input)
  override def batchGetDeployments(input: models.BatchGetDeploymentsInput): F[models.BatchGetDeploymentsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchGetDeploymentsOutput, models.BatchGetDeploymentsInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetDeployments", POST, "/", input)
  override def batchGetApplications(input: models.BatchGetApplicationsInput): F[models.BatchGetApplicationsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchGetApplicationsOutput, models.BatchGetApplicationsInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetApplications", POST, "/", input)
  override def batchGetOnPremisesInstances(input: models.BatchGetOnPremisesInstancesInput): F[models.BatchGetOnPremisesInstancesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchGetOnPremisesInstancesOutput, models.BatchGetOnPremisesInstancesInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetOnPremisesInstances", POST, "/", input)
  override def getApplication(input: models.GetApplicationInput): F[models.GetApplicationOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetApplicationOutput, models.GetApplicationInput](client, awsData, ServiceType, ServiceAndPrefix, "GetApplication", POST, "/", input)
  override def listDeploymentGroups(input: models.ListDeploymentGroupsInput): F[models.ListDeploymentGroupsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListDeploymentGroupsOutput, models.ListDeploymentGroupsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListDeploymentGroups", POST, "/", input)
  override def deregisterOnPremisesInstance(input: models.DeregisterOnPremisesInstanceInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeregisterOnPremisesInstanceInput](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterOnPremisesInstance", POST, "/", input)
}