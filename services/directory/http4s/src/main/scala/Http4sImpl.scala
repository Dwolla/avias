package org.lyranthe.araethura.directory.http4s
import org.http4s.Method._
import org.lyranthe.araethura.directory.circe._
import org.lyranthe.araethura.directory.models
class AmazondirectoryClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.directory.Amazondirectory[F] {
  private[this] final val ServiceType: String = "ds"
  private[this] final val ServiceAndPrefix: Option[String] = Some("DirectoryService_20150416")
  override def connectDirectory(input: org.lyranthe.araethura.directory.models.ConnectDirectoryRequest): F[org.lyranthe.araethura.directory.models.ConnectDirectoryResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.ConnectDirectoryResult, org.lyranthe.araethura.directory.models.ConnectDirectoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "ConnectDirectory", POST, "/", input)
  override def removeIpRoutes(input: org.lyranthe.araethura.directory.models.RemoveIpRoutesRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.RemoveIpRoutesRequest](client, awsData, ServiceType, ServiceAndPrefix, "RemoveIpRoutes", POST, "/", input)
  override def deregisterEventTopic(input: org.lyranthe.araethura.directory.models.DeregisterEventTopicRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.DeregisterEventTopicRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterEventTopic", POST, "/", input)
  override def createAlias(input: org.lyranthe.araethura.directory.models.CreateAliasRequest): F[org.lyranthe.araethura.directory.models.CreateAliasResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.CreateAliasResult, org.lyranthe.araethura.directory.models.CreateAliasRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateAlias", POST, "/", input)
  override def restoreFromSnapshot(input: org.lyranthe.araethura.directory.models.RestoreFromSnapshotRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.RestoreFromSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "RestoreFromSnapshot", POST, "/", input)
  override def disableSso(input: org.lyranthe.araethura.directory.models.DisableSsoRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.DisableSsoRequest](client, awsData, ServiceType, ServiceAndPrefix, "DisableSso", POST, "/", input)
  override def createTrust(input: org.lyranthe.araethura.directory.models.CreateTrustRequest): F[org.lyranthe.araethura.directory.models.CreateTrustResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.CreateTrustResult, org.lyranthe.araethura.directory.models.CreateTrustRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateTrust", POST, "/", input)
  override def disableRadius(input: org.lyranthe.araethura.directory.models.DisableRadiusRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.DisableRadiusRequest](client, awsData, ServiceType, ServiceAndPrefix, "DisableRadius", POST, "/", input)
  override def updateConditionalForwarder(input: org.lyranthe.araethura.directory.models.UpdateConditionalForwarderRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.UpdateConditionalForwarderRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateConditionalForwarder", POST, "/", input)
  override def deleteDirectory(input: org.lyranthe.araethura.directory.models.DeleteDirectoryRequest): F[org.lyranthe.araethura.directory.models.DeleteDirectoryResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.DeleteDirectoryResult, org.lyranthe.araethura.directory.models.DeleteDirectoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDirectory", POST, "/", input)
  override def describeTrusts(input: org.lyranthe.araethura.directory.models.DescribeTrustsRequest): F[org.lyranthe.araethura.directory.models.DescribeTrustsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.DescribeTrustsResult, org.lyranthe.araethura.directory.models.DescribeTrustsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTrusts", POST, "/", input)
  override def cancelSchemaExtension(input: org.lyranthe.araethura.directory.models.CancelSchemaExtensionRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.CancelSchemaExtensionRequest](client, awsData, ServiceType, ServiceAndPrefix, "CancelSchemaExtension", POST, "/", input)
  override def listIpRoutes(input: org.lyranthe.araethura.directory.models.ListIpRoutesRequest): F[org.lyranthe.araethura.directory.models.ListIpRoutesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.ListIpRoutesResult, org.lyranthe.araethura.directory.models.ListIpRoutesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListIpRoutes", POST, "/", input)
  override def getSnapshotLimits(input: org.lyranthe.araethura.directory.models.GetSnapshotLimitsRequest): F[org.lyranthe.araethura.directory.models.GetSnapshotLimitsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.GetSnapshotLimitsResult, org.lyranthe.araethura.directory.models.GetSnapshotLimitsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetSnapshotLimits", POST, "/", input)
  override def createDirectory(input: org.lyranthe.araethura.directory.models.CreateDirectoryRequest): F[org.lyranthe.araethura.directory.models.CreateDirectoryResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.CreateDirectoryResult, org.lyranthe.araethura.directory.models.CreateDirectoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDirectory", POST, "/", input)
  override def describeEventTopics(input: org.lyranthe.araethura.directory.models.DescribeEventTopicsRequest): F[org.lyranthe.araethura.directory.models.DescribeEventTopicsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.DescribeEventTopicsResult, org.lyranthe.araethura.directory.models.DescribeEventTopicsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEventTopics", POST, "/", input)
  override def describeSnapshots(input: org.lyranthe.araethura.directory.models.DescribeSnapshotsRequest): F[org.lyranthe.araethura.directory.models.DescribeSnapshotsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.DescribeSnapshotsResult, org.lyranthe.araethura.directory.models.DescribeSnapshotsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeSnapshots", POST, "/", input)
  override def deleteSnapshot(input: org.lyranthe.araethura.directory.models.DeleteSnapshotRequest): F[org.lyranthe.araethura.directory.models.DeleteSnapshotResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.DeleteSnapshotResult, org.lyranthe.araethura.directory.models.DeleteSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteSnapshot", POST, "/", input)
  override def enableSso(input: org.lyranthe.araethura.directory.models.EnableSsoRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.EnableSsoRequest](client, awsData, ServiceType, ServiceAndPrefix, "EnableSso", POST, "/", input)
  override def createConditionalForwarder(input: org.lyranthe.araethura.directory.models.CreateConditionalForwarderRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.CreateConditionalForwarderRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateConditionalForwarder", POST, "/", input)
  override def addTagsToResource(input: org.lyranthe.araethura.directory.models.AddTagsToResourceRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.AddTagsToResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AddTagsToResource", POST, "/", input)
  override def getDirectoryLimits: F[org.lyranthe.araethura.directory.models.GetDirectoryLimitsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.GetDirectoryLimitsResult, scala.Unit](client, awsData, ServiceType, ServiceAndPrefix, "GetDirectoryLimits", POST, "/", ())
  override def listTagsForResource(input: org.lyranthe.araethura.directory.models.ListTagsForResourceRequest): F[org.lyranthe.araethura.directory.models.ListTagsForResourceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.ListTagsForResourceResult, org.lyranthe.araethura.directory.models.ListTagsForResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForResource", POST, "/", input)
  override def describeDirectories(input: org.lyranthe.araethura.directory.models.DescribeDirectoriesRequest): F[org.lyranthe.araethura.directory.models.DescribeDirectoriesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.DescribeDirectoriesResult, org.lyranthe.araethura.directory.models.DescribeDirectoriesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDirectories", POST, "/", input)
  override def removeTagsFromResource(input: org.lyranthe.araethura.directory.models.RemoveTagsFromResourceRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.RemoveTagsFromResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTagsFromResource", POST, "/", input)
  override def createComputer(input: org.lyranthe.araethura.directory.models.CreateComputerRequest): F[org.lyranthe.araethura.directory.models.CreateComputerResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.CreateComputerResult, org.lyranthe.araethura.directory.models.CreateComputerRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateComputer", POST, "/", input)
  override def registerEventTopic(input: org.lyranthe.araethura.directory.models.RegisterEventTopicRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.RegisterEventTopicRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterEventTopic", POST, "/", input)
  override def deleteTrust(input: org.lyranthe.araethura.directory.models.DeleteTrustRequest): F[org.lyranthe.araethura.directory.models.DeleteTrustResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.DeleteTrustResult, org.lyranthe.araethura.directory.models.DeleteTrustRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteTrust", POST, "/", input)
  override def createMicrosoftAD(input: org.lyranthe.araethura.directory.models.CreateMicrosoftADRequest): F[org.lyranthe.araethura.directory.models.CreateMicrosoftADResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.CreateMicrosoftADResult, org.lyranthe.araethura.directory.models.CreateMicrosoftADRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateMicrosoftAD", POST, "/", input)
  override def verifyTrust(input: org.lyranthe.araethura.directory.models.VerifyTrustRequest): F[org.lyranthe.araethura.directory.models.VerifyTrustResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.VerifyTrustResult, org.lyranthe.araethura.directory.models.VerifyTrustRequest](client, awsData, ServiceType, ServiceAndPrefix, "VerifyTrust", POST, "/", input)
  override def deleteConditionalForwarder(input: org.lyranthe.araethura.directory.models.DeleteConditionalForwarderRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.DeleteConditionalForwarderRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteConditionalForwarder", POST, "/", input)
  override def startSchemaExtension(input: org.lyranthe.araethura.directory.models.StartSchemaExtensionRequest): F[org.lyranthe.araethura.directory.models.StartSchemaExtensionResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.StartSchemaExtensionResult, org.lyranthe.araethura.directory.models.StartSchemaExtensionRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartSchemaExtension", POST, "/", input)
  override def createSnapshot(input: org.lyranthe.araethura.directory.models.CreateSnapshotRequest): F[org.lyranthe.araethura.directory.models.CreateSnapshotResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.CreateSnapshotResult, org.lyranthe.araethura.directory.models.CreateSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateSnapshot", POST, "/", input)
  override def describeConditionalForwarders(input: org.lyranthe.araethura.directory.models.DescribeConditionalForwardersRequest): F[org.lyranthe.araethura.directory.models.DescribeConditionalForwardersResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.DescribeConditionalForwardersResult, org.lyranthe.araethura.directory.models.DescribeConditionalForwardersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeConditionalForwarders", POST, "/", input)
  override def describeDomainControllers(input: org.lyranthe.araethura.directory.models.DescribeDomainControllersRequest): F[org.lyranthe.araethura.directory.models.DescribeDomainControllersResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.DescribeDomainControllersResult, org.lyranthe.araethura.directory.models.DescribeDomainControllersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDomainControllers", POST, "/", input)
  override def listSchemaExtensions(input: org.lyranthe.araethura.directory.models.ListSchemaExtensionsRequest): F[org.lyranthe.araethura.directory.models.ListSchemaExtensionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.directory.models.ListSchemaExtensionsResult, org.lyranthe.araethura.directory.models.ListSchemaExtensionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListSchemaExtensions", POST, "/", input)
  override def updateRadius(input: org.lyranthe.araethura.directory.models.UpdateRadiusRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.UpdateRadiusRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateRadius", POST, "/", input)
  override def enableRadius(input: org.lyranthe.araethura.directory.models.EnableRadiusRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.EnableRadiusRequest](client, awsData, ServiceType, ServiceAndPrefix, "EnableRadius", POST, "/", input)
  override def updateNumberOfDomainControllers(input: org.lyranthe.araethura.directory.models.UpdateNumberOfDomainControllersRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.UpdateNumberOfDomainControllersRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateNumberOfDomainControllers", POST, "/", input)
  override def addIpRoutes(input: org.lyranthe.araethura.directory.models.AddIpRoutesRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.directory.models.AddIpRoutesRequest](client, awsData, ServiceType, ServiceAndPrefix, "AddIpRoutes", POST, "/", input)
}