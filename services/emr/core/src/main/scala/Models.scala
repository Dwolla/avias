package org.lyranthe.araethura.emr.models
import org.lyranthe.araethura.emr.models
final case class PutAutoScalingPolicyOutput(clusterId: scala.Option[java.lang.String] = None, instanceGroupId: scala.Option[java.lang.String] = None, autoScalingPolicy: scala.Option[models.AutoScalingPolicyDescription] = None)
final case class SupportedProductConfig(name: scala.Option[java.lang.String] = None, args: scala.Option[scala.List[java.lang.String]] = None)
final case class InstanceTypeSpecification(bidPrice: scala.Option[java.lang.String] = None, instanceType: scala.Option[java.lang.String] = None, ebsBlockDevices: scala.Option[scala.List[models.EbsBlockDevice]] = None, weightedCapacity: scala.Option[scala.Int] = None, bidPriceAsPercentageOfOnDemandPrice: scala.Option[scala.Double] = None, ebsOptimized: scala.Option[scala.Boolean] = None, configurations: scala.Option[scala.List[models.Configuration]] = None)
final case class StepExecutionStatusDetail(state: java.lang.String, creationDateTime: java.time.Instant, startDateTime: scala.Option[java.time.Instant] = None, endDateTime: scala.Option[java.time.Instant] = None, lastStateChangeReason: scala.Option[java.lang.String] = None)
final case class ListBootstrapActionsInput(clusterId: java.lang.String, marker: scala.Option[java.lang.String] = None)
final case class CancelStepsInput(clusterId: scala.Option[java.lang.String] = None, stepIds: scala.Option[scala.List[java.lang.String]] = None)
final case class RemoveTagsInput(resourceId: java.lang.String, tagKeys: scala.List[java.lang.String])
final case class CreateSecurityConfigurationOutput(name: java.lang.String, creationDateTime: java.time.Instant)
final case class InstanceResizePolicy(instancesToTerminate: scala.Option[scala.List[java.lang.String]] = None, instancesToProtect: scala.Option[scala.List[java.lang.String]] = None, instanceTerminationTimeout: scala.Option[scala.Int] = None)
final case class BootstrapActionDetail(bootstrapActionConfig: scala.Option[models.BootstrapActionConfig] = None)
final case class CreateSecurityConfigurationInput(name: java.lang.String, securityConfiguration: java.lang.String)
case object DeleteSecurityConfigurationOutput
final case class ModifyInstanceGroupsInput(clusterId: scala.Option[java.lang.String] = None, instanceGroups: scala.Option[scala.List[models.InstanceGroupModifyConfig]] = None)
final case class ClusterSummary(id: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, status: scala.Option[models.ClusterStatus] = None, normalizedInstanceHours: scala.Option[scala.Int] = None)
final case class AutoScalingPolicyStateChangeReason(code: scala.Option[java.lang.String] = None, message: scala.Option[java.lang.String] = None)
final case class ListClustersOutput(clusters: scala.Option[scala.List[models.ClusterSummary]] = None, marker: scala.Option[java.lang.String] = None)
final case class AddInstanceGroupsInput(instanceGroups: scala.List[models.InstanceGroupConfig], jobFlowId: java.lang.String)
final case class ScalingTrigger(cloudWatchAlarmDefinition: models.CloudWatchAlarmDefinition)
final case class InstanceTimeline(creationDateTime: scala.Option[java.time.Instant] = None, readyDateTime: scala.Option[java.time.Instant] = None, endDateTime: scala.Option[java.time.Instant] = None)
final case class InstanceGroupStatus(state: scala.Option[java.lang.String] = None, stateChangeReason: scala.Option[models.InstanceGroupStateChangeReason] = None, timeline: scala.Option[models.InstanceGroupTimeline] = None)
final case class StepStateChangeReason(code: scala.Option[java.lang.String] = None, message: scala.Option[java.lang.String] = None)
final case class ModifyInstanceFleetInput(clusterId: java.lang.String, instanceFleet: models.InstanceFleetModifyConfig)
final case class HadoopJarStepConfig(jar: java.lang.String, mainClass: scala.Option[java.lang.String] = None, properties: scala.Option[scala.List[models.KeyValue]] = None, args: scala.Option[scala.List[java.lang.String]] = None)
case object RemoveAutoScalingPolicyOutput
final case class Ec2InstanceAttributes(iamInstanceProfile: scala.Option[java.lang.String] = None, emrManagedMasterSecurityGroup: scala.Option[java.lang.String] = None, serviceAccessSecurityGroup: scala.Option[java.lang.String] = None, ec2KeyName: scala.Option[java.lang.String] = None, ec2AvailabilityZone: scala.Option[java.lang.String] = None, emrManagedSlaveSecurityGroup: scala.Option[java.lang.String] = None, ec2SubnetId: scala.Option[java.lang.String] = None, requestedEc2SubnetIds: scala.Option[scala.List[java.lang.String]] = None, requestedEc2AvailabilityZones: scala.Option[scala.List[java.lang.String]] = None, additionalMasterSecurityGroups: scala.Option[scala.List[java.lang.String]] = None, additionalSlaveSecurityGroups: scala.Option[scala.List[java.lang.String]] = None)
final case class DescribeJobFlowsOutput(jobFlows: scala.Option[scala.List[models.JobFlowDetail]] = None)
final case class ListInstanceGroupsOutput(instanceGroups: scala.Option[scala.List[models.InstanceGroup]] = None, marker: scala.Option[java.lang.String] = None)
final case class RunJobFlowOutput(jobFlowId: scala.Option[java.lang.String] = None)
final case class SpotProvisioningSpecification(timeoutDurationMinutes: scala.Int, timeoutAction: java.lang.String, blockDurationMinutes: scala.Option[scala.Int] = None)
final case class ScalingConstraints(minCapacity: scala.Int, maxCapacity: scala.Int)
final case class InstanceFleetTimeline(creationDateTime: scala.Option[java.time.Instant] = None, readyDateTime: scala.Option[java.time.Instant] = None, endDateTime: scala.Option[java.time.Instant] = None)
final case class AddInstanceGroupsOutput(jobFlowId: scala.Option[java.lang.String] = None, instanceGroupIds: scala.Option[scala.List[java.lang.String]] = None)
final case class Cluster(repoUpgradeOnBoot: scala.Option[java.lang.String] = None, customAmiId: scala.Option[java.lang.String] = None, ec2InstanceAttributes: scala.Option[models.Ec2InstanceAttributes] = None, runningAmiVersion: scala.Option[java.lang.String] = None, requestedAmiVersion: scala.Option[java.lang.String] = None, logUri: scala.Option[java.lang.String] = None, serviceRole: scala.Option[java.lang.String] = None, releaseLabel: scala.Option[java.lang.String] = None, masterPublicDnsName: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, scaleDownBehavior: scala.Option[java.lang.String] = None, applications: scala.Option[scala.List[models.Application]] = None, tags: scala.Option[scala.List[models.Tag]] = None, status: scala.Option[models.ClusterStatus] = None, securityConfiguration: scala.Option[java.lang.String] = None, autoScalingRole: scala.Option[java.lang.String] = None, id: scala.Option[java.lang.String] = None, normalizedInstanceHours: scala.Option[scala.Int] = None, ebsRootVolumeSize: scala.Option[scala.Int] = None, autoTerminate: scala.Option[scala.Boolean] = None, terminationProtected: scala.Option[scala.Boolean] = None, visibleToAllUsers: scala.Option[scala.Boolean] = None, configurations: scala.Option[scala.List[models.Configuration]] = None, instanceCollectionType: scala.Option[java.lang.String] = None)
final case class InstanceGroupTimeline(creationDateTime: scala.Option[java.time.Instant] = None, readyDateTime: scala.Option[java.time.Instant] = None, endDateTime: scala.Option[java.time.Instant] = None)
final case class AutoScalingPolicy(constraints: models.ScalingConstraints, rules: scala.List[models.ScalingRule])
final case class InstanceFleetProvisioningSpecifications(spotSpecification: models.SpotProvisioningSpecification)
final case class JobFlowInstancesDetail(masterInstanceType: java.lang.String, slaveInstanceType: java.lang.String, instanceCount: scala.Int, ec2KeyName: scala.Option[java.lang.String] = None, ec2SubnetId: scala.Option[java.lang.String] = None, hadoopVersion: scala.Option[java.lang.String] = None, instanceGroups: scala.Option[scala.List[models.InstanceGroupDetail]] = None, placement: scala.Option[models.PlacementType] = None, masterPublicDnsName: scala.Option[java.lang.String] = None, masterInstanceId: scala.Option[java.lang.String] = None, normalizedInstanceHours: scala.Option[scala.Int] = None, keepJobFlowAliveWhenNoSteps: scala.Option[scala.Boolean] = None, terminationProtected: scala.Option[scala.Boolean] = None)
final case class ShrinkPolicy(decommissionTimeout: scala.Option[scala.Int] = None, instanceResizePolicy: scala.Option[models.InstanceResizePolicy] = None)
final case class InstanceFleet(instanceFleetType: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, launchSpecifications: scala.Option[models.InstanceFleetProvisioningSpecifications] = None, instanceTypeSpecifications: scala.Option[scala.List[models.InstanceTypeSpecification]] = None, id: scala.Option[java.lang.String] = None, targetOnDemandCapacity: scala.Option[scala.Int] = None, targetSpotCapacity: scala.Option[scala.Int] = None, provisionedOnDemandCapacity: scala.Option[scala.Int] = None, provisionedSpotCapacity: scala.Option[scala.Int] = None, status: scala.Option[models.InstanceFleetStatus] = None)
final case class InstanceGroupStateChangeReason(code: scala.Option[java.lang.String] = None, message: scala.Option[java.lang.String] = None)
case object AddTagsOutput
final case class StepTimeline(creationDateTime: scala.Option[java.time.Instant] = None, startDateTime: scala.Option[java.time.Instant] = None, endDateTime: scala.Option[java.time.Instant] = None)
final case class ListSecurityConfigurationsOutput(securityConfigurations: scala.Option[scala.List[models.SecurityConfigurationSummary]] = None, marker: scala.Option[java.lang.String] = None)
final case class InstanceFleetConfig(instanceFleetType: java.lang.String, instanceTypeConfigs: scala.Option[scala.List[models.InstanceTypeConfig]] = None, name: scala.Option[java.lang.String] = None, launchSpecifications: scala.Option[models.InstanceFleetProvisioningSpecifications] = None, targetOnDemandCapacity: scala.Option[scala.Int] = None, targetSpotCapacity: scala.Option[scala.Int] = None)
final case class AddJobFlowStepsOutput(stepIds: scala.Option[scala.List[java.lang.String]] = None)
final case class InstanceGroup(status: scala.Option[models.InstanceGroupStatus] = None, instanceType: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, bidPrice: scala.Option[java.lang.String] = None, instanceGroupType: scala.Option[java.lang.String] = None, shrinkPolicy: scala.Option[models.ShrinkPolicy] = None, market: scala.Option[java.lang.String] = None, id: scala.Option[java.lang.String] = None, ebsBlockDevices: scala.Option[scala.List[models.EbsBlockDevice]] = None, autoScalingPolicy: scala.Option[models.AutoScalingPolicyDescription] = None, ebsOptimized: scala.Option[scala.Boolean] = None, requestedInstanceCount: scala.Option[scala.Int] = None, runningInstanceCount: scala.Option[scala.Int] = None, configurations: scala.Option[scala.List[models.Configuration]] = None)
final case class ListInstancesInput(clusterId: java.lang.String, instanceGroupTypes: scala.Option[scala.List[java.lang.String]] = None, instanceFleetType: scala.Option[java.lang.String] = None, instanceFleetId: scala.Option[java.lang.String] = None, instanceGroupId: scala.Option[java.lang.String] = None, instanceStates: scala.Option[scala.List[java.lang.String]] = None, marker: scala.Option[java.lang.String] = None)
final case class ScalingAction(simpleScalingPolicyConfiguration: models.SimpleScalingPolicyConfiguration, market: scala.Option[java.lang.String] = None)
final case class AddInstanceFleetOutput(clusterId: scala.Option[java.lang.String] = None, instanceFleetId: scala.Option[java.lang.String] = None)
final case class InstanceFleetModifyConfig(instanceFleetId: java.lang.String, targetOnDemandCapacity: scala.Option[scala.Int] = None, targetSpotCapacity: scala.Option[scala.Int] = None)
final case class InstanceGroupConfig(instanceRole: java.lang.String, instanceType: java.lang.String, instanceCount: scala.Int, name: scala.Option[java.lang.String] = None, bidPrice: scala.Option[java.lang.String] = None, autoScalingPolicy: scala.Option[models.AutoScalingPolicy] = None, market: scala.Option[java.lang.String] = None, ebsConfiguration: scala.Option[models.EbsConfiguration] = None, configurations: scala.Option[scala.List[models.Configuration]] = None)
final case class CancelStepsInfo(stepId: scala.Option[java.lang.String] = None, status: scala.Option[java.lang.String] = None, reason: scala.Option[java.lang.String] = None)
final case class ClusterStateChangeReason(code: scala.Option[java.lang.String] = None, message: scala.Option[java.lang.String] = None)
final case class Configuration(classification: scala.Option[java.lang.String] = None, configurations: scala.Option[scala.List[models.Configuration]] = None, properties: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = None)
final case class DescribeStepOutput(step: scala.Option[models.Step] = None)
final case class BootstrapActionConfig(name: java.lang.String, scriptBootstrapAction: models.ScriptBootstrapActionConfig)
final case class EbsBlockDevice(volumeSpecification: scala.Option[models.VolumeSpecification] = None, device: scala.Option[java.lang.String] = None)
final case class ListInstanceFleetsOutput(instanceFleets: scala.Option[scala.List[models.InstanceFleet]] = None, marker: scala.Option[java.lang.String] = None)
final case class AutoScalingPolicyStatus(state: scala.Option[java.lang.String] = None, stateChangeReason: scala.Option[models.AutoScalingPolicyStateChangeReason] = None)
final case class TerminateJobFlowsInput(jobFlowIds: scala.List[java.lang.String])
final case class MetricDimension(key: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None)
final case class EbsVolume(device: scala.Option[java.lang.String] = None, volumeId: scala.Option[java.lang.String] = None)
final case class AddTagsInput(resourceId: java.lang.String, tags: scala.List[models.Tag])
final case class PlacementType(availabilityZone: scala.Option[java.lang.String] = None, availabilityZones: scala.Option[scala.List[java.lang.String]] = None)
final case class ListStepsInput(clusterId: java.lang.String, stepStates: scala.Option[scala.List[java.lang.String]] = None, stepIds: scala.Option[scala.List[java.lang.String]] = None, marker: scala.Option[java.lang.String] = None)
final case class StepSummary(id: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, actionOnFailure: scala.Option[java.lang.String] = None, status: scala.Option[models.StepStatus] = None, config: scala.Option[models.HadoopStepConfig] = None)
final case class InstanceStateChangeReason(code: scala.Option[java.lang.String] = None, message: scala.Option[java.lang.String] = None)
final case class AutoScalingPolicyDescription(status: scala.Option[models.AutoScalingPolicyStatus] = None, constraints: scala.Option[models.ScalingConstraints] = None, rules: scala.Option[scala.List[models.ScalingRule]] = None)
final case class VolumeSpecification(volumeType: java.lang.String, sizeInGB: scala.Int, iops: scala.Option[scala.Int] = None)
final case class ClusterStatus(state: scala.Option[java.lang.String] = None, stateChangeReason: scala.Option[models.ClusterStateChangeReason] = None, timeline: scala.Option[models.ClusterTimeline] = None)
final case class DescribeClusterOutput(cluster: scala.Option[models.Cluster] = None)
final case class JobFlowDetail(jobFlowId: java.lang.String, name: java.lang.String, instances: models.JobFlowInstancesDetail, executionStatusDetail: models.JobFlowExecutionStatusDetail, amiVersion: scala.Option[java.lang.String] = None, scaleDownBehavior: scala.Option[java.lang.String] = None, bootstrapActions: scala.Option[scala.List[models.BootstrapActionDetail]] = None, logUri: scala.Option[java.lang.String] = None, jobFlowRole: scala.Option[java.lang.String] = None, serviceRole: scala.Option[java.lang.String] = None, autoScalingRole: scala.Option[java.lang.String] = None, supportedProducts: scala.Option[scala.List[java.lang.String]] = None, visibleToAllUsers: scala.Option[scala.Boolean] = None, steps: scala.Option[scala.List[models.StepDetail]] = None)
final case class DescribeStepInput(clusterId: java.lang.String, stepId: java.lang.String)
final case class DescribeClusterInput(clusterId: java.lang.String)
final case class ListStepsOutput(steps: scala.Option[scala.List[models.StepSummary]] = None, marker: scala.Option[java.lang.String] = None)
final case class JobFlowExecutionStatusDetail(state: java.lang.String, creationDateTime: java.time.Instant, startDateTime: scala.Option[java.time.Instant] = None, readyDateTime: scala.Option[java.time.Instant] = None, endDateTime: scala.Option[java.time.Instant] = None, lastStateChangeReason: scala.Option[java.lang.String] = None)
case object RemoveTagsOutput
final case class InstanceFleetStateChangeReason(code: scala.Option[java.lang.String] = None, message: scala.Option[java.lang.String] = None)
final case class AddJobFlowStepsInput(jobFlowId: java.lang.String, steps: scala.List[models.StepConfig])
final case class ListInstanceFleetsInput(clusterId: java.lang.String, marker: scala.Option[java.lang.String] = None)
final case class Step(id: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, actionOnFailure: scala.Option[java.lang.String] = None, status: scala.Option[models.StepStatus] = None, config: scala.Option[models.HadoopStepConfig] = None)
final case class InstanceGroupDetail(instanceRole: java.lang.String, instanceType: java.lang.String, market: java.lang.String, creationDateTime: java.time.Instant, state: java.lang.String, instanceRequestCount: scala.Int, instanceRunningCount: scala.Int, instanceGroupId: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, bidPrice: scala.Option[java.lang.String] = None, lastStateChangeReason: scala.Option[java.lang.String] = None, startDateTime: scala.Option[java.time.Instant] = None, readyDateTime: scala.Option[java.time.Instant] = None, endDateTime: scala.Option[java.time.Instant] = None)
final case class InstanceStatus(state: scala.Option[java.lang.String] = None, stateChangeReason: scala.Option[models.InstanceStateChangeReason] = None, timeline: scala.Option[models.InstanceTimeline] = None)
final case class ListInstancesOutput(instances: scala.Option[scala.List[models.Instance]] = None, marker: scala.Option[java.lang.String] = None)
final case class SecurityConfigurationSummary(name: scala.Option[java.lang.String] = None, creationDateTime: scala.Option[java.time.Instant] = None)
final case class DescribeJobFlowsInput(createdAfter: scala.Option[java.time.Instant] = None, createdBefore: scala.Option[java.time.Instant] = None, jobFlowIds: scala.Option[scala.List[java.lang.String]] = None, jobFlowStates: scala.Option[scala.List[java.lang.String]] = None)
final case class CancelStepsOutput(cancelStepsInfoList: scala.Option[scala.List[models.CancelStepsInfo]] = None)
final case class DescribeSecurityConfigurationInput(name: java.lang.String)
final case class DescribeSecurityConfigurationOutput(name: scala.Option[java.lang.String] = None, securityConfiguration: scala.Option[java.lang.String] = None, creationDateTime: scala.Option[java.time.Instant] = None)
final case class EbsBlockDeviceConfig(volumeSpecification: models.VolumeSpecification, volumesPerInstance: scala.Option[scala.Int] = None)
final case class InstanceGroupModifyConfig(instanceGroupId: java.lang.String, instanceCount: scala.Option[scala.Int] = None, ec2InstanceIdsToTerminate: scala.Option[scala.List[java.lang.String]] = None, shrinkPolicy: scala.Option[models.ShrinkPolicy] = None)
final case class ListInstanceGroupsInput(clusterId: java.lang.String, marker: scala.Option[java.lang.String] = None)
final case class SetVisibleToAllUsersInput(jobFlowIds: scala.List[java.lang.String], visibleToAllUsers: scala.Boolean)
final case class InstanceFleetStatus(state: scala.Option[java.lang.String] = None, stateChangeReason: scala.Option[models.InstanceFleetStateChangeReason] = None, timeline: scala.Option[models.InstanceFleetTimeline] = None)
final case class ScalingRule(name: java.lang.String, action: models.ScalingAction, trigger: models.ScalingTrigger, description: scala.Option[java.lang.String] = None)
final case class StepStatus(state: scala.Option[java.lang.String] = None, stateChangeReason: scala.Option[models.StepStateChangeReason] = None, failureDetails: scala.Option[models.FailureDetails] = None, timeline: scala.Option[models.StepTimeline] = None)
final case class InstanceTypeConfig(instanceType: java.lang.String, bidPrice: scala.Option[java.lang.String] = None, weightedCapacity: scala.Option[scala.Int] = None, bidPriceAsPercentageOfOnDemandPrice: scala.Option[scala.Double] = None, ebsConfiguration: scala.Option[models.EbsConfiguration] = None, configurations: scala.Option[scala.List[models.Configuration]] = None)
final case class KeyValue(key: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None)
final case class Application(name: scala.Option[java.lang.String] = None, version: scala.Option[java.lang.String] = None, args: scala.Option[scala.List[java.lang.String]] = None, additionalInfo: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = None)
final case class DeleteSecurityConfigurationInput(name: java.lang.String)
final case class HadoopStepConfig(jar: scala.Option[java.lang.String] = None, mainClass: scala.Option[java.lang.String] = None, properties: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = None, args: scala.Option[scala.List[java.lang.String]] = None)
final case class RunJobFlowInput(name: java.lang.String, instances: models.JobFlowInstancesConfig, repoUpgradeOnBoot: scala.Option[java.lang.String] = None, amiVersion: scala.Option[java.lang.String] = None, releaseLabel: scala.Option[java.lang.String] = None, customAmiId: scala.Option[java.lang.String] = None, scaleDownBehavior: scala.Option[java.lang.String] = None, applications: scala.Option[scala.List[models.Application]] = None, bootstrapActions: scala.Option[scala.List[models.BootstrapActionConfig]] = None, tags: scala.Option[scala.List[models.Tag]] = None, logUri: scala.Option[java.lang.String] = None, jobFlowRole: scala.Option[java.lang.String] = None, autoScalingRole: scala.Option[java.lang.String] = None, securityConfiguration: scala.Option[java.lang.String] = None, additionalInfo: scala.Option[java.lang.String] = None, serviceRole: scala.Option[java.lang.String] = None, ebsRootVolumeSize: scala.Option[scala.Int] = None, supportedProducts: scala.Option[scala.List[java.lang.String]] = None, visibleToAllUsers: scala.Option[scala.Boolean] = None, configurations: scala.Option[scala.List[models.Configuration]] = None, steps: scala.Option[scala.List[models.StepConfig]] = None, newSupportedProducts: scala.Option[scala.List[models.SupportedProductConfig]] = None)
final case class StepConfig(name: java.lang.String, hadoopJarStep: models.HadoopJarStepConfig, actionOnFailure: scala.Option[java.lang.String] = None)
final case class SetTerminationProtectionInput(jobFlowIds: scala.List[java.lang.String], terminationProtected: scala.Boolean)
final case class EbsConfiguration(ebsBlockDeviceConfigs: scala.Option[scala.List[models.EbsBlockDeviceConfig]] = None, ebsOptimized: scala.Option[scala.Boolean] = None)
final case class Command(name: scala.Option[java.lang.String] = None, scriptPath: scala.Option[java.lang.String] = None, args: scala.Option[scala.List[java.lang.String]] = None)
final case class ListSecurityConfigurationsInput(marker: scala.Option[java.lang.String] = None)
case object InternalServerError
final case class SimpleScalingPolicyConfiguration(scalingAdjustment: scala.Int, coolDown: scala.Option[scala.Int] = None, adjustmentType: scala.Option[java.lang.String] = None)
final case class ScriptBootstrapActionConfig(path: java.lang.String, args: scala.Option[scala.List[java.lang.String]] = None)
final case class InternalServerException(message: scala.Option[java.lang.String] = None)
final case class PutAutoScalingPolicyInput(clusterId: java.lang.String, instanceGroupId: java.lang.String, autoScalingPolicy: models.AutoScalingPolicy)
final case class FailureDetails(reason: scala.Option[java.lang.String] = None, message: scala.Option[java.lang.String] = None, logFile: scala.Option[java.lang.String] = None)
final case class AddInstanceFleetInput(clusterId: java.lang.String, instanceFleet: models.InstanceFleetConfig)
final case class ListClustersInput(createdAfter: scala.Option[java.time.Instant] = None, createdBefore: scala.Option[java.time.Instant] = None, clusterStates: scala.Option[scala.List[java.lang.String]] = None, marker: scala.Option[java.lang.String] = None)
final case class StepDetail(stepConfig: models.StepConfig, executionStatusDetail: models.StepExecutionStatusDetail)
final case class ClusterTimeline(creationDateTime: scala.Option[java.time.Instant] = None, readyDateTime: scala.Option[java.time.Instant] = None, endDateTime: scala.Option[java.time.Instant] = None)
final case class RemoveAutoScalingPolicyInput(clusterId: java.lang.String, instanceGroupId: java.lang.String)
final case class ListBootstrapActionsOutput(bootstrapActions: scala.Option[scala.List[models.Command]] = None, marker: scala.Option[java.lang.String] = None)
final case class InvalidRequestException(errorCode: scala.Option[java.lang.String] = None, message: scala.Option[java.lang.String] = None)
final case class Tag(key: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None)
final case class Instance(id: scala.Option[java.lang.String] = None, ec2InstanceId: scala.Option[java.lang.String] = None, instanceType: scala.Option[java.lang.String] = None, privateDnsName: scala.Option[java.lang.String] = None, publicDnsName: scala.Option[java.lang.String] = None, instanceGroupId: scala.Option[java.lang.String] = None, publicIpAddress: scala.Option[java.lang.String] = None, privateIpAddress: scala.Option[java.lang.String] = None, ebsVolumes: scala.Option[scala.List[models.EbsVolume]] = None, market: scala.Option[java.lang.String] = None, instanceFleetId: scala.Option[java.lang.String] = None, status: scala.Option[models.InstanceStatus] = None)
final case class CloudWatchAlarmDefinition(metricName: java.lang.String, threshold: scala.Double, comparisonOperator: java.lang.String, period: scala.Int, namespace: scala.Option[java.lang.String] = None, statistic: scala.Option[java.lang.String] = None, dimensions: scala.Option[scala.List[models.MetricDimension]] = None, evaluationPeriods: scala.Option[scala.Int] = None, unit: scala.Option[java.lang.String] = None)
final case class JobFlowInstancesConfig(emrManagedMasterSecurityGroup: scala.Option[java.lang.String] = None, ec2SubnetId: scala.Option[java.lang.String] = None, ec2KeyName: scala.Option[java.lang.String] = None, serviceAccessSecurityGroup: scala.Option[java.lang.String] = None, hadoopVersion: scala.Option[java.lang.String] = None, emrManagedSlaveSecurityGroup: scala.Option[java.lang.String] = None, instanceFleets: scala.Option[scala.List[models.InstanceFleetConfig]] = None, masterInstanceType: scala.Option[java.lang.String] = None, slaveInstanceType: scala.Option[java.lang.String] = None, placement: scala.Option[models.PlacementType] = None, additionalMasterSecurityGroups: scala.Option[scala.List[java.lang.String]] = None, additionalSlaveSecurityGroups: scala.Option[scala.List[java.lang.String]] = None, instanceCount: scala.Option[scala.Int] = None, ec2SubnetIds: scala.Option[scala.List[java.lang.String]] = None, keepJobFlowAliveWhenNoSteps: scala.Option[scala.Boolean] = None, terminationProtected: scala.Option[scala.Boolean] = None, instanceGroups: scala.Option[scala.List[models.InstanceGroupConfig]] = None)