package avias.emr.models
final case class PutAutoScalingPolicyOutput(clusterId: scala.Option[java.lang.String] = scala.None, instanceGroupId: scala.Option[java.lang.String] = scala.None, autoScalingPolicy: scala.Option[avias.emr.models.AutoScalingPolicyDescription] = scala.None)
final case class SupportedProductConfig(name: scala.Option[java.lang.String] = scala.None, args: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class InstanceTypeSpecification(bidPrice: scala.Option[java.lang.String] = scala.None, instanceType: scala.Option[java.lang.String] = scala.None, ebsBlockDevices: scala.Option[scala.List[avias.emr.models.EbsBlockDevice]] = scala.None, weightedCapacity: scala.Option[scala.Int] = scala.None, bidPriceAsPercentageOfOnDemandPrice: scala.Option[scala.Double] = scala.None, ebsOptimized: scala.Option[scala.Boolean] = scala.None, configurations: scala.Option[scala.List[avias.emr.models.Configuration]] = scala.None)
final case class StepExecutionStatusDetail(state: java.lang.String, creationDateTime: java.time.Instant, startDateTime: scala.Option[java.time.Instant] = scala.None, endDateTime: scala.Option[java.time.Instant] = scala.None, lastStateChangeReason: scala.Option[java.lang.String] = scala.None)
final case class ListBootstrapActionsInput(clusterId: java.lang.String, marker: scala.Option[java.lang.String] = scala.None)
final case class CancelStepsInput(clusterId: scala.Option[java.lang.String] = scala.None, stepIds: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class RemoveTagsInput(resourceId: java.lang.String, tagKeys: scala.List[java.lang.String])
final case class CreateSecurityConfigurationOutput(name: java.lang.String, creationDateTime: java.time.Instant)
final case class InstanceResizePolicy(instancesToTerminate: scala.Option[scala.List[java.lang.String]] = scala.None, instancesToProtect: scala.Option[scala.List[java.lang.String]] = scala.None, instanceTerminationTimeout: scala.Option[scala.Int] = scala.None)
final case class BootstrapActionDetail(bootstrapActionConfig: scala.Option[avias.emr.models.BootstrapActionConfig] = scala.None)
final case class CreateSecurityConfigurationInput(name: java.lang.String, securityConfiguration: java.lang.String)
case object DeleteSecurityConfigurationOutput
final case class ModifyInstanceGroupsInput(clusterId: scala.Option[java.lang.String] = scala.None, instanceGroups: scala.Option[scala.List[avias.emr.models.InstanceGroupModifyConfig]] = scala.None)
final case class ClusterSummary(id: scala.Option[java.lang.String] = scala.None, name: scala.Option[java.lang.String] = scala.None, status: scala.Option[avias.emr.models.ClusterStatus] = scala.None, normalizedInstanceHours: scala.Option[scala.Int] = scala.None)
final case class AutoScalingPolicyStateChangeReason(code: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class ListClustersOutput(clusters: scala.Option[scala.List[avias.emr.models.ClusterSummary]] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class AddInstanceGroupsInput(instanceGroups: scala.List[avias.emr.models.InstanceGroupConfig], jobFlowId: java.lang.String)
final case class ScalingTrigger(cloudWatchAlarmDefinition: avias.emr.models.CloudWatchAlarmDefinition)
final case class InstanceTimeline(creationDateTime: scala.Option[java.time.Instant] = scala.None, readyDateTime: scala.Option[java.time.Instant] = scala.None, endDateTime: scala.Option[java.time.Instant] = scala.None)
final case class InstanceGroupStatus(state: scala.Option[java.lang.String] = scala.None, stateChangeReason: scala.Option[avias.emr.models.InstanceGroupStateChangeReason] = scala.None, timeline: scala.Option[avias.emr.models.InstanceGroupTimeline] = scala.None)
final case class StepStateChangeReason(code: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class ModifyInstanceFleetInput(clusterId: java.lang.String, instanceFleet: avias.emr.models.InstanceFleetModifyConfig)
final case class HadoopJarStepConfig(jar: java.lang.String, mainClass: scala.Option[java.lang.String] = scala.None, properties: scala.Option[scala.List[avias.emr.models.KeyValue]] = scala.None, args: scala.Option[scala.List[java.lang.String]] = scala.None)
case object RemoveAutoScalingPolicyOutput
final case class Ec2InstanceAttributes(iamInstanceProfile: scala.Option[java.lang.String] = scala.None, emrManagedMasterSecurityGroup: scala.Option[java.lang.String] = scala.None, serviceAccessSecurityGroup: scala.Option[java.lang.String] = scala.None, ec2KeyName: scala.Option[java.lang.String] = scala.None, ec2AvailabilityZone: scala.Option[java.lang.String] = scala.None, emrManagedSlaveSecurityGroup: scala.Option[java.lang.String] = scala.None, ec2SubnetId: scala.Option[java.lang.String] = scala.None, requestedEc2SubnetIds: scala.Option[scala.List[java.lang.String]] = scala.None, requestedEc2AvailabilityZones: scala.Option[scala.List[java.lang.String]] = scala.None, additionalMasterSecurityGroups: scala.Option[scala.List[java.lang.String]] = scala.None, additionalSlaveSecurityGroups: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class DescribeJobFlowsOutput(jobFlows: scala.Option[scala.List[avias.emr.models.JobFlowDetail]] = scala.None)
final case class ListInstanceGroupsOutput(instanceGroups: scala.Option[scala.List[avias.emr.models.InstanceGroup]] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class RunJobFlowOutput(jobFlowId: scala.Option[java.lang.String] = scala.None)
final case class SpotProvisioningSpecification(timeoutDurationMinutes: scala.Int, timeoutAction: java.lang.String, blockDurationMinutes: scala.Option[scala.Int] = scala.None)
final case class ScalingConstraints(minCapacity: scala.Int, maxCapacity: scala.Int)
final case class InstanceFleetTimeline(creationDateTime: scala.Option[java.time.Instant] = scala.None, readyDateTime: scala.Option[java.time.Instant] = scala.None, endDateTime: scala.Option[java.time.Instant] = scala.None)
final case class AddInstanceGroupsOutput(jobFlowId: scala.Option[java.lang.String] = scala.None, instanceGroupIds: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class Cluster(repoUpgradeOnBoot: scala.Option[java.lang.String] = scala.None, customAmiId: scala.Option[java.lang.String] = scala.None, ec2InstanceAttributes: scala.Option[avias.emr.models.Ec2InstanceAttributes] = scala.None, runningAmiVersion: scala.Option[java.lang.String] = scala.None, requestedAmiVersion: scala.Option[java.lang.String] = scala.None, logUri: scala.Option[java.lang.String] = scala.None, serviceRole: scala.Option[java.lang.String] = scala.None, releaseLabel: scala.Option[java.lang.String] = scala.None, masterPublicDnsName: scala.Option[java.lang.String] = scala.None, name: scala.Option[java.lang.String] = scala.None, scaleDownBehavior: scala.Option[java.lang.String] = scala.None, applications: scala.Option[scala.List[avias.emr.models.Application]] = scala.None, tags: scala.Option[scala.List[avias.emr.models.Tag]] = scala.None, status: scala.Option[avias.emr.models.ClusterStatus] = scala.None, securityConfiguration: scala.Option[java.lang.String] = scala.None, autoScalingRole: scala.Option[java.lang.String] = scala.None, id: scala.Option[java.lang.String] = scala.None, normalizedInstanceHours: scala.Option[scala.Int] = scala.None, ebsRootVolumeSize: scala.Option[scala.Int] = scala.None, autoTerminate: scala.Option[scala.Boolean] = scala.None, terminationProtected: scala.Option[scala.Boolean] = scala.None, visibleToAllUsers: scala.Option[scala.Boolean] = scala.None, configurations: scala.Option[scala.List[avias.emr.models.Configuration]] = scala.None, instanceCollectionType: scala.Option[java.lang.String] = scala.None)
final case class InstanceGroupTimeline(creationDateTime: scala.Option[java.time.Instant] = scala.None, readyDateTime: scala.Option[java.time.Instant] = scala.None, endDateTime: scala.Option[java.time.Instant] = scala.None)
final case class AutoScalingPolicy(constraints: avias.emr.models.ScalingConstraints, rules: scala.List[avias.emr.models.ScalingRule])
final case class InstanceFleetProvisioningSpecifications(spotSpecification: avias.emr.models.SpotProvisioningSpecification)
final case class JobFlowInstancesDetail(masterInstanceType: java.lang.String, slaveInstanceType: java.lang.String, instanceCount: scala.Int, ec2KeyName: scala.Option[java.lang.String] = scala.None, ec2SubnetId: scala.Option[java.lang.String] = scala.None, hadoopVersion: scala.Option[java.lang.String] = scala.None, instanceGroups: scala.Option[scala.List[avias.emr.models.InstanceGroupDetail]] = scala.None, placement: scala.Option[avias.emr.models.PlacementType] = scala.None, masterPublicDnsName: scala.Option[java.lang.String] = scala.None, masterInstanceId: scala.Option[java.lang.String] = scala.None, normalizedInstanceHours: scala.Option[scala.Int] = scala.None, keepJobFlowAliveWhenNoSteps: scala.Option[scala.Boolean] = scala.None, terminationProtected: scala.Option[scala.Boolean] = scala.None)
final case class ShrinkPolicy(decommissionTimeout: scala.Option[scala.Int] = scala.None, instanceResizePolicy: scala.Option[avias.emr.models.InstanceResizePolicy] = scala.None)
final case class InstanceFleet(instanceFleetType: scala.Option[java.lang.String] = scala.None, name: scala.Option[java.lang.String] = scala.None, launchSpecifications: scala.Option[avias.emr.models.InstanceFleetProvisioningSpecifications] = scala.None, instanceTypeSpecifications: scala.Option[scala.List[avias.emr.models.InstanceTypeSpecification]] = scala.None, id: scala.Option[java.lang.String] = scala.None, targetOnDemandCapacity: scala.Option[scala.Int] = scala.None, targetSpotCapacity: scala.Option[scala.Int] = scala.None, provisionedOnDemandCapacity: scala.Option[scala.Int] = scala.None, provisionedSpotCapacity: scala.Option[scala.Int] = scala.None, status: scala.Option[avias.emr.models.InstanceFleetStatus] = scala.None)
final case class InstanceGroupStateChangeReason(code: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
case object AddTagsOutput
final case class StepTimeline(creationDateTime: scala.Option[java.time.Instant] = scala.None, startDateTime: scala.Option[java.time.Instant] = scala.None, endDateTime: scala.Option[java.time.Instant] = scala.None)
final case class ListSecurityConfigurationsOutput(securityConfigurations: scala.Option[scala.List[avias.emr.models.SecurityConfigurationSummary]] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class InstanceFleetConfig(instanceFleetType: java.lang.String, instanceTypeConfigs: scala.Option[scala.List[avias.emr.models.InstanceTypeConfig]] = scala.None, name: scala.Option[java.lang.String] = scala.None, launchSpecifications: scala.Option[avias.emr.models.InstanceFleetProvisioningSpecifications] = scala.None, targetOnDemandCapacity: scala.Option[scala.Int] = scala.None, targetSpotCapacity: scala.Option[scala.Int] = scala.None)
final case class AddJobFlowStepsOutput(stepIds: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class InstanceGroup(status: scala.Option[avias.emr.models.InstanceGroupStatus] = scala.None, instanceType: scala.Option[java.lang.String] = scala.None, name: scala.Option[java.lang.String] = scala.None, bidPrice: scala.Option[java.lang.String] = scala.None, instanceGroupType: scala.Option[java.lang.String] = scala.None, shrinkPolicy: scala.Option[avias.emr.models.ShrinkPolicy] = scala.None, market: scala.Option[java.lang.String] = scala.None, id: scala.Option[java.lang.String] = scala.None, ebsBlockDevices: scala.Option[scala.List[avias.emr.models.EbsBlockDevice]] = scala.None, autoScalingPolicy: scala.Option[avias.emr.models.AutoScalingPolicyDescription] = scala.None, ebsOptimized: scala.Option[scala.Boolean] = scala.None, requestedInstanceCount: scala.Option[scala.Int] = scala.None, runningInstanceCount: scala.Option[scala.Int] = scala.None, configurations: scala.Option[scala.List[avias.emr.models.Configuration]] = scala.None)
final case class ListInstancesInput(clusterId: java.lang.String, instanceGroupTypes: scala.Option[scala.List[java.lang.String]] = scala.None, instanceFleetType: scala.Option[java.lang.String] = scala.None, instanceFleetId: scala.Option[java.lang.String] = scala.None, instanceGroupId: scala.Option[java.lang.String] = scala.None, instanceStates: scala.Option[scala.List[java.lang.String]] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class ScalingAction(simpleScalingPolicyConfiguration: avias.emr.models.SimpleScalingPolicyConfiguration, market: scala.Option[java.lang.String] = scala.None)
final case class AddInstanceFleetOutput(clusterId: scala.Option[java.lang.String] = scala.None, instanceFleetId: scala.Option[java.lang.String] = scala.None)
final case class InstanceFleetModifyConfig(instanceFleetId: java.lang.String, targetOnDemandCapacity: scala.Option[scala.Int] = scala.None, targetSpotCapacity: scala.Option[scala.Int] = scala.None)
final case class InstanceGroupConfig(instanceRole: java.lang.String, instanceType: java.lang.String, instanceCount: scala.Int, name: scala.Option[java.lang.String] = scala.None, bidPrice: scala.Option[java.lang.String] = scala.None, autoScalingPolicy: scala.Option[avias.emr.models.AutoScalingPolicy] = scala.None, market: scala.Option[java.lang.String] = scala.None, ebsConfiguration: scala.Option[avias.emr.models.EbsConfiguration] = scala.None, configurations: scala.Option[scala.List[avias.emr.models.Configuration]] = scala.None)
final case class CancelStepsInfo(stepId: scala.Option[java.lang.String] = scala.None, status: scala.Option[java.lang.String] = scala.None, reason: scala.Option[java.lang.String] = scala.None)
final case class ClusterStateChangeReason(code: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class Configuration(classification: scala.Option[java.lang.String] = scala.None, configurations: scala.Option[scala.List[avias.emr.models.Configuration]] = scala.None, properties: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None)
final case class DescribeStepOutput(step: scala.Option[avias.emr.models.Step] = scala.None)
final case class BootstrapActionConfig(name: java.lang.String, scriptBootstrapAction: avias.emr.models.ScriptBootstrapActionConfig)
final case class EbsBlockDevice(volumeSpecification: scala.Option[avias.emr.models.VolumeSpecification] = scala.None, device: scala.Option[java.lang.String] = scala.None)
final case class ListInstanceFleetsOutput(instanceFleets: scala.Option[scala.List[avias.emr.models.InstanceFleet]] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class AutoScalingPolicyStatus(state: scala.Option[java.lang.String] = scala.None, stateChangeReason: scala.Option[avias.emr.models.AutoScalingPolicyStateChangeReason] = scala.None)
final case class TerminateJobFlowsInput(jobFlowIds: scala.List[java.lang.String])
final case class MetricDimension(key: scala.Option[java.lang.String] = scala.None, value: scala.Option[java.lang.String] = scala.None)
final case class EbsVolume(device: scala.Option[java.lang.String] = scala.None, volumeId: scala.Option[java.lang.String] = scala.None)
final case class AddTagsInput(resourceId: java.lang.String, tags: scala.List[avias.emr.models.Tag])
final case class PlacementType(availabilityZone: scala.Option[java.lang.String] = scala.None, availabilityZones: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class ListStepsInput(clusterId: java.lang.String, stepStates: scala.Option[scala.List[java.lang.String]] = scala.None, stepIds: scala.Option[scala.List[java.lang.String]] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class StepSummary(id: scala.Option[java.lang.String] = scala.None, name: scala.Option[java.lang.String] = scala.None, actionOnFailure: scala.Option[java.lang.String] = scala.None, status: scala.Option[avias.emr.models.StepStatus] = scala.None, config: scala.Option[avias.emr.models.HadoopStepConfig] = scala.None)
final case class InstanceStateChangeReason(code: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class AutoScalingPolicyDescription(status: scala.Option[avias.emr.models.AutoScalingPolicyStatus] = scala.None, constraints: scala.Option[avias.emr.models.ScalingConstraints] = scala.None, rules: scala.Option[scala.List[avias.emr.models.ScalingRule]] = scala.None)
final case class VolumeSpecification(volumeType: java.lang.String, sizeInGB: scala.Int, iops: scala.Option[scala.Int] = scala.None)
final case class ClusterStatus(state: scala.Option[java.lang.String] = scala.None, stateChangeReason: scala.Option[avias.emr.models.ClusterStateChangeReason] = scala.None, timeline: scala.Option[avias.emr.models.ClusterTimeline] = scala.None)
final case class DescribeClusterOutput(cluster: scala.Option[avias.emr.models.Cluster] = scala.None)
final case class JobFlowDetail(jobFlowId: java.lang.String, name: java.lang.String, instances: avias.emr.models.JobFlowInstancesDetail, executionStatusDetail: avias.emr.models.JobFlowExecutionStatusDetail, amiVersion: scala.Option[java.lang.String] = scala.None, scaleDownBehavior: scala.Option[java.lang.String] = scala.None, bootstrapActions: scala.Option[scala.List[avias.emr.models.BootstrapActionDetail]] = scala.None, logUri: scala.Option[java.lang.String] = scala.None, jobFlowRole: scala.Option[java.lang.String] = scala.None, serviceRole: scala.Option[java.lang.String] = scala.None, autoScalingRole: scala.Option[java.lang.String] = scala.None, supportedProducts: scala.Option[scala.List[java.lang.String]] = scala.None, visibleToAllUsers: scala.Option[scala.Boolean] = scala.None, steps: scala.Option[scala.List[avias.emr.models.StepDetail]] = scala.None)
final case class DescribeStepInput(clusterId: java.lang.String, stepId: java.lang.String)
final case class DescribeClusterInput(clusterId: java.lang.String)
final case class ListStepsOutput(steps: scala.Option[scala.List[avias.emr.models.StepSummary]] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class JobFlowExecutionStatusDetail(state: java.lang.String, creationDateTime: java.time.Instant, startDateTime: scala.Option[java.time.Instant] = scala.None, readyDateTime: scala.Option[java.time.Instant] = scala.None, endDateTime: scala.Option[java.time.Instant] = scala.None, lastStateChangeReason: scala.Option[java.lang.String] = scala.None)
case object RemoveTagsOutput
final case class InstanceFleetStateChangeReason(code: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class AddJobFlowStepsInput(jobFlowId: java.lang.String, steps: scala.List[avias.emr.models.StepConfig])
final case class ListInstanceFleetsInput(clusterId: java.lang.String, marker: scala.Option[java.lang.String] = scala.None)
final case class Step(id: scala.Option[java.lang.String] = scala.None, name: scala.Option[java.lang.String] = scala.None, actionOnFailure: scala.Option[java.lang.String] = scala.None, status: scala.Option[avias.emr.models.StepStatus] = scala.None, config: scala.Option[avias.emr.models.HadoopStepConfig] = scala.None)
final case class InstanceGroupDetail(instanceRole: java.lang.String, instanceType: java.lang.String, market: java.lang.String, creationDateTime: java.time.Instant, state: java.lang.String, instanceRequestCount: scala.Int, instanceRunningCount: scala.Int, instanceGroupId: scala.Option[java.lang.String] = scala.None, name: scala.Option[java.lang.String] = scala.None, bidPrice: scala.Option[java.lang.String] = scala.None, lastStateChangeReason: scala.Option[java.lang.String] = scala.None, startDateTime: scala.Option[java.time.Instant] = scala.None, readyDateTime: scala.Option[java.time.Instant] = scala.None, endDateTime: scala.Option[java.time.Instant] = scala.None)
final case class InstanceStatus(state: scala.Option[java.lang.String] = scala.None, stateChangeReason: scala.Option[avias.emr.models.InstanceStateChangeReason] = scala.None, timeline: scala.Option[avias.emr.models.InstanceTimeline] = scala.None)
final case class ListInstancesOutput(instances: scala.Option[scala.List[avias.emr.models.Instance]] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class SecurityConfigurationSummary(name: scala.Option[java.lang.String] = scala.None, creationDateTime: scala.Option[java.time.Instant] = scala.None)
final case class DescribeJobFlowsInput(createdAfter: scala.Option[java.time.Instant] = scala.None, createdBefore: scala.Option[java.time.Instant] = scala.None, jobFlowIds: scala.Option[scala.List[java.lang.String]] = scala.None, jobFlowStates: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class CancelStepsOutput(cancelStepsInfoList: scala.Option[scala.List[avias.emr.models.CancelStepsInfo]] = scala.None)
final case class DescribeSecurityConfigurationInput(name: java.lang.String)
final case class DescribeSecurityConfigurationOutput(name: scala.Option[java.lang.String] = scala.None, securityConfiguration: scala.Option[java.lang.String] = scala.None, creationDateTime: scala.Option[java.time.Instant] = scala.None)
final case class EbsBlockDeviceConfig(volumeSpecification: avias.emr.models.VolumeSpecification, volumesPerInstance: scala.Option[scala.Int] = scala.None)
final case class InstanceGroupModifyConfig(instanceGroupId: java.lang.String, instanceCount: scala.Option[scala.Int] = scala.None, ec2InstanceIdsToTerminate: scala.Option[scala.List[java.lang.String]] = scala.None, shrinkPolicy: scala.Option[avias.emr.models.ShrinkPolicy] = scala.None)
final case class ListInstanceGroupsInput(clusterId: java.lang.String, marker: scala.Option[java.lang.String] = scala.None)
final case class SetVisibleToAllUsersInput(jobFlowIds: scala.List[java.lang.String], visibleToAllUsers: scala.Boolean)
final case class InstanceFleetStatus(state: scala.Option[java.lang.String] = scala.None, stateChangeReason: scala.Option[avias.emr.models.InstanceFleetStateChangeReason] = scala.None, timeline: scala.Option[avias.emr.models.InstanceFleetTimeline] = scala.None)
final case class ScalingRule(name: java.lang.String, action: avias.emr.models.ScalingAction, trigger: avias.emr.models.ScalingTrigger, description: scala.Option[java.lang.String] = scala.None)
final case class StepStatus(state: scala.Option[java.lang.String] = scala.None, stateChangeReason: scala.Option[avias.emr.models.StepStateChangeReason] = scala.None, failureDetails: scala.Option[avias.emr.models.FailureDetails] = scala.None, timeline: scala.Option[avias.emr.models.StepTimeline] = scala.None)
final case class InstanceTypeConfig(instanceType: java.lang.String, bidPrice: scala.Option[java.lang.String] = scala.None, weightedCapacity: scala.Option[scala.Int] = scala.None, bidPriceAsPercentageOfOnDemandPrice: scala.Option[scala.Double] = scala.None, ebsConfiguration: scala.Option[avias.emr.models.EbsConfiguration] = scala.None, configurations: scala.Option[scala.List[avias.emr.models.Configuration]] = scala.None)
final case class KeyValue(key: scala.Option[java.lang.String] = scala.None, value: scala.Option[java.lang.String] = scala.None)
final case class Application(name: scala.Option[java.lang.String] = scala.None, version: scala.Option[java.lang.String] = scala.None, args: scala.Option[scala.List[java.lang.String]] = scala.None, additionalInfo: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None)
final case class DeleteSecurityConfigurationInput(name: java.lang.String)
final case class HadoopStepConfig(jar: scala.Option[java.lang.String] = scala.None, mainClass: scala.Option[java.lang.String] = scala.None, properties: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, args: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class RunJobFlowInput(name: java.lang.String, instances: avias.emr.models.JobFlowInstancesConfig, repoUpgradeOnBoot: scala.Option[java.lang.String] = scala.None, amiVersion: scala.Option[java.lang.String] = scala.None, releaseLabel: scala.Option[java.lang.String] = scala.None, customAmiId: scala.Option[java.lang.String] = scala.None, scaleDownBehavior: scala.Option[java.lang.String] = scala.None, applications: scala.Option[scala.List[avias.emr.models.Application]] = scala.None, bootstrapActions: scala.Option[scala.List[avias.emr.models.BootstrapActionConfig]] = scala.None, tags: scala.Option[scala.List[avias.emr.models.Tag]] = scala.None, logUri: scala.Option[java.lang.String] = scala.None, jobFlowRole: scala.Option[java.lang.String] = scala.None, autoScalingRole: scala.Option[java.lang.String] = scala.None, securityConfiguration: scala.Option[java.lang.String] = scala.None, additionalInfo: scala.Option[java.lang.String] = scala.None, serviceRole: scala.Option[java.lang.String] = scala.None, ebsRootVolumeSize: scala.Option[scala.Int] = scala.None, supportedProducts: scala.Option[scala.List[java.lang.String]] = scala.None, visibleToAllUsers: scala.Option[scala.Boolean] = scala.None, configurations: scala.Option[scala.List[avias.emr.models.Configuration]] = scala.None, steps: scala.Option[scala.List[avias.emr.models.StepConfig]] = scala.None, newSupportedProducts: scala.Option[scala.List[avias.emr.models.SupportedProductConfig]] = scala.None)
final case class StepConfig(name: java.lang.String, hadoopJarStep: avias.emr.models.HadoopJarStepConfig, actionOnFailure: scala.Option[java.lang.String] = scala.None)
final case class SetTerminationProtectionInput(jobFlowIds: scala.List[java.lang.String], terminationProtected: scala.Boolean)
final case class EbsConfiguration(ebsBlockDeviceConfigs: scala.Option[scala.List[avias.emr.models.EbsBlockDeviceConfig]] = scala.None, ebsOptimized: scala.Option[scala.Boolean] = scala.None)
final case class Command(name: scala.Option[java.lang.String] = scala.None, scriptPath: scala.Option[java.lang.String] = scala.None, args: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class ListSecurityConfigurationsInput(marker: scala.Option[java.lang.String] = scala.None)
case object InternalServerError
final case class SimpleScalingPolicyConfiguration(scalingAdjustment: scala.Int, coolDown: scala.Option[scala.Int] = scala.None, adjustmentType: scala.Option[java.lang.String] = scala.None)
final case class ScriptBootstrapActionConfig(path: java.lang.String, args: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class InternalServerException(message: scala.Option[java.lang.String] = scala.None)
final case class PutAutoScalingPolicyInput(clusterId: java.lang.String, instanceGroupId: java.lang.String, autoScalingPolicy: avias.emr.models.AutoScalingPolicy)
final case class FailureDetails(reason: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None, logFile: scala.Option[java.lang.String] = scala.None)
final case class AddInstanceFleetInput(clusterId: java.lang.String, instanceFleet: avias.emr.models.InstanceFleetConfig)
final case class ListClustersInput(createdAfter: scala.Option[java.time.Instant] = scala.None, createdBefore: scala.Option[java.time.Instant] = scala.None, clusterStates: scala.Option[scala.List[java.lang.String]] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class StepDetail(stepConfig: avias.emr.models.StepConfig, executionStatusDetail: avias.emr.models.StepExecutionStatusDetail)
final case class ClusterTimeline(creationDateTime: scala.Option[java.time.Instant] = scala.None, readyDateTime: scala.Option[java.time.Instant] = scala.None, endDateTime: scala.Option[java.time.Instant] = scala.None)
final case class RemoveAutoScalingPolicyInput(clusterId: java.lang.String, instanceGroupId: java.lang.String)
final case class ListBootstrapActionsOutput(bootstrapActions: scala.Option[scala.List[avias.emr.models.Command]] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class InvalidRequestException(errorCode: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class Tag(key: scala.Option[java.lang.String] = scala.None, value: scala.Option[java.lang.String] = scala.None)
final case class Instance(id: scala.Option[java.lang.String] = scala.None, ec2InstanceId: scala.Option[java.lang.String] = scala.None, instanceType: scala.Option[java.lang.String] = scala.None, privateDnsName: scala.Option[java.lang.String] = scala.None, publicDnsName: scala.Option[java.lang.String] = scala.None, instanceGroupId: scala.Option[java.lang.String] = scala.None, publicIpAddress: scala.Option[java.lang.String] = scala.None, privateIpAddress: scala.Option[java.lang.String] = scala.None, ebsVolumes: scala.Option[scala.List[avias.emr.models.EbsVolume]] = scala.None, market: scala.Option[java.lang.String] = scala.None, instanceFleetId: scala.Option[java.lang.String] = scala.None, status: scala.Option[avias.emr.models.InstanceStatus] = scala.None)
final case class CloudWatchAlarmDefinition(metricName: java.lang.String, threshold: scala.Double, comparisonOperator: java.lang.String, period: scala.Int, namespace: scala.Option[java.lang.String] = scala.None, statistic: scala.Option[java.lang.String] = scala.None, dimensions: scala.Option[scala.List[avias.emr.models.MetricDimension]] = scala.None, evaluationPeriods: scala.Option[scala.Int] = scala.None, unit: scala.Option[java.lang.String] = scala.None)
final case class JobFlowInstancesConfig(emrManagedMasterSecurityGroup: scala.Option[java.lang.String] = scala.None, ec2SubnetId: scala.Option[java.lang.String] = scala.None, ec2KeyName: scala.Option[java.lang.String] = scala.None, serviceAccessSecurityGroup: scala.Option[java.lang.String] = scala.None, hadoopVersion: scala.Option[java.lang.String] = scala.None, emrManagedSlaveSecurityGroup: scala.Option[java.lang.String] = scala.None, instanceFleets: scala.Option[scala.List[avias.emr.models.InstanceFleetConfig]] = scala.None, masterInstanceType: scala.Option[java.lang.String] = scala.None, slaveInstanceType: scala.Option[java.lang.String] = scala.None, placement: scala.Option[avias.emr.models.PlacementType] = scala.None, additionalMasterSecurityGroups: scala.Option[scala.List[java.lang.String]] = scala.None, additionalSlaveSecurityGroups: scala.Option[scala.List[java.lang.String]] = scala.None, instanceCount: scala.Option[scala.Int] = scala.None, ec2SubnetIds: scala.Option[scala.List[java.lang.String]] = scala.None, keepJobFlowAliveWhenNoSteps: scala.Option[scala.Boolean] = scala.None, terminationProtected: scala.Option[scala.Boolean] = scala.None, instanceGroups: scala.Option[scala.List[avias.emr.models.InstanceGroupConfig]] = scala.None)