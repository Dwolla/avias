package org.lyranthe.araethura.storagegateway.http4s
import org.http4s.Method._
import org.lyranthe.araethura.storagegateway.circe._
import org.lyranthe.araethura.storagegateway.models
class AmazonstoragegatewayClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.storagegateway.Amazonstoragegateway[F] {
  private[this] final val ServiceType: String = "storagegateway"
  private[this] final val ServiceAndPrefix: Option[String] = Some("StorageGateway_20130630")
  override def shutdownGateway(input: models.ShutdownGatewayInput): F[models.ShutdownGatewayOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ShutdownGatewayOutput, models.ShutdownGatewayInput](client, awsData, ServiceType, ServiceAndPrefix, "ShutdownGateway", POST, "/", input)
  override def describeCachediSCSIVolumes(input: models.DescribeCachediSCSIVolumesInput): F[models.DescribeCachediSCSIVolumesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeCachediSCSIVolumesOutput, models.DescribeCachediSCSIVolumesInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeCachediSCSIVolumes", POST, "/", input)
  override def updateMaintenanceStartTime(input: models.UpdateMaintenanceStartTimeInput): F[models.UpdateMaintenanceStartTimeOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateMaintenanceStartTimeOutput, models.UpdateMaintenanceStartTimeInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateMaintenanceStartTime", POST, "/", input)
  override def describeCache(input: models.DescribeCacheInput): F[models.DescribeCacheOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeCacheOutput, models.DescribeCacheInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeCache", POST, "/", input)
  override def createCachediSCSIVolume(input: models.CreateCachediSCSIVolumeInput): F[models.CreateCachediSCSIVolumeOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateCachediSCSIVolumeOutput, models.CreateCachediSCSIVolumeInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateCachediSCSIVolume", POST, "/", input)
  override def deleteBandwidthRateLimit(input: models.DeleteBandwidthRateLimitInput): F[models.DeleteBandwidthRateLimitOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteBandwidthRateLimitOutput, models.DeleteBandwidthRateLimitInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteBandwidthRateLimit", POST, "/", input)
  override def listVolumeInitiators(input: models.ListVolumeInitiatorsInput): F[models.ListVolumeInitiatorsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListVolumeInitiatorsOutput, models.ListVolumeInitiatorsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListVolumeInitiators", POST, "/", input)
  override def deleteTapeArchive(input: models.DeleteTapeArchiveInput): F[models.DeleteTapeArchiveOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteTapeArchiveOutput, models.DeleteTapeArchiveInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteTapeArchive", POST, "/", input)
  override def listLocalDisks(input: models.ListLocalDisksInput): F[models.ListLocalDisksOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListLocalDisksOutput, models.ListLocalDisksInput](client, awsData, ServiceType, ServiceAndPrefix, "ListLocalDisks", POST, "/", input)
  override def removeTagsFromResource(input: models.RemoveTagsFromResourceInput): F[models.RemoveTagsFromResourceOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RemoveTagsFromResourceOutput, models.RemoveTagsFromResourceInput](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTagsFromResource", POST, "/", input)
  override def activateGateway(input: models.ActivateGatewayInput): F[models.ActivateGatewayOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ActivateGatewayOutput, models.ActivateGatewayInput](client, awsData, ServiceType, ServiceAndPrefix, "ActivateGateway", POST, "/", input)
  override def deleteTape(input: models.DeleteTapeInput): F[models.DeleteTapeOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteTapeOutput, models.DeleteTapeInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteTape", POST, "/", input)
  override def describeWorkingStorage(input: models.DescribeWorkingStorageInput): F[models.DescribeWorkingStorageOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeWorkingStorageOutput, models.DescribeWorkingStorageInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeWorkingStorage", POST, "/", input)
  override def resetCache(input: models.ResetCacheInput): F[models.ResetCacheOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ResetCacheOutput, models.ResetCacheInput](client, awsData, ServiceType, ServiceAndPrefix, "ResetCache", POST, "/", input)
  override def listVolumeRecoveryPoints(input: models.ListVolumeRecoveryPointsInput): F[models.ListVolumeRecoveryPointsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListVolumeRecoveryPointsOutput, models.ListVolumeRecoveryPointsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListVolumeRecoveryPoints", POST, "/", input)
  override def describeNFSFileShares(input: models.DescribeNFSFileSharesInput): F[models.DescribeNFSFileSharesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeNFSFileSharesOutput, models.DescribeNFSFileSharesInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeNFSFileShares", POST, "/", input)
  override def describeTapeArchives(input: models.DescribeTapeArchivesInput): F[models.DescribeTapeArchivesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeTapeArchivesOutput, models.DescribeTapeArchivesInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTapeArchives", POST, "/", input)
  override def describeMaintenanceStartTime(input: models.DescribeMaintenanceStartTimeInput): F[models.DescribeMaintenanceStartTimeOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeMaintenanceStartTimeOutput, models.DescribeMaintenanceStartTimeInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceStartTime", POST, "/", input)
  override def describeStorediSCSIVolumes(input: models.DescribeStorediSCSIVolumesInput): F[models.DescribeStorediSCSIVolumesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeStorediSCSIVolumesOutput, models.DescribeStorediSCSIVolumesInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeStorediSCSIVolumes", POST, "/", input)
  override def setLocalConsolePassword(input: models.SetLocalConsolePasswordInput): F[models.SetLocalConsolePasswordOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.SetLocalConsolePasswordOutput, models.SetLocalConsolePasswordInput](client, awsData, ServiceType, ServiceAndPrefix, "SetLocalConsolePassword", POST, "/", input)
  override def createTapeWithBarcode(input: models.CreateTapeWithBarcodeInput): F[models.CreateTapeWithBarcodeOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateTapeWithBarcodeOutput, models.CreateTapeWithBarcodeInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateTapeWithBarcode", POST, "/", input)
  override def describeBandwidthRateLimit(input: models.DescribeBandwidthRateLimitInput): F[models.DescribeBandwidthRateLimitOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeBandwidthRateLimitOutput, models.DescribeBandwidthRateLimitInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeBandwidthRateLimit", POST, "/", input)
  override def listVolumes(input: models.ListVolumesInput): F[models.ListVolumesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListVolumesOutput, models.ListVolumesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListVolumes", POST, "/", input)
  override def createStorediSCSIVolume(input: models.CreateStorediSCSIVolumeInput): F[models.CreateStorediSCSIVolumeOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateStorediSCSIVolumeOutput, models.CreateStorediSCSIVolumeInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateStorediSCSIVolume", POST, "/", input)
  override def describeGatewayInformation(input: models.DescribeGatewayInformationInput): F[models.DescribeGatewayInformationOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeGatewayInformationOutput, models.DescribeGatewayInformationInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeGatewayInformation", POST, "/", input)
  override def describeUploadBuffer(input: models.DescribeUploadBufferInput): F[models.DescribeUploadBufferOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeUploadBufferOutput, models.DescribeUploadBufferInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeUploadBuffer", POST, "/", input)
  override def deleteSnapshotSchedule(input: models.DeleteSnapshotScheduleInput): F[models.DeleteSnapshotScheduleOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteSnapshotScheduleOutput, models.DeleteSnapshotScheduleInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteSnapshotSchedule", POST, "/", input)
  override def updateGatewayInformation(input: models.UpdateGatewayInformationInput): F[models.UpdateGatewayInformationOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateGatewayInformationOutput, models.UpdateGatewayInformationInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateGatewayInformation", POST, "/", input)
  override def retrieveTapeArchive(input: models.RetrieveTapeArchiveInput): F[models.RetrieveTapeArchiveOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RetrieveTapeArchiveOutput, models.RetrieveTapeArchiveInput](client, awsData, ServiceType, ServiceAndPrefix, "RetrieveTapeArchive", POST, "/", input)
  override def disableGateway(input: models.DisableGatewayInput): F[models.DisableGatewayOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DisableGatewayOutput, models.DisableGatewayInput](client, awsData, ServiceType, ServiceAndPrefix, "DisableGateway", POST, "/", input)
  override def listGateways(input: models.ListGatewaysInput): F[models.ListGatewaysOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListGatewaysOutput, models.ListGatewaysInput](client, awsData, ServiceType, ServiceAndPrefix, "ListGateways", POST, "/", input)
  override def createSnapshotFromVolumeRecoveryPoint(input: models.CreateSnapshotFromVolumeRecoveryPointInput): F[models.CreateSnapshotFromVolumeRecoveryPointOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateSnapshotFromVolumeRecoveryPointOutput, models.CreateSnapshotFromVolumeRecoveryPointInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateSnapshotFromVolumeRecoveryPoint", POST, "/", input)
  override def updateGatewaySoftwareNow(input: models.UpdateGatewaySoftwareNowInput): F[models.UpdateGatewaySoftwareNowOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateGatewaySoftwareNowOutput, models.UpdateGatewaySoftwareNowInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateGatewaySoftwareNow", POST, "/", input)
  override def deleteFileShare(input: models.DeleteFileShareInput): F[models.DeleteFileShareOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteFileShareOutput, models.DeleteFileShareInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteFileShare", POST, "/", input)
  override def listTapes(input: models.ListTapesInput): F[models.ListTapesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTapesOutput, models.ListTapesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListTapes", POST, "/", input)
  override def addTagsToResource(input: models.AddTagsToResourceInput): F[models.AddTagsToResourceOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AddTagsToResourceOutput, models.AddTagsToResourceInput](client, awsData, ServiceType, ServiceAndPrefix, "AddTagsToResource", POST, "/", input)
  override def cancelArchival(input: models.CancelArchivalInput): F[models.CancelArchivalOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CancelArchivalOutput, models.CancelArchivalInput](client, awsData, ServiceType, ServiceAndPrefix, "CancelArchival", POST, "/", input)
  override def updateNFSFileShare(input: models.UpdateNFSFileShareInput): F[models.UpdateNFSFileShareOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateNFSFileShareOutput, models.UpdateNFSFileShareInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateNFSFileShare", POST, "/", input)
  override def deleteGateway(input: models.DeleteGatewayInput): F[models.DeleteGatewayOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteGatewayOutput, models.DeleteGatewayInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteGateway", POST, "/", input)
  override def listTagsForResource(input: models.ListTagsForResourceInput): F[models.ListTagsForResourceOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTagsForResourceOutput, models.ListTagsForResourceInput](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForResource", POST, "/", input)
  override def addUploadBuffer(input: models.AddUploadBufferInput): F[models.AddUploadBufferOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AddUploadBufferOutput, models.AddUploadBufferInput](client, awsData, ServiceType, ServiceAndPrefix, "AddUploadBuffer", POST, "/", input)
  override def updateChapCredentials(input: models.UpdateChapCredentialsInput): F[models.UpdateChapCredentialsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateChapCredentialsOutput, models.UpdateChapCredentialsInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateChapCredentials", POST, "/", input)
  override def updateVTLDeviceType(input: models.UpdateVTLDeviceTypeInput): F[models.UpdateVTLDeviceTypeOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateVTLDeviceTypeOutput, models.UpdateVTLDeviceTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateVTLDeviceType", POST, "/", input)
  override def addCache(input: models.AddCacheInput): F[models.AddCacheOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AddCacheOutput, models.AddCacheInput](client, awsData, ServiceType, ServiceAndPrefix, "AddCache", POST, "/", input)
  override def deleteVolume(input: models.DeleteVolumeInput): F[models.DeleteVolumeOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteVolumeOutput, models.DeleteVolumeInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteVolume", POST, "/", input)
  override def refreshCache(input: models.RefreshCacheInput): F[models.RefreshCacheOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RefreshCacheOutput, models.RefreshCacheInput](client, awsData, ServiceType, ServiceAndPrefix, "RefreshCache", POST, "/", input)
  override def retrieveTapeRecoveryPoint(input: models.RetrieveTapeRecoveryPointInput): F[models.RetrieveTapeRecoveryPointOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RetrieveTapeRecoveryPointOutput, models.RetrieveTapeRecoveryPointInput](client, awsData, ServiceType, ServiceAndPrefix, "RetrieveTapeRecoveryPoint", POST, "/", input)
  override def createNFSFileShare(input: models.CreateNFSFileShareInput): F[models.CreateNFSFileShareOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateNFSFileShareOutput, models.CreateNFSFileShareInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateNFSFileShare", POST, "/", input)
  override def updateBandwidthRateLimit(input: models.UpdateBandwidthRateLimitInput): F[models.UpdateBandwidthRateLimitOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateBandwidthRateLimitOutput, models.UpdateBandwidthRateLimitInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateBandwidthRateLimit", POST, "/", input)
  override def updateSnapshotSchedule(input: models.UpdateSnapshotScheduleInput): F[models.UpdateSnapshotScheduleOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateSnapshotScheduleOutput, models.UpdateSnapshotScheduleInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateSnapshotSchedule", POST, "/", input)
  override def describeTapes(input: models.DescribeTapesInput): F[models.DescribeTapesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeTapesOutput, models.DescribeTapesInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTapes", POST, "/", input)
  override def deleteChapCredentials(input: models.DeleteChapCredentialsInput): F[models.DeleteChapCredentialsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteChapCredentialsOutput, models.DeleteChapCredentialsInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteChapCredentials", POST, "/", input)
  override def describeChapCredentials(input: models.DescribeChapCredentialsInput): F[models.DescribeChapCredentialsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeChapCredentialsOutput, models.DescribeChapCredentialsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeChapCredentials", POST, "/", input)
  override def describeVTLDevices(input: models.DescribeVTLDevicesInput): F[models.DescribeVTLDevicesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeVTLDevicesOutput, models.DescribeVTLDevicesInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeVTLDevices", POST, "/", input)
  override def createTapes(input: models.CreateTapesInput): F[models.CreateTapesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateTapesOutput, models.CreateTapesInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateTapes", POST, "/", input)
  override def addWorkingStorage(input: models.AddWorkingStorageInput): F[models.AddWorkingStorageOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AddWorkingStorageOutput, models.AddWorkingStorageInput](client, awsData, ServiceType, ServiceAndPrefix, "AddWorkingStorage", POST, "/", input)
  override def startGateway(input: models.StartGatewayInput): F[models.StartGatewayOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StartGatewayOutput, models.StartGatewayInput](client, awsData, ServiceType, ServiceAndPrefix, "StartGateway", POST, "/", input)
  override def describeSnapshotSchedule(input: models.DescribeSnapshotScheduleInput): F[models.DescribeSnapshotScheduleOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeSnapshotScheduleOutput, models.DescribeSnapshotScheduleInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeSnapshotSchedule", POST, "/", input)
  override def createSnapshot(input: models.CreateSnapshotInput): F[models.CreateSnapshotOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateSnapshotOutput, models.CreateSnapshotInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateSnapshot", POST, "/", input)
  override def listFileShares(input: models.ListFileSharesInput): F[models.ListFileSharesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListFileSharesOutput, models.ListFileSharesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListFileShares", POST, "/", input)
  override def cancelRetrieval(input: models.CancelRetrievalInput): F[models.CancelRetrievalOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CancelRetrievalOutput, models.CancelRetrievalInput](client, awsData, ServiceType, ServiceAndPrefix, "CancelRetrieval", POST, "/", input)
  override def describeTapeRecoveryPoints(input: models.DescribeTapeRecoveryPointsInput): F[models.DescribeTapeRecoveryPointsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeTapeRecoveryPointsOutput, models.DescribeTapeRecoveryPointsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTapeRecoveryPoints", POST, "/", input)
}