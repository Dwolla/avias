package org.lyranthe.araethura.storagegateway.models
import org.lyranthe.araethura.storagegateway.models
final case class CreateTapesOutput(tapeARNs: scala.Option[scala.List[java.lang.String]] = None)
final case class ListVolumesOutput(gatewayARN: scala.Option[java.lang.String] = None, marker: scala.Option[java.lang.String] = None, volumeInfos: scala.Option[scala.List[models.VolumeInfo]] = None)
final case class DescribeStorediSCSIVolumesInput(volumeARNs: scala.List[java.lang.String])
final case class VolumeInfo(gatewayId: scala.Option[java.lang.String] = None, volumeSizeInBytes: scala.Option[scala.Long] = None, volumeType: scala.Option[java.lang.String] = None, gatewayARN: scala.Option[java.lang.String] = None, volumeId: scala.Option[java.lang.String] = None, volumeARN: scala.Option[java.lang.String] = None)
final case class ListVolumeInitiatorsOutput(initiators: scala.Option[scala.List[java.lang.String]] = None)
final case class DescribeChapCredentialsOutput(chapCredentials: scala.Option[scala.List[models.ChapInfo]] = None)
final case class RetrieveTapeArchiveInput(tapeARN: java.lang.String, gatewayARN: java.lang.String)
final case class NFSFileShareDefaults(fileMode: scala.Option[java.lang.String] = None, directoryMode: scala.Option[java.lang.String] = None, groupId: scala.Option[scala.Long] = None, ownerId: scala.Option[scala.Long] = None)
final case class AddWorkingStorageOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class ListTagsForResourceInput(resourceARN: java.lang.String, marker: scala.Option[java.lang.String] = None, limit: scala.Option[scala.Int] = None)
final case class DeviceiSCSIAttributes(targetARN: scala.Option[java.lang.String] = None, networkInterfaceId: scala.Option[java.lang.String] = None, networkInterfacePort: scala.Option[scala.Int] = None, chapEnabled: scala.Option[scala.Boolean] = None)
final case class DescribeCachediSCSIVolumesInput(volumeARNs: scala.List[java.lang.String])
final case class ShutdownGatewayInput(gatewayARN: java.lang.String)
final case class DescribeBandwidthRateLimitOutput(gatewayARN: scala.Option[java.lang.String] = None, averageUploadRateLimitInBitsPerSec: scala.Option[scala.Long] = None, averageDownloadRateLimitInBitsPerSec: scala.Option[scala.Long] = None)
final case class SetLocalConsolePasswordInput(gatewayARN: java.lang.String, localConsolePassword: java.lang.String)
final case class UpdateNFSFileShareInput(fileShareARN: java.lang.String, clientList: scala.Option[scala.List[java.lang.String]] = None, nfsfileShareDefaults: scala.Option[models.NFSFileShareDefaults] = None, kmsencrypted: scala.Option[scala.Boolean] = None, readOnly: scala.Option[scala.Boolean] = None, defaultStorageClass: scala.Option[java.lang.String] = None, kmskey: scala.Option[java.lang.String] = None, squash: scala.Option[java.lang.String] = None)
final case class ListGatewaysOutput(gateways: scala.Option[scala.List[models.GatewayInfo]] = None, marker: scala.Option[java.lang.String] = None)
final case class ListGatewaysInput(marker: scala.Option[java.lang.String] = None, limit: scala.Option[scala.Int] = None)
final case class UpdateSnapshotScheduleOutput(volumeARN: scala.Option[java.lang.String] = None)
final case class DescribeCachediSCSIVolumesOutput(cachediSCSIVolumes: scala.Option[scala.List[models.CachediSCSIVolume]] = None)
final case class TapeInfo(tapeARN: scala.Option[java.lang.String] = None, tapeStatus: scala.Option[java.lang.String] = None, tapeBarcode: scala.Option[java.lang.String] = None, tapeSizeInBytes: scala.Option[scala.Long] = None, gatewayARN: scala.Option[java.lang.String] = None)
final case class ShutdownGatewayOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class DeleteFileShareInput(fileShareARN: java.lang.String, forceDelete: scala.Option[scala.Boolean] = None)
final case class DescribeBandwidthRateLimitInput(gatewayARN: java.lang.String)
final case class DeleteSnapshotScheduleInput(volumeARN: java.lang.String)
final case class DescribeTapeRecoveryPointsInput(gatewayARN: java.lang.String, marker: scala.Option[java.lang.String] = None, limit: scala.Option[scala.Int] = None)
final case class ListTapesInput(tapeARNs: scala.Option[scala.List[java.lang.String]] = None, marker: scala.Option[java.lang.String] = None, limit: scala.Option[scala.Int] = None)
final case class CreateTapeWithBarcodeInput(gatewayARN: java.lang.String, tapeSizeInBytes: scala.Long, tapeBarcode: java.lang.String)
final case class CreateStorediSCSIVolumeOutput(volumeARN: scala.Option[java.lang.String] = None, volumeSizeInBytes: scala.Option[scala.Long] = None, targetARN: scala.Option[java.lang.String] = None)
final case class DisableGatewayOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class ResetCacheInput(gatewayARN: java.lang.String)
final case class CancelRetrievalOutput(tapeARN: scala.Option[java.lang.String] = None)
final case class DescribeMaintenanceStartTimeInput(gatewayARN: java.lang.String)
final case class Tag(key: java.lang.String, value: java.lang.String)
final case class CreateNFSFileShareInput(role: java.lang.String, locationARN: java.lang.String, clientToken: java.lang.String, gatewayARN: java.lang.String, clientList: scala.Option[scala.List[java.lang.String]] = None, nfsfileShareDefaults: scala.Option[models.NFSFileShareDefaults] = None, kmsencrypted: scala.Option[scala.Boolean] = None, readOnly: scala.Option[scala.Boolean] = None, defaultStorageClass: scala.Option[java.lang.String] = None, kmskey: scala.Option[java.lang.String] = None, squash: scala.Option[java.lang.String] = None)
final case class ActivateGatewayOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class CreateSnapshotInput(volumeARN: java.lang.String, snapshotDescription: java.lang.String)
final case class DeleteBandwidthRateLimitOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class DisableGatewayInput(gatewayARN: java.lang.String)
final case class DescribeGatewayInformationInput(gatewayARN: java.lang.String)
final case class DescribeTapeArchivesOutput(tapeArchives: scala.Option[scala.List[models.TapeArchive]] = None, marker: scala.Option[java.lang.String] = None)
final case class ChapInfo(targetARN: scala.Option[java.lang.String] = None, secretToAuthenticateInitiator: scala.Option[java.lang.String] = None, secretToAuthenticateTarget: scala.Option[java.lang.String] = None, initiatorName: scala.Option[java.lang.String] = None)
final case class CreateSnapshotFromVolumeRecoveryPointOutput(snapshotId: scala.Option[java.lang.String] = None, volumeARN: scala.Option[java.lang.String] = None, volumeRecoveryPointTime: scala.Option[java.lang.String] = None)
final case class DeleteGatewayOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class CreateTapesInput(clientToken: java.lang.String, tapeBarcodePrefix: java.lang.String, numTapesToCreate: scala.Int, tapeSizeInBytes: scala.Long, gatewayARN: java.lang.String)
final case class ListFileSharesOutput(marker: scala.Option[java.lang.String] = None, nextMarker: scala.Option[java.lang.String] = None, fileShareInfoList: scala.Option[scala.List[models.FileShareInfo]] = None)
final case class StorediSCSIVolume(sourceSnapshotId: scala.Option[java.lang.String] = None, createdDate: scala.Option[java.time.Instant] = None, volumeSizeInBytes: scala.Option[scala.Long] = None, preservedExistingData: scala.Option[scala.Boolean] = None, volumeProgress: scala.Option[scala.Double] = None, volumeType: scala.Option[java.lang.String] = None, volumeiSCSIAttributes: scala.Option[models.VolumeiSCSIAttributes] = None, volumeDiskId: scala.Option[java.lang.String] = None, volumeStatus: scala.Option[java.lang.String] = None, volumeId: scala.Option[java.lang.String] = None, volumeARN: scala.Option[java.lang.String] = None)
final case class VolumeRecoveryPointInfo(volumeARN: scala.Option[java.lang.String] = None, volumeSizeInBytes: scala.Option[scala.Long] = None, volumeUsageInBytes: scala.Option[scala.Long] = None, volumeRecoveryPointTime: scala.Option[java.lang.String] = None)
final case class UpdateSnapshotScheduleInput(volumeARN: java.lang.String, startAt: scala.Int, recurrenceInHours: scala.Int, description: scala.Option[java.lang.String] = None)
final case class DescribeGatewayInformationOutput(gatewayId: scala.Option[java.lang.String] = None, nextUpdateAvailabilityDate: scala.Option[java.lang.String] = None, gatewayType: scala.Option[java.lang.String] = None, gatewayName: scala.Option[java.lang.String] = None, gatewayTimezone: scala.Option[java.lang.String] = None, gatewayState: scala.Option[java.lang.String] = None, gatewayNetworkInterfaces: scala.Option[scala.List[models.NetworkInterface]] = None, gatewayARN: scala.Option[java.lang.String] = None, lastSoftwareUpdate: scala.Option[java.lang.String] = None)
final case class AddTagsToResourceInput(resourceARN: java.lang.String, tags: scala.List[models.Tag])
final case class RetrieveTapeRecoveryPointInput(tapeARN: java.lang.String, gatewayARN: java.lang.String)
final case class DescribeMaintenanceStartTimeOutput(minuteOfHour: scala.Option[scala.Int] = None, timezone: scala.Option[java.lang.String] = None, gatewayARN: scala.Option[java.lang.String] = None, hourOfDay: scala.Option[scala.Int] = None, dayOfWeek: scala.Option[scala.Int] = None)
final case class RefreshCacheOutput(fileShareARN: scala.Option[java.lang.String] = None)
final case class DescribeTapesOutput(tapes: scala.Option[scala.List[models.Tape]] = None, marker: scala.Option[java.lang.String] = None)
final case class DeleteChapCredentialsInput(targetARN: java.lang.String, initiatorName: java.lang.String)
final case class DescribeStorediSCSIVolumesOutput(storediSCSIVolumes: scala.Option[scala.List[models.StorediSCSIVolume]] = None)
final case class UpdateVTLDeviceTypeInput(vtldeviceARN: java.lang.String, deviceType: java.lang.String)
final case class DeleteTapeArchiveInput(tapeARN: java.lang.String)
final case class DeleteSnapshotScheduleOutput(volumeARN: scala.Option[java.lang.String] = None)
final case class DeleteFileShareOutput(fileShareARN: scala.Option[java.lang.String] = None)
final case class NetworkInterface(ipv4Address: scala.Option[java.lang.String] = None, macAddress: scala.Option[java.lang.String] = None, ipv6Address: scala.Option[java.lang.String] = None)
final case class UpdateGatewaySoftwareNowInput(gatewayARN: java.lang.String)
final case class UpdateChapCredentialsOutput(targetARN: scala.Option[java.lang.String] = None, initiatorName: scala.Option[java.lang.String] = None)
final case class CancelArchivalInput(gatewayARN: java.lang.String, tapeARN: java.lang.String)
final case class NFSFileShareInfo(clientList: scala.Option[scala.List[java.lang.String]] = None, nfsfileShareDefaults: scala.Option[models.NFSFileShareDefaults] = None, fileShareStatus: scala.Option[java.lang.String] = None, role: scala.Option[java.lang.String] = None, readOnly: scala.Option[scala.Boolean] = None, locationARN: scala.Option[java.lang.String] = None, kmsencrypted: scala.Option[scala.Boolean] = None, defaultStorageClass: scala.Option[java.lang.String] = None, fileShareARN: scala.Option[java.lang.String] = None, kmskey: scala.Option[java.lang.String] = None, path: scala.Option[java.lang.String] = None, gatewayARN: scala.Option[java.lang.String] = None, squash: scala.Option[java.lang.String] = None, fileShareId: scala.Option[java.lang.String] = None)
final case class UpdateBandwidthRateLimitOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class ListTapesOutput(tapeInfos: scala.Option[scala.List[models.TapeInfo]] = None, marker: scala.Option[java.lang.String] = None)
final case class ActivateGatewayInput(gatewayRegion: java.lang.String, gatewayName: java.lang.String, gatewayTimezone: java.lang.String, activationKey: java.lang.String, gatewayType: scala.Option[java.lang.String] = None, mediumChangerType: scala.Option[java.lang.String] = None, tapeDriveType: scala.Option[java.lang.String] = None)
final case class StorageGatewayError(errorCode: scala.Option[java.lang.String] = None, errorDetails: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = None)
final case class SetLocalConsolePasswordOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class UpdateChapCredentialsInput(targetARN: java.lang.String, secretToAuthenticateInitiator: java.lang.String, initiatorName: java.lang.String, secretToAuthenticateTarget: scala.Option[java.lang.String] = None)
final case class DeleteChapCredentialsOutput(targetARN: scala.Option[java.lang.String] = None, initiatorName: scala.Option[java.lang.String] = None)
final case class DescribeChapCredentialsInput(targetARN: java.lang.String)
final case class DescribeWorkingStorageOutput(gatewayARN: scala.Option[java.lang.String] = None, diskIds: scala.Option[scala.List[java.lang.String]] = None, workingStorageUsedInBytes: scala.Option[scala.Long] = None, workingStorageAllocatedInBytes: scala.Option[scala.Long] = None)
final case class RetrieveTapeArchiveOutput(tapeARN: scala.Option[java.lang.String] = None)
final case class DeleteBandwidthRateLimitInput(gatewayARN: java.lang.String, bandwidthType: java.lang.String)
final case class CreateNFSFileShareOutput(fileShareARN: scala.Option[java.lang.String] = None)
final case class UpdateMaintenanceStartTimeInput(gatewayARN: java.lang.String, hourOfDay: scala.Int, minuteOfHour: scala.Int, dayOfWeek: scala.Int)
final case class UpdateGatewayInformationOutput(gatewayARN: scala.Option[java.lang.String] = None, gatewayName: scala.Option[java.lang.String] = None)
final case class UpdateGatewayInformationInput(gatewayARN: java.lang.String, gatewayName: scala.Option[java.lang.String] = None, gatewayTimezone: scala.Option[java.lang.String] = None)
final case class TapeRecoveryPointInfo(tapeARN: scala.Option[java.lang.String] = None, tapeRecoveryPointTime: scala.Option[java.time.Instant] = None, tapeSizeInBytes: scala.Option[scala.Long] = None, tapeStatus: scala.Option[java.lang.String] = None)
final case class ServiceUnavailableError(message: scala.Option[java.lang.String] = None, error: scala.Option[models.StorageGatewayError] = None)
final case class FileShareInfo(fileShareARN: scala.Option[java.lang.String] = None, fileShareId: scala.Option[java.lang.String] = None, fileShareStatus: scala.Option[java.lang.String] = None, gatewayARN: scala.Option[java.lang.String] = None)
final case class AddUploadBufferOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class CreateStorediSCSIVolumeInput(networkInterfaceId: java.lang.String, preserveExistingData: scala.Boolean, gatewayARN: java.lang.String, diskId: java.lang.String, targetName: java.lang.String, snapshotId: scala.Option[java.lang.String] = None)
final case class DescribeTapeArchivesInput(tapeARNs: scala.Option[scala.List[java.lang.String]] = None, marker: scala.Option[java.lang.String] = None, limit: scala.Option[scala.Int] = None)
final case class UpdateMaintenanceStartTimeOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class DescribeSnapshotScheduleInput(volumeARN: java.lang.String)
final case class AddCacheOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class ListLocalDisksInput(gatewayARN: java.lang.String)
final case class DescribeWorkingStorageInput(gatewayARN: java.lang.String)
final case class DeleteTapeInput(gatewayARN: java.lang.String, tapeARN: java.lang.String)
final case class CancelArchivalOutput(tapeARN: scala.Option[java.lang.String] = None)
final case class DescribeUploadBufferOutput(gatewayARN: scala.Option[java.lang.String] = None, diskIds: scala.Option[scala.List[java.lang.String]] = None, uploadBufferUsedInBytes: scala.Option[scala.Long] = None, uploadBufferAllocatedInBytes: scala.Option[scala.Long] = None)
final case class DescribeCacheOutput(gatewayARN: scala.Option[java.lang.String] = None, diskIds: scala.Option[scala.List[java.lang.String]] = None, cacheAllocatedInBytes: scala.Option[scala.Long] = None, cacheUsedPercentage: scala.Option[scala.Double] = None, cacheDirtyPercentage: scala.Option[scala.Double] = None, cacheHitPercentage: scala.Option[scala.Double] = None, cacheMissPercentage: scala.Option[scala.Double] = None)
final case class TapeArchive(tapeStatus: scala.Option[java.lang.String] = None, tapeARN: scala.Option[java.lang.String] = None, tapeBarcode: scala.Option[java.lang.String] = None, tapeUsedInBytes: scala.Option[scala.Long] = None, tapeSizeInBytes: scala.Option[scala.Long] = None, retrievedTo: scala.Option[java.lang.String] = None, tapeCreatedDate: scala.Option[java.time.Instant] = None, completionTime: scala.Option[java.time.Instant] = None)
final case class Tape(progress: scala.Option[scala.Double] = None, tapeARN: scala.Option[java.lang.String] = None, tapeStatus: scala.Option[java.lang.String] = None, tapeBarcode: scala.Option[java.lang.String] = None, tapeUsedInBytes: scala.Option[scala.Long] = None, tapeSizeInBytes: scala.Option[scala.Long] = None, vtldevice: scala.Option[java.lang.String] = None, tapeCreatedDate: scala.Option[java.time.Instant] = None)
final case class StartGatewayOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class VolumeiSCSIAttributes(networkInterfaceId: scala.Option[java.lang.String] = None, targetARN: scala.Option[java.lang.String] = None, chapEnabled: scala.Option[scala.Boolean] = None, networkInterfacePort: scala.Option[scala.Int] = None, lunNumber: scala.Option[scala.Int] = None)
final case class ListLocalDisksOutput(gatewayARN: scala.Option[java.lang.String] = None, disks: scala.Option[scala.List[models.Disk]] = None)
final case class DescribeTapeRecoveryPointsOutput(gatewayARN: scala.Option[java.lang.String] = None, tapeRecoveryPointInfos: scala.Option[scala.List[models.TapeRecoveryPointInfo]] = None, marker: scala.Option[java.lang.String] = None)
final case class DeleteTapeArchiveOutput(tapeARN: scala.Option[java.lang.String] = None)
final case class DescribeNFSFileSharesOutput(nfsfileShareInfoList: scala.Option[scala.List[models.NFSFileShareInfo]] = None)
final case class AddWorkingStorageInput(gatewayARN: java.lang.String, diskIds: scala.List[java.lang.String])
final case class RefreshCacheInput(fileShareARN: java.lang.String)
final case class UpdateVTLDeviceTypeOutput(vtldeviceARN: scala.Option[java.lang.String] = None)
final case class DescribeCacheInput(gatewayARN: java.lang.String)
final case class DescribeSnapshotScheduleOutput(recurrenceInHours: scala.Option[scala.Int] = None, timezone: scala.Option[java.lang.String] = None, startAt: scala.Option[scala.Int] = None, volumeARN: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None)
final case class RetrieveTapeRecoveryPointOutput(tapeARN: scala.Option[java.lang.String] = None)
final case class AddCacheInput(gatewayARN: java.lang.String, diskIds: scala.List[java.lang.String])
final case class Disk(diskId: scala.Option[java.lang.String] = None, diskPath: scala.Option[java.lang.String] = None, diskNode: scala.Option[java.lang.String] = None, diskStatus: scala.Option[java.lang.String] = None, diskAllocationResource: scala.Option[java.lang.String] = None, diskSizeInBytes: scala.Option[scala.Long] = None, diskAllocationType: scala.Option[java.lang.String] = None)
final case class VTLDevice(vtldeviceProductIdentifier: scala.Option[java.lang.String] = None, vtldeviceVendor: scala.Option[java.lang.String] = None, deviceiSCSIAttributes: scala.Option[models.DeviceiSCSIAttributes] = None, vtldeviceType: scala.Option[java.lang.String] = None, vtldeviceARN: scala.Option[java.lang.String] = None)
final case class CreateCachediSCSIVolumeInput(volumeSizeInBytes: scala.Long, networkInterfaceId: java.lang.String, clientToken: java.lang.String, gatewayARN: java.lang.String, targetName: java.lang.String, snapshotId: scala.Option[java.lang.String] = None, sourceVolumeARN: scala.Option[java.lang.String] = None)
final case class CreateSnapshotOutput(volumeARN: scala.Option[java.lang.String] = None, snapshotId: scala.Option[java.lang.String] = None)
final case class DescribeNFSFileSharesInput(fileShareARNList: scala.List[java.lang.String])
final case class RemoveTagsFromResourceInput(resourceARN: java.lang.String, tagKeys: scala.List[java.lang.String])
final case class InternalServerError(message: scala.Option[java.lang.String] = None, error: scala.Option[models.StorageGatewayError] = None)
final case class InvalidGatewayRequestException(message: scala.Option[java.lang.String] = None, error: scala.Option[models.StorageGatewayError] = None)
final case class DescribeVTLDevicesOutput(gatewayARN: scala.Option[java.lang.String] = None, vtldevices: scala.Option[scala.List[models.VTLDevice]] = None, marker: scala.Option[java.lang.String] = None)
final case class DescribeUploadBufferInput(gatewayARN: java.lang.String)
final case class DescribeTapesInput(gatewayARN: java.lang.String, tapeARNs: scala.Option[scala.List[java.lang.String]] = None, marker: scala.Option[java.lang.String] = None, limit: scala.Option[scala.Int] = None)
final case class ListVolumeRecoveryPointsOutput(gatewayARN: scala.Option[java.lang.String] = None, volumeRecoveryPointInfos: scala.Option[scala.List[models.VolumeRecoveryPointInfo]] = None)
final case class CreateSnapshotFromVolumeRecoveryPointInput(volumeARN: java.lang.String, snapshotDescription: java.lang.String)
final case class CancelRetrievalInput(gatewayARN: java.lang.String, tapeARN: java.lang.String)
final case class DescribeVTLDevicesInput(gatewayARN: java.lang.String, vtldeviceARNs: scala.Option[scala.List[java.lang.String]] = None, marker: scala.Option[java.lang.String] = None, limit: scala.Option[scala.Int] = None)
final case class ListTagsForResourceOutput(resourceARN: scala.Option[java.lang.String] = None, marker: scala.Option[java.lang.String] = None, tags: scala.Option[scala.List[models.Tag]] = None)
final case class UpdateGatewaySoftwareNowOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class UpdateNFSFileShareOutput(fileShareARN: scala.Option[java.lang.String] = None)
final case class ListVolumeRecoveryPointsInput(gatewayARN: java.lang.String)
final case class AddUploadBufferInput(gatewayARN: java.lang.String, diskIds: scala.List[java.lang.String])
final case class DeleteTapeOutput(tapeARN: scala.Option[java.lang.String] = None)
final case class CreateCachediSCSIVolumeOutput(volumeARN: scala.Option[java.lang.String] = None, targetARN: scala.Option[java.lang.String] = None)
final case class ResetCacheOutput(gatewayARN: scala.Option[java.lang.String] = None)
final case class ListFileSharesInput(gatewayARN: scala.Option[java.lang.String] = None, limit: scala.Option[scala.Int] = None, marker: scala.Option[java.lang.String] = None)
final case class DeleteVolumeOutput(volumeARN: scala.Option[java.lang.String] = None)
final case class UpdateBandwidthRateLimitInput(gatewayARN: java.lang.String, averageUploadRateLimitInBitsPerSec: scala.Option[scala.Long] = None, averageDownloadRateLimitInBitsPerSec: scala.Option[scala.Long] = None)
final case class DeleteGatewayInput(gatewayARN: java.lang.String)
final case class GatewayInfo(gatewayId: scala.Option[java.lang.String] = None, gatewayOperationalState: scala.Option[java.lang.String] = None, gatewayType: scala.Option[java.lang.String] = None, gatewayName: scala.Option[java.lang.String] = None, gatewayARN: scala.Option[java.lang.String] = None)
final case class RemoveTagsFromResourceOutput(resourceARN: scala.Option[java.lang.String] = None)
final case class CachediSCSIVolume(sourceSnapshotId: scala.Option[java.lang.String] = None, createdDate: scala.Option[java.time.Instant] = None, volumeSizeInBytes: scala.Option[scala.Long] = None, volumeProgress: scala.Option[scala.Double] = None, volumeType: scala.Option[java.lang.String] = None, volumeiSCSIAttributes: scala.Option[models.VolumeiSCSIAttributes] = None, volumeStatus: scala.Option[java.lang.String] = None, volumeId: scala.Option[java.lang.String] = None, volumeARN: scala.Option[java.lang.String] = None)
final case class ListVolumeInitiatorsInput(volumeARN: java.lang.String)
final case class AddTagsToResourceOutput(resourceARN: scala.Option[java.lang.String] = None)
final case class DeleteVolumeInput(volumeARN: java.lang.String)
final case class StartGatewayInput(gatewayARN: java.lang.String)
final case class ListVolumesInput(gatewayARN: scala.Option[java.lang.String] = None, marker: scala.Option[java.lang.String] = None, limit: scala.Option[scala.Int] = None)
final case class CreateTapeWithBarcodeOutput(tapeARN: scala.Option[java.lang.String] = None)