package org.lyranthe.araethura.organizations
trait Amazonorganizations[F[_]] {
  def enablePolicyType(input: org.lyranthe.araethura.organizations.models.EnablePolicyTypeRequest): F[org.lyranthe.araethura.organizations.models.EnablePolicyTypeResponse]
  def deleteOrganizationalUnit(input: org.lyranthe.araethura.organizations.models.DeleteOrganizationalUnitRequest): F[scala.Unit]
  def listAWSServiceAccessForOrganization(input: org.lyranthe.araethura.organizations.models.ListAWSServiceAccessForOrganizationRequest): F[org.lyranthe.araethura.organizations.models.ListAWSServiceAccessForOrganizationResponse]
  def listHandshakesForAccount(input: org.lyranthe.araethura.organizations.models.ListHandshakesForAccountRequest): F[org.lyranthe.araethura.organizations.models.ListHandshakesForAccountResponse]
  def listRoots(input: org.lyranthe.araethura.organizations.models.ListRootsRequest): F[org.lyranthe.araethura.organizations.models.ListRootsResponse]
  def detachPolicy(input: org.lyranthe.araethura.organizations.models.DetachPolicyRequest): F[scala.Unit]
  def createPolicy(input: org.lyranthe.araethura.organizations.models.CreatePolicyRequest): F[org.lyranthe.araethura.organizations.models.CreatePolicyResponse]
  def listAccounts(input: org.lyranthe.araethura.organizations.models.ListAccountsRequest): F[org.lyranthe.araethura.organizations.models.ListAccountsResponse]
  def inviteAccountToOrganization(input: org.lyranthe.araethura.organizations.models.InviteAccountToOrganizationRequest): F[org.lyranthe.araethura.organizations.models.InviteAccountToOrganizationResponse]
  def listPolicies(input: org.lyranthe.araethura.organizations.models.ListPoliciesRequest): F[org.lyranthe.araethura.organizations.models.ListPoliciesResponse]
  def cancelHandshake(input: org.lyranthe.araethura.organizations.models.CancelHandshakeRequest): F[org.lyranthe.araethura.organizations.models.CancelHandshakeResponse]
  def enableAWSServiceAccess(input: org.lyranthe.araethura.organizations.models.EnableAWSServiceAccessRequest): F[scala.Unit]
  def removeAccountFromOrganization(input: org.lyranthe.araethura.organizations.models.RemoveAccountFromOrganizationRequest): F[scala.Unit]
  def attachPolicy(input: org.lyranthe.araethura.organizations.models.AttachPolicyRequest): F[scala.Unit]
  def listOrganizationalUnitsForParent(input: org.lyranthe.araethura.organizations.models.ListOrganizationalUnitsForParentRequest): F[org.lyranthe.araethura.organizations.models.ListOrganizationalUnitsForParentResponse]
  def moveAccount(input: org.lyranthe.araethura.organizations.models.MoveAccountRequest): F[scala.Unit]
  def deletePolicy(input: org.lyranthe.araethura.organizations.models.DeletePolicyRequest): F[scala.Unit]
  def describeOrganizationalUnit(input: org.lyranthe.araethura.organizations.models.DescribeOrganizationalUnitRequest): F[org.lyranthe.araethura.organizations.models.DescribeOrganizationalUnitResponse]
  def updatePolicy(input: org.lyranthe.araethura.organizations.models.UpdatePolicyRequest): F[org.lyranthe.araethura.organizations.models.UpdatePolicyResponse]
  def listChildren(input: org.lyranthe.araethura.organizations.models.ListChildrenRequest): F[org.lyranthe.araethura.organizations.models.ListChildrenResponse]
  def listAccountsForParent(input: org.lyranthe.araethura.organizations.models.ListAccountsForParentRequest): F[org.lyranthe.araethura.organizations.models.ListAccountsForParentResponse]
  def disablePolicyType(input: org.lyranthe.araethura.organizations.models.DisablePolicyTypeRequest): F[org.lyranthe.araethura.organizations.models.DisablePolicyTypeResponse]
  def createOrganization(input: org.lyranthe.araethura.organizations.models.CreateOrganizationRequest): F[org.lyranthe.araethura.organizations.models.CreateOrganizationResponse]
  def deleteOrganization: F[scala.Unit]
  def describeAccount(input: org.lyranthe.araethura.organizations.models.DescribeAccountRequest): F[org.lyranthe.araethura.organizations.models.DescribeAccountResponse]
  def createOrganizationalUnit(input: org.lyranthe.araethura.organizations.models.CreateOrganizationalUnitRequest): F[org.lyranthe.araethura.organizations.models.CreateOrganizationalUnitResponse]
  def createAccount(input: org.lyranthe.araethura.organizations.models.CreateAccountRequest): F[org.lyranthe.araethura.organizations.models.CreateAccountResponse]
  def leaveOrganization: F[scala.Unit]
  def describeHandshake(input: org.lyranthe.araethura.organizations.models.DescribeHandshakeRequest): F[org.lyranthe.araethura.organizations.models.DescribeHandshakeResponse]
  def enableAllFeatures: F[org.lyranthe.araethura.organizations.models.EnableAllFeaturesResponse]
  def listParents(input: org.lyranthe.araethura.organizations.models.ListParentsRequest): F[org.lyranthe.araethura.organizations.models.ListParentsResponse]
  def listPoliciesForTarget(input: org.lyranthe.araethura.organizations.models.ListPoliciesForTargetRequest): F[org.lyranthe.araethura.organizations.models.ListPoliciesForTargetResponse]
  def describeCreateAccountStatus(input: org.lyranthe.araethura.organizations.models.DescribeCreateAccountStatusRequest): F[org.lyranthe.araethura.organizations.models.DescribeCreateAccountStatusResponse]
  def listTargetsForPolicy(input: org.lyranthe.araethura.organizations.models.ListTargetsForPolicyRequest): F[org.lyranthe.araethura.organizations.models.ListTargetsForPolicyResponse]
  def acceptHandshake(input: org.lyranthe.araethura.organizations.models.AcceptHandshakeRequest): F[org.lyranthe.araethura.organizations.models.AcceptHandshakeResponse]
  def declineHandshake(input: org.lyranthe.araethura.organizations.models.DeclineHandshakeRequest): F[org.lyranthe.araethura.organizations.models.DeclineHandshakeResponse]
  def disableAWSServiceAccess(input: org.lyranthe.araethura.organizations.models.DisableAWSServiceAccessRequest): F[scala.Unit]
  def updateOrganizationalUnit(input: org.lyranthe.araethura.organizations.models.UpdateOrganizationalUnitRequest): F[org.lyranthe.araethura.organizations.models.UpdateOrganizationalUnitResponse]
  def listHandshakesForOrganization(input: org.lyranthe.araethura.organizations.models.ListHandshakesForOrganizationRequest): F[org.lyranthe.araethura.organizations.models.ListHandshakesForOrganizationResponse]
  def describePolicy(input: org.lyranthe.araethura.organizations.models.DescribePolicyRequest): F[org.lyranthe.araethura.organizations.models.DescribePolicyResponse]
  def describeOrganization: F[org.lyranthe.araethura.organizations.models.DescribeOrganizationResponse]
  def listCreateAccountStatus(input: org.lyranthe.araethura.organizations.models.ListCreateAccountStatusRequest): F[org.lyranthe.araethura.organizations.models.ListCreateAccountStatusResponse]
}