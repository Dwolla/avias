package org.lyranthe.araethura.route53domains.http4s
import org.http4s.Method._
import org.lyranthe.araethura.route53domains.circe._
import org.lyranthe.araethura.route53domains.models
class Amazonroute53domainsClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.route53domains.Amazonroute53domains[F] {
  private[this] final val ServiceType: String = "route53domains"
  private[this] final val ServiceAndPrefix: Option[String] = Some("Route53Domains_v20140515")
  override def updateDomainContact(input: models.UpdateDomainContactRequest): F[models.UpdateDomainContactResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateDomainContactResponse, models.UpdateDomainContactRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDomainContact", POST, "/", input)
  override def updateTagsForDomain(input: models.UpdateTagsForDomainRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.UpdateTagsForDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateTagsForDomain", POST, "/", input)
  override def listOperations(input: models.ListOperationsRequest): F[models.ListOperationsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListOperationsResponse, models.ListOperationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListOperations", POST, "/", input)
  override def disableDomainTransferLock(input: models.DisableDomainTransferLockRequest): F[models.DisableDomainTransferLockResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DisableDomainTransferLockResponse, models.DisableDomainTransferLockRequest](client, awsData, ServiceType, ServiceAndPrefix, "DisableDomainTransferLock", POST, "/", input)
  override def updateDomainContactPrivacy(input: models.UpdateDomainContactPrivacyRequest): F[models.UpdateDomainContactPrivacyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateDomainContactPrivacyResponse, models.UpdateDomainContactPrivacyRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDomainContactPrivacy", POST, "/", input)
  override def transferDomain(input: models.TransferDomainRequest): F[models.TransferDomainResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.TransferDomainResponse, models.TransferDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "TransferDomain", POST, "/", input)
  override def getDomainDetail(input: models.GetDomainDetailRequest): F[models.GetDomainDetailResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDomainDetailResponse, models.GetDomainDetailRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDomainDetail", POST, "/", input)
  override def retrieveDomainAuthCode(input: models.RetrieveDomainAuthCodeRequest): F[models.RetrieveDomainAuthCodeResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RetrieveDomainAuthCodeResponse, models.RetrieveDomainAuthCodeRequest](client, awsData, ServiceType, ServiceAndPrefix, "RetrieveDomainAuthCode", POST, "/", input)
  override def listTagsForDomain(input: models.ListTagsForDomainRequest): F[models.ListTagsForDomainResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTagsForDomainResponse, models.ListTagsForDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForDomain", POST, "/", input)
  override def resendContactReachabilityEmail(input: models.ResendContactReachabilityEmailRequest): F[models.ResendContactReachabilityEmailResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ResendContactReachabilityEmailResponse, models.ResendContactReachabilityEmailRequest](client, awsData, ServiceType, ServiceAndPrefix, "ResendContactReachabilityEmail", POST, "/", input)
  override def checkDomainAvailability(input: models.CheckDomainAvailabilityRequest): F[models.CheckDomainAvailabilityResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CheckDomainAvailabilityResponse, models.CheckDomainAvailabilityRequest](client, awsData, ServiceType, ServiceAndPrefix, "CheckDomainAvailability", POST, "/", input)
  override def getDomainSuggestions(input: models.GetDomainSuggestionsRequest): F[models.GetDomainSuggestionsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDomainSuggestionsResponse, models.GetDomainSuggestionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDomainSuggestions", POST, "/", input)
  override def getOperationDetail(input: models.GetOperationDetailRequest): F[models.GetOperationDetailResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetOperationDetailResponse, models.GetOperationDetailRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetOperationDetail", POST, "/", input)
  override def viewBilling(input: models.ViewBillingRequest): F[models.ViewBillingResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ViewBillingResponse, models.ViewBillingRequest](client, awsData, ServiceType, ServiceAndPrefix, "ViewBilling", POST, "/", input)
  override def renewDomain(input: models.RenewDomainRequest): F[models.RenewDomainResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RenewDomainResponse, models.RenewDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "RenewDomain", POST, "/", input)
  override def checkDomainTransferability(input: models.CheckDomainTransferabilityRequest): F[models.CheckDomainTransferabilityResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CheckDomainTransferabilityResponse, models.CheckDomainTransferabilityRequest](client, awsData, ServiceType, ServiceAndPrefix, "CheckDomainTransferability", POST, "/", input)
  override def deleteTagsForDomain(input: models.DeleteTagsForDomainRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteTagsForDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteTagsForDomain", POST, "/", input)
  override def disableDomainAutoRenew(input: models.DisableDomainAutoRenewRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DisableDomainAutoRenewRequest](client, awsData, ServiceType, ServiceAndPrefix, "DisableDomainAutoRenew", POST, "/", input)
  override def enableDomainAutoRenew(input: models.EnableDomainAutoRenewRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.EnableDomainAutoRenewRequest](client, awsData, ServiceType, ServiceAndPrefix, "EnableDomainAutoRenew", POST, "/", input)
  override def registerDomain(input: models.RegisterDomainRequest): F[models.RegisterDomainResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RegisterDomainResponse, models.RegisterDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterDomain", POST, "/", input)
  override def enableDomainTransferLock(input: models.EnableDomainTransferLockRequest): F[models.EnableDomainTransferLockResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.EnableDomainTransferLockResponse, models.EnableDomainTransferLockRequest](client, awsData, ServiceType, ServiceAndPrefix, "EnableDomainTransferLock", POST, "/", input)
  override def getContactReachabilityStatus(input: models.GetContactReachabilityStatusRequest): F[models.GetContactReachabilityStatusResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetContactReachabilityStatusResponse, models.GetContactReachabilityStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetContactReachabilityStatus", POST, "/", input)
  override def listDomains(input: models.ListDomainsRequest): F[models.ListDomainsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListDomainsResponse, models.ListDomainsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListDomains", POST, "/", input)
  override def updateDomainNameservers(input: models.UpdateDomainNameserversRequest): F[models.UpdateDomainNameserversResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateDomainNameserversResponse, models.UpdateDomainNameserversRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDomainNameservers", POST, "/", input)
}