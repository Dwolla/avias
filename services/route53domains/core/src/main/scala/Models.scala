package avias.route53domains.models
final case class BillingRecord(billDate: scala.Option[java.time.Instant] = scala.None, price: scala.Option[scala.Double] = scala.None, operation: scala.Option[java.lang.String] = scala.None, domainName: scala.Option[java.lang.String] = scala.None, invoiceId: scala.Option[java.lang.String] = scala.None)
final case class ExtraParam(name: java.lang.String, value: java.lang.String)
final case class ViewBillingResponse(nextPageMarker: scala.Option[java.lang.String] = scala.None, billingRecords: scala.Option[scala.List[avias.route53domains.models.BillingRecord]] = scala.None)
final case class RenewDomainRequest(domainName: java.lang.String, currentExpiryYear: scala.Int, durationInYears: scala.Option[scala.Int] = scala.None)
final case class UnsupportedTLD(message: scala.Option[java.lang.String] = scala.None)
final case class TransferDomainResponse(operationId: java.lang.String)
final case class GetContactReachabilityStatusRequest(domainName: scala.Option[java.lang.String] = scala.None)
final case class Nameserver(name: java.lang.String, glueIps: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class ListDomainsRequest(marker: scala.Option[java.lang.String] = scala.None, maxItems: scala.Option[scala.Int] = scala.None)
final case class DeleteTagsForDomainRequest(domainName: java.lang.String, tagsToDelete: scala.List[java.lang.String])
final case class DomainSuggestion(domainName: scala.Option[java.lang.String] = scala.None, availability: scala.Option[java.lang.String] = scala.None)
final case class ListOperationsRequest(marker: scala.Option[java.lang.String] = scala.None, maxItems: scala.Option[scala.Int] = scala.None)
final case class ResendContactReachabilityEmailRequest(domainName: scala.Option[java.lang.String] = scala.None)
final case class CheckDomainAvailabilityRequest(domainName: java.lang.String, idnLangCode: scala.Option[java.lang.String] = scala.None)
final case class DuplicateRequest(message: scala.Option[java.lang.String] = scala.None)
final case class GetOperationDetailRequest(operationId: java.lang.String)
final case class GetDomainSuggestionsRequest(domainName: java.lang.String, suggestionCount: scala.Int, onlyAvailable: scala.Boolean)
final case class OperationLimitExceeded(message: scala.Option[java.lang.String] = scala.None)
final case class RegisterDomainResponse(operationId: java.lang.String)
final case class UpdateDomainContactPrivacyResponse(operationId: java.lang.String)
final case class EnableDomainTransferLockRequest(domainName: java.lang.String)
final case class DisableDomainTransferLockRequest(domainName: java.lang.String)
final case class UpdateDomainNameserversRequest(domainName: java.lang.String, nameservers: scala.List[avias.route53domains.models.Nameserver], fiauthKey: scala.Option[java.lang.String] = scala.None)
final case class CheckDomainTransferabilityRequest(domainName: java.lang.String, authCode: scala.Option[java.lang.String] = scala.None)
final case class OperationSummary(operationId: java.lang.String, status: java.lang.String, `type`: java.lang.String, submittedDate: java.time.Instant)
final case class RegisterDomainRequest(durationInYears: scala.Int, domainName: java.lang.String, adminContact: avias.route53domains.models.ContactDetail, registrantContact: avias.route53domains.models.ContactDetail, techContact: avias.route53domains.models.ContactDetail, idnLangCode: scala.Option[java.lang.String] = scala.None, autoRenew: scala.Option[scala.Boolean] = scala.None, privacyProtectAdminContact: scala.Option[scala.Boolean] = scala.None, privacyProtectRegistrantContact: scala.Option[scala.Boolean] = scala.None, privacyProtectTechContact: scala.Option[scala.Boolean] = scala.None)
final case class DomainSummary(domainName: java.lang.String, autoRenew: scala.Option[scala.Boolean] = scala.None, transferLock: scala.Option[scala.Boolean] = scala.None, expiry: scala.Option[java.time.Instant] = scala.None)
case object DeleteTagsForDomainResponse
final case class GetContactReachabilityStatusResponse(domainName: scala.Option[java.lang.String] = scala.None, status: scala.Option[java.lang.String] = scala.None)
final case class RenewDomainResponse(operationId: java.lang.String)
final case class GetDomainDetailResponse(domainName: java.lang.String, nameservers: scala.List[avias.route53domains.models.Nameserver], adminContact: avias.route53domains.models.ContactDetail, registrantContact: avias.route53domains.models.ContactDetail, techContact: avias.route53domains.models.ContactDetail, registrarName: scala.Option[java.lang.String] = scala.None, creationDate: scala.Option[java.time.Instant] = scala.None, updatedDate: scala.Option[java.time.Instant] = scala.None, expirationDate: scala.Option[java.time.Instant] = scala.None, abuseContactEmail: scala.Option[java.lang.String] = scala.None, statusList: scala.Option[scala.List[java.lang.String]] = scala.None, whoIsServer: scala.Option[java.lang.String] = scala.None, abuseContactPhone: scala.Option[java.lang.String] = scala.None, dnsSec: scala.Option[java.lang.String] = scala.None, registrarUrl: scala.Option[java.lang.String] = scala.None, reseller: scala.Option[java.lang.String] = scala.None, autoRenew: scala.Option[scala.Boolean] = scala.None, adminPrivacy: scala.Option[scala.Boolean] = scala.None, registrantPrivacy: scala.Option[scala.Boolean] = scala.None, techPrivacy: scala.Option[scala.Boolean] = scala.None, registryDomainId: scala.Option[java.lang.String] = scala.None)
final case class ViewBillingRequest(start: scala.Option[java.time.Instant] = scala.None, end: scala.Option[java.time.Instant] = scala.None, marker: scala.Option[java.lang.String] = scala.None, maxItems: scala.Option[scala.Int] = scala.None)
final case class CheckDomainTransferabilityResponse(transferability: avias.route53domains.models.DomainTransferability)
final case class UpdateDomainNameserversResponse(operationId: java.lang.String)
final case class RetrieveDomainAuthCodeRequest(domainName: java.lang.String)
final case class GetDomainSuggestionsResponse(suggestionsList: scala.Option[scala.List[avias.route53domains.models.DomainSuggestion]] = scala.None)
final case class TransferDomainRequest(durationInYears: scala.Int, domainName: java.lang.String, adminContact: avias.route53domains.models.ContactDetail, registrantContact: avias.route53domains.models.ContactDetail, techContact: avias.route53domains.models.ContactDetail, nameservers: scala.Option[scala.List[avias.route53domains.models.Nameserver]] = scala.None, idnLangCode: scala.Option[java.lang.String] = scala.None, authCode: scala.Option[java.lang.String] = scala.None, autoRenew: scala.Option[scala.Boolean] = scala.None, privacyProtectAdminContact: scala.Option[scala.Boolean] = scala.None, privacyProtectRegistrantContact: scala.Option[scala.Boolean] = scala.None, privacyProtectTechContact: scala.Option[scala.Boolean] = scala.None)
case object UpdateTagsForDomainResponse
final case class GetDomainDetailRequest(domainName: java.lang.String)
final case class ResendContactReachabilityEmailResponse(domainName: scala.Option[java.lang.String] = scala.None, emailAddress: scala.Option[java.lang.String] = scala.None, isAlreadyVerified: scala.Option[scala.Boolean] = scala.None)
final case class ListOperationsResponse(operations: scala.List[avias.route53domains.models.OperationSummary], nextPageMarker: scala.Option[java.lang.String] = scala.None)
final case class Tag(key: scala.Option[java.lang.String] = scala.None, value: scala.Option[java.lang.String] = scala.None)
final case class ListTagsForDomainResponse(tagList: scala.List[avias.route53domains.models.Tag])
final case class ListDomainsResponse(domains: scala.List[avias.route53domains.models.DomainSummary], nextPageMarker: scala.Option[java.lang.String] = scala.None)
final case class DisableDomainTransferLockResponse(operationId: java.lang.String)
final case class ContactDetail(contactType: scala.Option[java.lang.String] = scala.None, email: scala.Option[java.lang.String] = scala.None, phoneNumber: scala.Option[java.lang.String] = scala.None, fax: scala.Option[java.lang.String] = scala.None, firstName: scala.Option[java.lang.String] = scala.None, lastName: scala.Option[java.lang.String] = scala.None, organizationName: scala.Option[java.lang.String] = scala.None, extraParams: scala.Option[scala.List[avias.route53domains.models.ExtraParam]] = scala.None, state: scala.Option[java.lang.String] = scala.None, zipCode: scala.Option[java.lang.String] = scala.None, countryCode: scala.Option[java.lang.String] = scala.None, city: scala.Option[java.lang.String] = scala.None, addressLine1: scala.Option[java.lang.String] = scala.None, addressLine2: scala.Option[java.lang.String] = scala.None)
final case class InvalidInput(message: scala.Option[java.lang.String] = scala.None)
final case class DomainTransferability(transferable: scala.Option[java.lang.String] = scala.None)
final case class DisableDomainAutoRenewRequest(domainName: java.lang.String)
final case class DomainLimitExceeded(message: scala.Option[java.lang.String] = scala.None)
final case class UpdateDomainContactResponse(operationId: java.lang.String)
final case class TLDRulesViolation(message: scala.Option[java.lang.String] = scala.None)
final case class UpdateDomainContactRequest(domainName: java.lang.String, adminContact: scala.Option[avias.route53domains.models.ContactDetail] = scala.None, registrantContact: scala.Option[avias.route53domains.models.ContactDetail] = scala.None, techContact: scala.Option[avias.route53domains.models.ContactDetail] = scala.None)
final case class EnableDomainTransferLockResponse(operationId: java.lang.String)
final case class UpdateTagsForDomainRequest(domainName: java.lang.String, tagsToUpdate: scala.Option[scala.List[avias.route53domains.models.Tag]] = scala.None)
final case class CheckDomainAvailabilityResponse(availability: java.lang.String)
final case class ListTagsForDomainRequest(domainName: java.lang.String)
case object EnableDomainAutoRenewResponse
final case class EnableDomainAutoRenewRequest(domainName: java.lang.String)
final case class GetOperationDetailResponse(submittedDate: scala.Option[java.time.Instant] = scala.None, operationId: scala.Option[java.lang.String] = scala.None, `type`: scala.Option[java.lang.String] = scala.None, status: scala.Option[java.lang.String] = scala.None, domainName: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class UpdateDomainContactPrivacyRequest(domainName: java.lang.String, adminPrivacy: scala.Option[scala.Boolean] = scala.None, registrantPrivacy: scala.Option[scala.Boolean] = scala.None, techPrivacy: scala.Option[scala.Boolean] = scala.None)
case object DisableDomainAutoRenewResponse
final case class RetrieveDomainAuthCodeResponse(authCode: java.lang.String)