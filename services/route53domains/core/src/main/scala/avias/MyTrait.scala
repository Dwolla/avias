package avias.route53domains
trait Amazonroute53domains[F[_]] {
  def updateDomainContact(input: avias.route53domains.models.UpdateDomainContactRequest): F[avias.route53domains.models.UpdateDomainContactResponse]
  def updateTagsForDomain(input: avias.route53domains.models.UpdateTagsForDomainRequest): F[scala.Unit]
  def listOperations(input: avias.route53domains.models.ListOperationsRequest): F[avias.route53domains.models.ListOperationsResponse]
  def disableDomainTransferLock(input: avias.route53domains.models.DisableDomainTransferLockRequest): F[avias.route53domains.models.DisableDomainTransferLockResponse]
  def updateDomainContactPrivacy(input: avias.route53domains.models.UpdateDomainContactPrivacyRequest): F[avias.route53domains.models.UpdateDomainContactPrivacyResponse]
  def transferDomain(input: avias.route53domains.models.TransferDomainRequest): F[avias.route53domains.models.TransferDomainResponse]
  def getDomainDetail(input: avias.route53domains.models.GetDomainDetailRequest): F[avias.route53domains.models.GetDomainDetailResponse]
  def retrieveDomainAuthCode(input: avias.route53domains.models.RetrieveDomainAuthCodeRequest): F[avias.route53domains.models.RetrieveDomainAuthCodeResponse]
  def listTagsForDomain(input: avias.route53domains.models.ListTagsForDomainRequest): F[avias.route53domains.models.ListTagsForDomainResponse]
  def resendContactReachabilityEmail(input: avias.route53domains.models.ResendContactReachabilityEmailRequest): F[avias.route53domains.models.ResendContactReachabilityEmailResponse]
  def checkDomainAvailability(input: avias.route53domains.models.CheckDomainAvailabilityRequest): F[avias.route53domains.models.CheckDomainAvailabilityResponse]
  def getDomainSuggestions(input: avias.route53domains.models.GetDomainSuggestionsRequest): F[avias.route53domains.models.GetDomainSuggestionsResponse]
  def getOperationDetail(input: avias.route53domains.models.GetOperationDetailRequest): F[avias.route53domains.models.GetOperationDetailResponse]
  def viewBilling(input: avias.route53domains.models.ViewBillingRequest): F[avias.route53domains.models.ViewBillingResponse]
  def renewDomain(input: avias.route53domains.models.RenewDomainRequest): F[avias.route53domains.models.RenewDomainResponse]
  def checkDomainTransferability(input: avias.route53domains.models.CheckDomainTransferabilityRequest): F[avias.route53domains.models.CheckDomainTransferabilityResponse]
  def deleteTagsForDomain(input: avias.route53domains.models.DeleteTagsForDomainRequest): F[scala.Unit]
  def disableDomainAutoRenew(input: avias.route53domains.models.DisableDomainAutoRenewRequest): F[scala.Unit]
  def enableDomainAutoRenew(input: avias.route53domains.models.EnableDomainAutoRenewRequest): F[scala.Unit]
  def registerDomain(input: avias.route53domains.models.RegisterDomainRequest): F[avias.route53domains.models.RegisterDomainResponse]
  def enableDomainTransferLock(input: avias.route53domains.models.EnableDomainTransferLockRequest): F[avias.route53domains.models.EnableDomainTransferLockResponse]
  def getContactReachabilityStatus(input: avias.route53domains.models.GetContactReachabilityStatusRequest): F[avias.route53domains.models.GetContactReachabilityStatusResponse]
  def listDomains(input: avias.route53domains.models.ListDomainsRequest): F[avias.route53domains.models.ListDomainsResponse]
  def updateDomainNameservers(input: avias.route53domains.models.UpdateDomainNameserversRequest): F[avias.route53domains.models.UpdateDomainNameserversResponse]
}