package avias.directconnect
trait Amazondirectconnect[F[_]] {
  def describeVirtualGateways: F[avias.directconnect.models.VirtualGateways]
  def deleteBGPPeer(input: avias.directconnect.models.DeleteBGPPeerRequest): F[avias.directconnect.models.DeleteBGPPeerResponse]
  def describeDirectConnectGateways(input: avias.directconnect.models.DescribeDirectConnectGatewaysRequest): F[avias.directconnect.models.DescribeDirectConnectGatewaysResult]
  def allocatePrivateVirtualInterface(input: avias.directconnect.models.AllocatePrivateVirtualInterfaceRequest): F[avias.directconnect.models.VirtualInterface]
  def deleteConnection(input: avias.directconnect.models.DeleteConnectionRequest): F[avias.directconnect.models.Connection]
  def deleteDirectConnectGateway(input: avias.directconnect.models.DeleteDirectConnectGatewayRequest): F[avias.directconnect.models.DeleteDirectConnectGatewayResult]
  def confirmConnection(input: avias.directconnect.models.ConfirmConnectionRequest): F[avias.directconnect.models.ConfirmConnectionResponse]
  def describeDirectConnectGatewayAssociations(input: avias.directconnect.models.DescribeDirectConnectGatewayAssociationsRequest): F[avias.directconnect.models.DescribeDirectConnectGatewayAssociationsResult]
  def associateVirtualInterface(input: avias.directconnect.models.AssociateVirtualInterfaceRequest): F[avias.directconnect.models.VirtualInterface]
  def disassociateConnectionFromLag(input: avias.directconnect.models.DisassociateConnectionFromLagRequest): F[avias.directconnect.models.Connection]
  def confirmPublicVirtualInterface(input: avias.directconnect.models.ConfirmPublicVirtualInterfaceRequest): F[avias.directconnect.models.ConfirmPublicVirtualInterfaceResponse]
  def createDirectConnectGateway(input: avias.directconnect.models.CreateDirectConnectGatewayRequest): F[avias.directconnect.models.CreateDirectConnectGatewayResult]
  def untagResource(input: avias.directconnect.models.UntagResourceRequest): F[scala.Unit]
  def createInterconnect(input: avias.directconnect.models.CreateInterconnectRequest): F[avias.directconnect.models.Interconnect]
  def createPrivateVirtualInterface(input: avias.directconnect.models.CreatePrivateVirtualInterfaceRequest): F[avias.directconnect.models.VirtualInterface]
  def describeConnections(input: avias.directconnect.models.DescribeConnectionsRequest): F[avias.directconnect.models.Connections]
  def describeLags(input: avias.directconnect.models.DescribeLagsRequest): F[avias.directconnect.models.Lags]
  def describeConnectionsOnInterconnect(input: avias.directconnect.models.DescribeConnectionsOnInterconnectRequest): F[avias.directconnect.models.Connections]
  def describeInterconnects(input: avias.directconnect.models.DescribeInterconnectsRequest): F[avias.directconnect.models.Interconnects]
  def describeLocations: F[avias.directconnect.models.Locations]
  def describeConnectionLoa(input: avias.directconnect.models.DescribeConnectionLoaRequest): F[avias.directconnect.models.DescribeConnectionLoaResponse]
  def deleteVirtualInterface(input: avias.directconnect.models.DeleteVirtualInterfaceRequest): F[avias.directconnect.models.DeleteVirtualInterfaceResponse]
  def allocatePublicVirtualInterface(input: avias.directconnect.models.AllocatePublicVirtualInterfaceRequest): F[avias.directconnect.models.VirtualInterface]
  def confirmPrivateVirtualInterface(input: avias.directconnect.models.ConfirmPrivateVirtualInterfaceRequest): F[avias.directconnect.models.ConfirmPrivateVirtualInterfaceResponse]
  def deleteDirectConnectGatewayAssociation(input: avias.directconnect.models.DeleteDirectConnectGatewayAssociationRequest): F[avias.directconnect.models.DeleteDirectConnectGatewayAssociationResult]
  def describeDirectConnectGatewayAttachments(input: avias.directconnect.models.DescribeDirectConnectGatewayAttachmentsRequest): F[avias.directconnect.models.DescribeDirectConnectGatewayAttachmentsResult]
  def createConnection(input: avias.directconnect.models.CreateConnectionRequest): F[avias.directconnect.models.Connection]
  def describeHostedConnections(input: avias.directconnect.models.DescribeHostedConnectionsRequest): F[avias.directconnect.models.Connections]
  def allocateHostedConnection(input: avias.directconnect.models.AllocateHostedConnectionRequest): F[avias.directconnect.models.Connection]
  def createPublicVirtualInterface(input: avias.directconnect.models.CreatePublicVirtualInterfaceRequest): F[avias.directconnect.models.VirtualInterface]
  def deleteInterconnect(input: avias.directconnect.models.DeleteInterconnectRequest): F[avias.directconnect.models.DeleteInterconnectResponse]
  def createBGPPeer(input: avias.directconnect.models.CreateBGPPeerRequest): F[avias.directconnect.models.CreateBGPPeerResponse]
  def describeVirtualInterfaces(input: avias.directconnect.models.DescribeVirtualInterfacesRequest): F[avias.directconnect.models.VirtualInterfaces]
  def createDirectConnectGatewayAssociation(input: avias.directconnect.models.CreateDirectConnectGatewayAssociationRequest): F[avias.directconnect.models.CreateDirectConnectGatewayAssociationResult]
  def deleteLag(input: avias.directconnect.models.DeleteLagRequest): F[avias.directconnect.models.Lag]
  def describeInterconnectLoa(input: avias.directconnect.models.DescribeInterconnectLoaRequest): F[avias.directconnect.models.DescribeInterconnectLoaResponse]
  def associateHostedConnection(input: avias.directconnect.models.AssociateHostedConnectionRequest): F[avias.directconnect.models.Connection]
  def createLag(input: avias.directconnect.models.CreateLagRequest): F[avias.directconnect.models.Lag]
  def allocateConnectionOnInterconnect(input: avias.directconnect.models.AllocateConnectionOnInterconnectRequest): F[avias.directconnect.models.Connection]
  def describeTags(input: avias.directconnect.models.DescribeTagsRequest): F[avias.directconnect.models.DescribeTagsResponse]
  def updateLag(input: avias.directconnect.models.UpdateLagRequest): F[avias.directconnect.models.Lag]
  def tagResource(input: avias.directconnect.models.TagResourceRequest): F[scala.Unit]
  def describeLoa(input: avias.directconnect.models.DescribeLoaRequest): F[avias.directconnect.models.Loa]
  def associateConnectionWithLag(input: avias.directconnect.models.AssociateConnectionWithLagRequest): F[avias.directconnect.models.Connection]
}