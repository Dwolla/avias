package org.lyranthe.araethura.ecs
trait Amazonecs[F[_]] {
  def submitContainerStateChange(input: models.SubmitContainerStateChangeRequest): F[models.SubmitContainerStateChangeResponse]
  def describeTaskDefinition(input: models.DescribeTaskDefinitionRequest): F[models.DescribeTaskDefinitionResponse]
  def listAttributes(input: models.ListAttributesRequest): F[models.ListAttributesResponse]
  def listContainerInstances(input: models.ListContainerInstancesRequest): F[models.ListContainerInstancesResponse]
  def deregisterContainerInstance(input: models.DeregisterContainerInstanceRequest): F[models.DeregisterContainerInstanceResponse]
  def deleteService(input: models.DeleteServiceRequest): F[models.DeleteServiceResponse]
  def runTask(input: models.RunTaskRequest): F[models.RunTaskResponse]
  def describeClusters(input: models.DescribeClustersRequest): F[models.DescribeClustersResponse]
  def putAttributes(input: models.PutAttributesRequest): F[models.PutAttributesResponse]
  def describeServices(input: models.DescribeServicesRequest): F[models.DescribeServicesResponse]
  def createService(input: models.CreateServiceRequest): F[models.CreateServiceResponse]
  def listTasks(input: models.ListTasksRequest): F[models.ListTasksResponse]
  def listTaskDefinitions(input: models.ListTaskDefinitionsRequest): F[models.ListTaskDefinitionsResponse]
  def describeContainerInstances(input: models.DescribeContainerInstancesRequest): F[models.DescribeContainerInstancesResponse]
  def listClusters(input: models.ListClustersRequest): F[models.ListClustersResponse]
  def deleteCluster(input: models.DeleteClusterRequest): F[models.DeleteClusterResponse]
  def updateContainerInstancesState(input: models.UpdateContainerInstancesStateRequest): F[models.UpdateContainerInstancesStateResponse]
  def deregisterTaskDefinition(input: models.DeregisterTaskDefinitionRequest): F[models.DeregisterTaskDefinitionResponse]
  def stopTask(input: models.StopTaskRequest): F[models.StopTaskResponse]
  def updateService(input: models.UpdateServiceRequest): F[models.UpdateServiceResponse]
  def startTask(input: models.StartTaskRequest): F[models.StartTaskResponse]
  def registerContainerInstance(input: models.RegisterContainerInstanceRequest): F[models.RegisterContainerInstanceResponse]
  def registerTaskDefinition(input: models.RegisterTaskDefinitionRequest): F[models.RegisterTaskDefinitionResponse]
  def deleteAttributes(input: models.DeleteAttributesRequest): F[models.DeleteAttributesResponse]
  def submitTaskStateChange(input: models.SubmitTaskStateChangeRequest): F[models.SubmitTaskStateChangeResponse]
  def discoverPollEndpoint(input: models.DiscoverPollEndpointRequest): F[models.DiscoverPollEndpointResponse]
  def createCluster(input: models.CreateClusterRequest): F[models.CreateClusterResponse]
  def updateContainerAgent(input: models.UpdateContainerAgentRequest): F[models.UpdateContainerAgentResponse]
  def describeTasks(input: models.DescribeTasksRequest): F[models.DescribeTasksResponse]
  def listTaskDefinitionFamilies(input: models.ListTaskDefinitionFamiliesRequest): F[models.ListTaskDefinitionFamiliesResponse]
  def listServices(input: models.ListServicesRequest): F[models.ListServicesResponse]
}