package org.lyranthe.araethura.health.models
final case class EventAggregate(aggregateValue: scala.Option[java.lang.String] = scala.None, count: scala.Option[scala.Int] = scala.None)
final case class DescribeAffectedEntitiesRequest(filter: org.lyranthe.araethura.health.models.EntityFilter, locale: scala.Option[java.lang.String] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, maxResults: scala.Option[scala.Int] = scala.None)
final case class EventDescription(latestDescription: scala.Option[java.lang.String] = scala.None)
final case class DateTimeRange(from: scala.Option[java.time.Instant] = scala.None, to: scala.Option[java.time.Instant] = scala.None)
final case class DescribeEventDetailsResponse(successfulSet: scala.Option[scala.List[org.lyranthe.araethura.health.models.EventDetails]] = scala.None, failedSet: scala.Option[scala.List[org.lyranthe.araethura.health.models.EventDetailsErrorItem]] = scala.None)
final case class EventTypeFilter(eventTypeCodes: scala.Option[scala.List[java.lang.String]] = scala.None, services: scala.Option[scala.List[java.lang.String]] = scala.None, eventTypeCategories: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class DescribeEventAggregatesRequest(aggregateField: java.lang.String, filter: scala.Option[org.lyranthe.araethura.health.models.EventFilter] = scala.None, maxResults: scala.Option[scala.Int] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class EntityAggregate(eventArn: scala.Option[java.lang.String] = scala.None, count: scala.Option[scala.Int] = scala.None)
final case class DescribeEventTypesRequest(filter: scala.Option[org.lyranthe.araethura.health.models.EventTypeFilter] = scala.None, locale: scala.Option[java.lang.String] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, maxResults: scala.Option[scala.Int] = scala.None)
final case class EventType(service: scala.Option[java.lang.String] = scala.None, code: scala.Option[java.lang.String] = scala.None, category: scala.Option[java.lang.String] = scala.None)
final case class DescribeEventAggregatesResponse(eventAggregates: scala.Option[scala.List[org.lyranthe.araethura.health.models.EventAggregate]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class EntityFilter(eventArns: scala.List[java.lang.String], entityArns: scala.Option[scala.List[java.lang.String]] = scala.None, entityValues: scala.Option[scala.List[java.lang.String]] = scala.None, lastUpdatedTimes: scala.Option[scala.List[org.lyranthe.araethura.health.models.DateTimeRange]] = scala.None, tags: scala.Option[scala.List[scala.collection.immutable.Map[java.lang.String, java.lang.String]]] = scala.None, statusCodes: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class DescribeEntityAggregatesRequest(eventArns: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class DescribeEventsResponse(events: scala.Option[scala.List[org.lyranthe.araethura.health.models.Event]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class DescribeEventsRequest(filter: scala.Option[org.lyranthe.araethura.health.models.EventFilter] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, maxResults: scala.Option[scala.Int] = scala.None, locale: scala.Option[java.lang.String] = scala.None)
final case class DescribeEventDetailsRequest(eventArns: scala.List[java.lang.String], locale: scala.Option[java.lang.String] = scala.None)
final case class DescribeEntityAggregatesResponse(entityAggregates: scala.Option[scala.List[org.lyranthe.araethura.health.models.EntityAggregate]] = scala.None)
final case class EventFilter(entityArns: scala.Option[scala.List[java.lang.String]] = scala.None, availabilityZones: scala.Option[scala.List[java.lang.String]] = scala.None, entityValues: scala.Option[scala.List[java.lang.String]] = scala.None, regions: scala.Option[scala.List[java.lang.String]] = scala.None, startTimes: scala.Option[scala.List[org.lyranthe.araethura.health.models.DateTimeRange]] = scala.None, endTimes: scala.Option[scala.List[org.lyranthe.araethura.health.models.DateTimeRange]] = scala.None, lastUpdatedTimes: scala.Option[scala.List[org.lyranthe.araethura.health.models.DateTimeRange]] = scala.None, eventStatusCodes: scala.Option[scala.List[java.lang.String]] = scala.None, eventTypeCodes: scala.Option[scala.List[java.lang.String]] = scala.None, tags: scala.Option[scala.List[scala.collection.immutable.Map[java.lang.String, java.lang.String]]] = scala.None, eventArns: scala.Option[scala.List[java.lang.String]] = scala.None, eventTypeCategories: scala.Option[scala.List[java.lang.String]] = scala.None, services: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class EventDetailsErrorItem(eventArn: scala.Option[java.lang.String] = scala.None, errorName: scala.Option[java.lang.String] = scala.None, errorMessage: scala.Option[java.lang.String] = scala.None)
final case class EventDetails(event: scala.Option[org.lyranthe.araethura.health.models.Event] = scala.None, eventDescription: scala.Option[org.lyranthe.araethura.health.models.EventDescription] = scala.None, eventMetadata: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None)
final case class DescribeEventTypesResponse(eventTypes: scala.Option[scala.List[org.lyranthe.araethura.health.models.EventType]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class InvalidPaginationToken(message: scala.Option[java.lang.String] = scala.None)
final case class DescribeAffectedEntitiesResponse(entities: scala.Option[scala.List[org.lyranthe.araethura.health.models.AffectedEntity]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class AffectedEntity(entityValue: scala.Option[java.lang.String] = scala.None, entityArn: scala.Option[java.lang.String] = scala.None, tags: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, awsAccountId: scala.Option[java.lang.String] = scala.None, statusCode: scala.Option[java.lang.String] = scala.None, lastUpdatedTime: scala.Option[java.time.Instant] = scala.None, eventArn: scala.Option[java.lang.String] = scala.None)
final case class Event(statusCode: scala.Option[java.lang.String] = scala.None, availabilityZone: scala.Option[java.lang.String] = scala.None, region: scala.Option[java.lang.String] = scala.None, eventTypeCode: scala.Option[java.lang.String] = scala.None, service: scala.Option[java.lang.String] = scala.None, eventTypeCategory: scala.Option[java.lang.String] = scala.None, startTime: scala.Option[java.time.Instant] = scala.None, endTime: scala.Option[java.time.Instant] = scala.None, lastUpdatedTime: scala.Option[java.time.Instant] = scala.None, arn: scala.Option[java.lang.String] = scala.None)
final case class UnsupportedLocale(message: scala.Option[java.lang.String] = scala.None)