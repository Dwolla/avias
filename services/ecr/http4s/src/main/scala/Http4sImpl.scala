package org.lyranthe.araethura.ecr.http4s
import org.http4s.Method._
import org.lyranthe.araethura.ecr.circe._
import org.lyranthe.araethura.ecr.models
class AmazonecrClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.ecr.Amazonecr[F] {
  private[this] final val ServiceType: String = "ecr"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AmazonEC2ContainerRegistry_V20150921")
  override def initiateLayerUpload(input: org.lyranthe.araethura.ecr.models.InitiateLayerUploadRequest): F[org.lyranthe.araethura.ecr.models.InitiateLayerUploadResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.InitiateLayerUploadResponse, org.lyranthe.araethura.ecr.models.InitiateLayerUploadRequest](client, awsData, ServiceType, ServiceAndPrefix, "InitiateLayerUpload", POST, "/", input)
  override def putImage(input: org.lyranthe.araethura.ecr.models.PutImageRequest): F[org.lyranthe.araethura.ecr.models.PutImageResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.PutImageResponse, org.lyranthe.araethura.ecr.models.PutImageRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutImage", POST, "/", input)
  override def uploadLayerPart(input: org.lyranthe.araethura.ecr.models.UploadLayerPartRequest): F[org.lyranthe.araethura.ecr.models.UploadLayerPartResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.UploadLayerPartResponse, org.lyranthe.araethura.ecr.models.UploadLayerPartRequest](client, awsData, ServiceType, ServiceAndPrefix, "UploadLayerPart", POST, "/", input)
  override def setRepositoryPolicy(input: org.lyranthe.araethura.ecr.models.SetRepositoryPolicyRequest): F[org.lyranthe.araethura.ecr.models.SetRepositoryPolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.SetRepositoryPolicyResponse, org.lyranthe.araethura.ecr.models.SetRepositoryPolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "SetRepositoryPolicy", POST, "/", input)
  override def putLifecyclePolicy(input: org.lyranthe.araethura.ecr.models.PutLifecyclePolicyRequest): F[org.lyranthe.araethura.ecr.models.PutLifecyclePolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.PutLifecyclePolicyResponse, org.lyranthe.araethura.ecr.models.PutLifecyclePolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutLifecyclePolicy", POST, "/", input)
  override def batchCheckLayerAvailability(input: org.lyranthe.araethura.ecr.models.BatchCheckLayerAvailabilityRequest): F[org.lyranthe.araethura.ecr.models.BatchCheckLayerAvailabilityResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.BatchCheckLayerAvailabilityResponse, org.lyranthe.araethura.ecr.models.BatchCheckLayerAvailabilityRequest](client, awsData, ServiceType, ServiceAndPrefix, "BatchCheckLayerAvailability", POST, "/", input)
  override def batchDeleteImage(input: org.lyranthe.araethura.ecr.models.BatchDeleteImageRequest): F[org.lyranthe.araethura.ecr.models.BatchDeleteImageResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.BatchDeleteImageResponse, org.lyranthe.araethura.ecr.models.BatchDeleteImageRequest](client, awsData, ServiceType, ServiceAndPrefix, "BatchDeleteImage", POST, "/", input)
  override def describeImages(input: org.lyranthe.araethura.ecr.models.DescribeImagesRequest): F[org.lyranthe.araethura.ecr.models.DescribeImagesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.DescribeImagesResponse, org.lyranthe.araethura.ecr.models.DescribeImagesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeImages", POST, "/", input)
  override def listImages(input: org.lyranthe.araethura.ecr.models.ListImagesRequest): F[org.lyranthe.araethura.ecr.models.ListImagesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.ListImagesResponse, org.lyranthe.araethura.ecr.models.ListImagesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListImages", POST, "/", input)
  override def startLifecyclePolicyPreview(input: org.lyranthe.araethura.ecr.models.StartLifecyclePolicyPreviewRequest): F[org.lyranthe.araethura.ecr.models.StartLifecyclePolicyPreviewResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.StartLifecyclePolicyPreviewResponse, org.lyranthe.araethura.ecr.models.StartLifecyclePolicyPreviewRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartLifecyclePolicyPreview", POST, "/", input)
  override def completeLayerUpload(input: org.lyranthe.araethura.ecr.models.CompleteLayerUploadRequest): F[org.lyranthe.araethura.ecr.models.CompleteLayerUploadResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.CompleteLayerUploadResponse, org.lyranthe.araethura.ecr.models.CompleteLayerUploadRequest](client, awsData, ServiceType, ServiceAndPrefix, "CompleteLayerUpload", POST, "/", input)
  override def deleteLifecyclePolicy(input: org.lyranthe.araethura.ecr.models.DeleteLifecyclePolicyRequest): F[org.lyranthe.araethura.ecr.models.DeleteLifecyclePolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.DeleteLifecyclePolicyResponse, org.lyranthe.araethura.ecr.models.DeleteLifecyclePolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteLifecyclePolicy", POST, "/", input)
  override def createRepository(input: org.lyranthe.araethura.ecr.models.CreateRepositoryRequest): F[org.lyranthe.araethura.ecr.models.CreateRepositoryResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.CreateRepositoryResponse, org.lyranthe.araethura.ecr.models.CreateRepositoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateRepository", POST, "/", input)
  override def getLifecyclePolicyPreview(input: org.lyranthe.araethura.ecr.models.GetLifecyclePolicyPreviewRequest): F[org.lyranthe.araethura.ecr.models.GetLifecyclePolicyPreviewResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.GetLifecyclePolicyPreviewResponse, org.lyranthe.araethura.ecr.models.GetLifecyclePolicyPreviewRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetLifecyclePolicyPreview", POST, "/", input)
  override def batchGetImage(input: org.lyranthe.araethura.ecr.models.BatchGetImageRequest): F[org.lyranthe.araethura.ecr.models.BatchGetImageResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.BatchGetImageResponse, org.lyranthe.araethura.ecr.models.BatchGetImageRequest](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetImage", POST, "/", input)
  override def deleteRepository(input: org.lyranthe.araethura.ecr.models.DeleteRepositoryRequest): F[org.lyranthe.araethura.ecr.models.DeleteRepositoryResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.DeleteRepositoryResponse, org.lyranthe.araethura.ecr.models.DeleteRepositoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteRepository", POST, "/", input)
  override def describeRepositories(input: org.lyranthe.araethura.ecr.models.DescribeRepositoriesRequest): F[org.lyranthe.araethura.ecr.models.DescribeRepositoriesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.DescribeRepositoriesResponse, org.lyranthe.araethura.ecr.models.DescribeRepositoriesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeRepositories", POST, "/", input)
  override def getDownloadUrlForLayer(input: org.lyranthe.araethura.ecr.models.GetDownloadUrlForLayerRequest): F[org.lyranthe.araethura.ecr.models.GetDownloadUrlForLayerResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.GetDownloadUrlForLayerResponse, org.lyranthe.araethura.ecr.models.GetDownloadUrlForLayerRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDownloadUrlForLayer", POST, "/", input)
  override def getLifecyclePolicy(input: org.lyranthe.araethura.ecr.models.GetLifecyclePolicyRequest): F[org.lyranthe.araethura.ecr.models.GetLifecyclePolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.GetLifecyclePolicyResponse, org.lyranthe.araethura.ecr.models.GetLifecyclePolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetLifecyclePolicy", POST, "/", input)
  override def deleteRepositoryPolicy(input: org.lyranthe.araethura.ecr.models.DeleteRepositoryPolicyRequest): F[org.lyranthe.araethura.ecr.models.DeleteRepositoryPolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.DeleteRepositoryPolicyResponse, org.lyranthe.araethura.ecr.models.DeleteRepositoryPolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteRepositoryPolicy", POST, "/", input)
  override def getAuthorizationToken(input: org.lyranthe.araethura.ecr.models.GetAuthorizationTokenRequest): F[org.lyranthe.araethura.ecr.models.GetAuthorizationTokenResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.GetAuthorizationTokenResponse, org.lyranthe.araethura.ecr.models.GetAuthorizationTokenRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetAuthorizationToken", POST, "/", input)
  override def getRepositoryPolicy(input: org.lyranthe.araethura.ecr.models.GetRepositoryPolicyRequest): F[org.lyranthe.araethura.ecr.models.GetRepositoryPolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.ecr.models.GetRepositoryPolicyResponse, org.lyranthe.araethura.ecr.models.GetRepositoryPolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetRepositoryPolicy", POST, "/", input)
}