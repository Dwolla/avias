package org.lyranthe.araethura.ecr.http4s
import org.http4s.Method._
import org.lyranthe.araethura.ecr.circe._
import org.lyranthe.araethura.ecr.models
class AmazonecrClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.ecr.Amazonecr[F] {
  private[this] final val ServiceType: String = "ecr"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AmazonEC2ContainerRegistry_V20150921")
  override def initiateLayerUpload(input: models.InitiateLayerUploadRequest): F[models.InitiateLayerUploadResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.InitiateLayerUploadResponse, models.InitiateLayerUploadRequest](client, awsData, ServiceType, ServiceAndPrefix, "InitiateLayerUpload", POST, "/", input)
  override def putImage(input: models.PutImageRequest): F[models.PutImageResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutImageResponse, models.PutImageRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutImage", POST, "/", input)
  override def uploadLayerPart(input: models.UploadLayerPartRequest): F[models.UploadLayerPartResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UploadLayerPartResponse, models.UploadLayerPartRequest](client, awsData, ServiceType, ServiceAndPrefix, "UploadLayerPart", POST, "/", input)
  override def setRepositoryPolicy(input: models.SetRepositoryPolicyRequest): F[models.SetRepositoryPolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.SetRepositoryPolicyResponse, models.SetRepositoryPolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "SetRepositoryPolicy", POST, "/", input)
  override def putLifecyclePolicy(input: models.PutLifecyclePolicyRequest): F[models.PutLifecyclePolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutLifecyclePolicyResponse, models.PutLifecyclePolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutLifecyclePolicy", POST, "/", input)
  override def batchCheckLayerAvailability(input: models.BatchCheckLayerAvailabilityRequest): F[models.BatchCheckLayerAvailabilityResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchCheckLayerAvailabilityResponse, models.BatchCheckLayerAvailabilityRequest](client, awsData, ServiceType, ServiceAndPrefix, "BatchCheckLayerAvailability", POST, "/", input)
  override def batchDeleteImage(input: models.BatchDeleteImageRequest): F[models.BatchDeleteImageResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchDeleteImageResponse, models.BatchDeleteImageRequest](client, awsData, ServiceType, ServiceAndPrefix, "BatchDeleteImage", POST, "/", input)
  override def describeImages(input: models.DescribeImagesRequest): F[models.DescribeImagesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeImagesResponse, models.DescribeImagesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeImages", POST, "/", input)
  override def listImages(input: models.ListImagesRequest): F[models.ListImagesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListImagesResponse, models.ListImagesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListImages", POST, "/", input)
  override def startLifecyclePolicyPreview(input: models.StartLifecyclePolicyPreviewRequest): F[models.StartLifecyclePolicyPreviewResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StartLifecyclePolicyPreviewResponse, models.StartLifecyclePolicyPreviewRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartLifecyclePolicyPreview", POST, "/", input)
  override def completeLayerUpload(input: models.CompleteLayerUploadRequest): F[models.CompleteLayerUploadResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CompleteLayerUploadResponse, models.CompleteLayerUploadRequest](client, awsData, ServiceType, ServiceAndPrefix, "CompleteLayerUpload", POST, "/", input)
  override def deleteLifecyclePolicy(input: models.DeleteLifecyclePolicyRequest): F[models.DeleteLifecyclePolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteLifecyclePolicyResponse, models.DeleteLifecyclePolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteLifecyclePolicy", POST, "/", input)
  override def createRepository(input: models.CreateRepositoryRequest): F[models.CreateRepositoryResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateRepositoryResponse, models.CreateRepositoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateRepository", POST, "/", input)
  override def getLifecyclePolicyPreview(input: models.GetLifecyclePolicyPreviewRequest): F[models.GetLifecyclePolicyPreviewResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetLifecyclePolicyPreviewResponse, models.GetLifecyclePolicyPreviewRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetLifecyclePolicyPreview", POST, "/", input)
  override def batchGetImage(input: models.BatchGetImageRequest): F[models.BatchGetImageResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchGetImageResponse, models.BatchGetImageRequest](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetImage", POST, "/", input)
  override def deleteRepository(input: models.DeleteRepositoryRequest): F[models.DeleteRepositoryResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteRepositoryResponse, models.DeleteRepositoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteRepository", POST, "/", input)
  override def describeRepositories(input: models.DescribeRepositoriesRequest): F[models.DescribeRepositoriesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeRepositoriesResponse, models.DescribeRepositoriesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeRepositories", POST, "/", input)
  override def getDownloadUrlForLayer(input: models.GetDownloadUrlForLayerRequest): F[models.GetDownloadUrlForLayerResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDownloadUrlForLayerResponse, models.GetDownloadUrlForLayerRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDownloadUrlForLayer", POST, "/", input)
  override def getLifecyclePolicy(input: models.GetLifecyclePolicyRequest): F[models.GetLifecyclePolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetLifecyclePolicyResponse, models.GetLifecyclePolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetLifecyclePolicy", POST, "/", input)
  override def deleteRepositoryPolicy(input: models.DeleteRepositoryPolicyRequest): F[models.DeleteRepositoryPolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteRepositoryPolicyResponse, models.DeleteRepositoryPolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteRepositoryPolicy", POST, "/", input)
  override def getAuthorizationToken(input: models.GetAuthorizationTokenRequest): F[models.GetAuthorizationTokenResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetAuthorizationTokenResponse, models.GetAuthorizationTokenRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetAuthorizationToken", POST, "/", input)
  override def getRepositoryPolicy(input: models.GetRepositoryPolicyRequest): F[models.GetRepositoryPolicyResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetRepositoryPolicyResponse, models.GetRepositoryPolicyRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetRepositoryPolicy", POST, "/", input)
}