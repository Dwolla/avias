package org.lyranthe.araethura.kms
trait Amazonkms[F[_]] {
  def enableKey(input: models.EnableKeyRequest): F[Unit]
  def getKeyPolicy(input: models.GetKeyPolicyRequest): F[models.GetKeyPolicyResponse]
  def generateRandom(input: models.GenerateRandomRequest): F[models.GenerateRandomResponse]
  def scheduleKeyDeletion(input: models.ScheduleKeyDeletionRequest): F[models.ScheduleKeyDeletionResponse]
  def disableKey(input: models.DisableKeyRequest): F[Unit]
  def revokeGrant(input: models.RevokeGrantRequest): F[Unit]
  def retireGrant(input: models.RetireGrantRequest): F[Unit]
  def reEncrypt(input: models.ReEncryptRequest): F[models.ReEncryptResponse]
  def generateDataKeyWithoutPlaintext(input: models.GenerateDataKeyWithoutPlaintextRequest): F[models.GenerateDataKeyWithoutPlaintextResponse]
  def deleteImportedKeyMaterial(input: models.DeleteImportedKeyMaterialRequest): F[Unit]
  def tagResource(input: models.TagResourceRequest): F[Unit]
  def describeKey(input: models.DescribeKeyRequest): F[models.DescribeKeyResponse]
  def generateDataKey(input: models.GenerateDataKeyRequest): F[models.GenerateDataKeyResponse]
  def listRetirableGrants(input: models.ListRetirableGrantsRequest): F[models.ListGrantsResponse]
  def listResourceTags(input: models.ListResourceTagsRequest): F[models.ListResourceTagsResponse]
  def updateKeyDescription(input: models.UpdateKeyDescriptionRequest): F[Unit]
  def encrypt(input: models.EncryptRequest): F[models.EncryptResponse]
  def createGrant(input: models.CreateGrantRequest): F[models.CreateGrantResponse]
  def cancelKeyDeletion(input: models.CancelKeyDeletionRequest): F[models.CancelKeyDeletionResponse]
  def putKeyPolicy(input: models.PutKeyPolicyRequest): F[Unit]
  def deleteAlias(input: models.DeleteAliasRequest): F[Unit]
  def listAliases(input: models.ListAliasesRequest): F[models.ListAliasesResponse]
  def getKeyRotationStatus(input: models.GetKeyRotationStatusRequest): F[models.GetKeyRotationStatusResponse]
  def getParametersForImport(input: models.GetParametersForImportRequest): F[models.GetParametersForImportResponse]
  def enableKeyRotation(input: models.EnableKeyRotationRequest): F[Unit]
  def updateAlias(input: models.UpdateAliasRequest): F[Unit]
  def listKeys(input: models.ListKeysRequest): F[models.ListKeysResponse]
  def createAlias(input: models.CreateAliasRequest): F[Unit]
  def decrypt(input: models.DecryptRequest): F[models.DecryptResponse]
  def untagResource(input: models.UntagResourceRequest): F[Unit]
  def createKey(input: models.CreateKeyRequest): F[models.CreateKeyResponse]
  def listKeyPolicies(input: models.ListKeyPoliciesRequest): F[models.ListKeyPoliciesResponse]
  def listGrants(input: models.ListGrantsRequest): F[models.ListGrantsResponse]
  def importKeyMaterial(input: models.ImportKeyMaterialRequest): F[scala.Unit]
  def disableKeyRotation(input: models.DisableKeyRotationRequest): F[Unit]
}