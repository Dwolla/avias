package avias.kms.models
final case class ListGrantsResponse(grants: scala.Option[scala.List[avias.kms.models.GrantListEntry]] = scala.None, nextMarker: scala.Option[java.lang.String] = scala.None, truncated: scala.Option[scala.Boolean] = scala.None)
final case class GenerateRandomRequest(numberOfBytes: scala.Option[scala.Int] = scala.None)
final case class InvalidImportTokenException(message: scala.Option[java.lang.String] = scala.None)
final case class GenerateDataKeyResponse(ciphertextBlob: scala.Option[scala.Array[scala.Byte]] = scala.None, plaintext: scala.Option[scala.Array[scala.Byte]] = scala.None, keyId: scala.Option[java.lang.String] = scala.None)
final case class ListAliasesRequest(limit: scala.Option[scala.Int] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class EncryptRequest(keyId: java.lang.String, plaintext: scala.Array[scala.Byte], encryptionContext: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, grantTokens: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class IncorrectKeyMaterialException(message: scala.Option[java.lang.String] = scala.None)
final case class GrantConstraints(encryptionContextSubset: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, encryptionContextEquals: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None)
final case class KeyMetadata(keyId: java.lang.String, awsaccountId: scala.Option[java.lang.String] = scala.None, creationDate: scala.Option[java.time.Instant] = scala.None, deletionDate: scala.Option[java.time.Instant] = scala.None, validTo: scala.Option[java.time.Instant] = scala.None, expirationModel: scala.Option[java.lang.String] = scala.None, origin: scala.Option[java.lang.String] = scala.None, arn: scala.Option[java.lang.String] = scala.None, keyManager: scala.Option[java.lang.String] = scala.None, enabled: scala.Option[scala.Boolean] = scala.None, keyState: scala.Option[java.lang.String] = scala.None, description: scala.Option[java.lang.String] = scala.None, keyUsage: scala.Option[java.lang.String] = scala.None)
final case class NotFoundException(message: scala.Option[java.lang.String] = scala.None)
final case class PutKeyPolicyRequest(keyId: java.lang.String, policyName: java.lang.String, policy: java.lang.String, bypassPolicyLockoutSafetyCheck: scala.Option[scala.Boolean] = scala.None)
final case class DecryptRequest(ciphertextBlob: scala.Array[scala.Byte], encryptionContext: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, grantTokens: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class KeyUnavailableException(message: scala.Option[java.lang.String] = scala.None)
final case class ListRetirableGrantsRequest(retiringPrincipal: java.lang.String, limit: scala.Option[scala.Int] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class InvalidMarkerException(message: scala.Option[java.lang.String] = scala.None)
final case class DescribeKeyResponse(keyMetadata: scala.Option[avias.kms.models.KeyMetadata] = scala.None)
final case class AlreadyExistsException(message: scala.Option[java.lang.String] = scala.None)
final case class Tag(tagKey: java.lang.String, tagValue: java.lang.String)
final case class EncryptResponse(ciphertextBlob: scala.Option[scala.Array[scala.Byte]] = scala.None, keyId: scala.Option[java.lang.String] = scala.None)
final case class KeyListEntry(keyId: scala.Option[java.lang.String] = scala.None, keyArn: scala.Option[java.lang.String] = scala.None)
final case class MalformedPolicyDocumentException(message: scala.Option[java.lang.String] = scala.None)
final case class ListAliasesResponse(aliases: scala.Option[scala.List[avias.kms.models.AliasListEntry]] = scala.None, nextMarker: scala.Option[java.lang.String] = scala.None, truncated: scala.Option[scala.Boolean] = scala.None)
final case class AliasListEntry(aliasName: scala.Option[java.lang.String] = scala.None, aliasArn: scala.Option[java.lang.String] = scala.None, targetKeyId: scala.Option[java.lang.String] = scala.None)
final case class KMSInvalidStateException(message: scala.Option[java.lang.String] = scala.None)
final case class ListResourceTagsResponse(tags: scala.Option[scala.List[avias.kms.models.Tag]] = scala.None, nextMarker: scala.Option[java.lang.String] = scala.None, truncated: scala.Option[scala.Boolean] = scala.None)
final case class DeleteAliasRequest(aliasName: java.lang.String)
final case class TagResourceRequest(keyId: java.lang.String, tags: scala.List[avias.kms.models.Tag])
final case class GetKeyPolicyResponse(policy: scala.Option[java.lang.String] = scala.None)
final case class GetParametersForImportResponse(keyId: scala.Option[java.lang.String] = scala.None, importToken: scala.Option[scala.Array[scala.Byte]] = scala.None, publicKey: scala.Option[scala.Array[scala.Byte]] = scala.None, parametersValidTo: scala.Option[java.time.Instant] = scala.None)
final case class InvalidArnException(message: scala.Option[java.lang.String] = scala.None)
final case class InvalidAliasNameException(message: scala.Option[java.lang.String] = scala.None)
final case class GetParametersForImportRequest(keyId: java.lang.String, wrappingAlgorithm: java.lang.String, wrappingKeySpec: java.lang.String)
final case class GenerateDataKeyWithoutPlaintextResponse(ciphertextBlob: scala.Option[scala.Array[scala.Byte]] = scala.None, keyId: scala.Option[java.lang.String] = scala.None)
final case class ReEncryptRequest(ciphertextBlob: scala.Array[scala.Byte], destinationKeyId: java.lang.String, sourceEncryptionContext: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, destinationEncryptionContext: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, grantTokens: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class CancelKeyDeletionResponse(keyId: scala.Option[java.lang.String] = scala.None)
final case class RetireGrantRequest(grantToken: scala.Option[java.lang.String] = scala.None, keyId: scala.Option[java.lang.String] = scala.None, grantId: scala.Option[java.lang.String] = scala.None)
final case class EnableKeyRequest(keyId: java.lang.String)
final case class InvalidCiphertextException(message: scala.Option[java.lang.String] = scala.None)
final case class CreateAliasRequest(aliasName: java.lang.String, targetKeyId: java.lang.String)
final case class ListKeysResponse(keys: scala.Option[scala.List[avias.kms.models.KeyListEntry]] = scala.None, nextMarker: scala.Option[java.lang.String] = scala.None, truncated: scala.Option[scala.Boolean] = scala.None)
final case class CreateGrantResponse(grantToken: scala.Option[java.lang.String] = scala.None, grantId: scala.Option[java.lang.String] = scala.None)
final case class ReEncryptResponse(ciphertextBlob: scala.Option[scala.Array[scala.Byte]] = scala.None, sourceKeyId: scala.Option[java.lang.String] = scala.None, keyId: scala.Option[java.lang.String] = scala.None)
final case class UntagResourceRequest(keyId: java.lang.String, tagKeys: scala.List[java.lang.String])
final case class GetKeyPolicyRequest(keyId: java.lang.String, policyName: java.lang.String)
final case class InvalidKeyUsageException(message: scala.Option[java.lang.String] = scala.None)
final case class ListResourceTagsRequest(keyId: java.lang.String, limit: scala.Option[scala.Int] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class DecryptResponse(keyId: scala.Option[java.lang.String] = scala.None, plaintext: scala.Option[scala.Array[scala.Byte]] = scala.None)
final case class ListKeyPoliciesResponse(policyNames: scala.Option[scala.List[java.lang.String]] = scala.None, nextMarker: scala.Option[java.lang.String] = scala.None, truncated: scala.Option[scala.Boolean] = scala.None)
final case class CancelKeyDeletionRequest(keyId: java.lang.String)
final case class GenerateDataKeyWithoutPlaintextRequest(keyId: java.lang.String, encryptionContext: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, grantTokens: scala.Option[scala.List[java.lang.String]] = scala.None, numberOfBytes: scala.Option[scala.Int] = scala.None, keySpec: scala.Option[java.lang.String] = scala.None)
final case class GrantListEntry(grantId: scala.Option[java.lang.String] = scala.None, creationDate: scala.Option[java.time.Instant] = scala.None, granteePrincipal: scala.Option[java.lang.String] = scala.None, retiringPrincipal: scala.Option[java.lang.String] = scala.None, issuingAccount: scala.Option[java.lang.String] = scala.None, constraints: scala.Option[avias.kms.models.GrantConstraints] = scala.None, keyId: scala.Option[java.lang.String] = scala.None, operations: scala.Option[scala.List[java.lang.String]] = scala.None, name: scala.Option[java.lang.String] = scala.None)
final case class GenerateDataKeyRequest(keyId: java.lang.String, encryptionContext: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, grantTokens: scala.Option[scala.List[java.lang.String]] = scala.None, numberOfBytes: scala.Option[scala.Int] = scala.None, keySpec: scala.Option[java.lang.String] = scala.None)
final case class GetKeyRotationStatusResponse(keyRotationEnabled: scala.Option[scala.Boolean] = scala.None)
final case class ListKeyPoliciesRequest(keyId: java.lang.String, limit: scala.Option[scala.Int] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class CreateKeyRequest(origin: scala.Option[java.lang.String] = scala.None, tags: scala.Option[scala.List[avias.kms.models.Tag]] = scala.None, policy: scala.Option[java.lang.String] = scala.None, bypassPolicyLockoutSafetyCheck: scala.Option[scala.Boolean] = scala.None, description: scala.Option[java.lang.String] = scala.None, keyUsage: scala.Option[java.lang.String] = scala.None)
case object ImportKeyMaterialResponse
final case class CreateGrantRequest(granteePrincipal: java.lang.String, keyId: java.lang.String, operations: scala.List[java.lang.String], retiringPrincipal: scala.Option[java.lang.String] = scala.None, constraints: scala.Option[avias.kms.models.GrantConstraints] = scala.None, grantTokens: scala.Option[scala.List[java.lang.String]] = scala.None, name: scala.Option[java.lang.String] = scala.None)
final case class DisableKeyRequest(keyId: java.lang.String)
final case class GetKeyRotationStatusRequest(keyId: java.lang.String)
final case class ListGrantsRequest(keyId: java.lang.String, limit: scala.Option[scala.Int] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class ListKeysRequest(limit: scala.Option[scala.Int] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class ImportKeyMaterialRequest(keyId: java.lang.String, importToken: scala.Array[scala.Byte], encryptedKeyMaterial: scala.Array[scala.Byte], validTo: scala.Option[java.time.Instant] = scala.None, expirationModel: scala.Option[java.lang.String] = scala.None)
final case class RevokeGrantRequest(keyId: java.lang.String, grantId: java.lang.String)
final case class DisabledException(message: scala.Option[java.lang.String] = scala.None)
final case class UpdateKeyDescriptionRequest(keyId: java.lang.String, description: java.lang.String)
final case class LimitExceededException(message: scala.Option[java.lang.String] = scala.None)
final case class InvalidGrantIdException(message: scala.Option[java.lang.String] = scala.None)
final case class ScheduleKeyDeletionResponse(keyId: scala.Option[java.lang.String] = scala.None, deletionDate: scala.Option[java.time.Instant] = scala.None)
final case class DisableKeyRotationRequest(keyId: java.lang.String)
final case class UnsupportedOperationException(message: scala.Option[java.lang.String] = scala.None)
final case class ExpiredImportTokenException(message: scala.Option[java.lang.String] = scala.None)
final case class InvalidGrantTokenException(message: scala.Option[java.lang.String] = scala.None)
final case class GenerateRandomResponse(plaintext: scala.Option[scala.Array[scala.Byte]] = scala.None)
final case class TagException(message: scala.Option[java.lang.String] = scala.None)
final case class KMSInternalException(message: scala.Option[java.lang.String] = scala.None)
final case class ScheduleKeyDeletionRequest(keyId: java.lang.String, pendingWindowInDays: scala.Option[scala.Int] = scala.None)
final case class UpdateAliasRequest(aliasName: java.lang.String, targetKeyId: java.lang.String)
final case class EnableKeyRotationRequest(keyId: java.lang.String)
final case class CreateKeyResponse(keyMetadata: scala.Option[avias.kms.models.KeyMetadata] = scala.None)
final case class DescribeKeyRequest(keyId: java.lang.String, grantTokens: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class DeleteImportedKeyMaterialRequest(keyId: java.lang.String)
final case class DependencyTimeoutException(message: scala.Option[java.lang.String] = scala.None)