package org.lyranthe.araethura.simpleworkflow.http4s
import org.http4s.Method._
import org.lyranthe.araethura.simpleworkflow.circe._
import org.lyranthe.araethura.simpleworkflow.models
class AmazonsimpleworkflowClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.simpleworkflow.Amazonsimpleworkflow[F] {
  private[this] final val ServiceType: String = "swf"
  private[this] final val ServiceAndPrefix: Option[String] = Some("SimpleWorkflowService")
  override def countClosedWorkflowExecutions(input: org.lyranthe.araethura.simpleworkflow.models.CountClosedWorkflowExecutionsInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionCount] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionCount, org.lyranthe.araethura.simpleworkflow.models.CountClosedWorkflowExecutionsInput](client, awsData, ServiceType, ServiceAndPrefix, "CountClosedWorkflowExecutions", POST, "/", input)
  override def listClosedWorkflowExecutions(input: org.lyranthe.araethura.simpleworkflow.models.ListClosedWorkflowExecutionsInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionInfos] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionInfos, org.lyranthe.araethura.simpleworkflow.models.ListClosedWorkflowExecutionsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListClosedWorkflowExecutions", POST, "/", input)
  override def deprecateActivityType(input: org.lyranthe.araethura.simpleworkflow.models.DeprecateActivityTypeInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.DeprecateActivityTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "DeprecateActivityType", POST, "/", input)
  override def registerWorkflowType(input: org.lyranthe.araethura.simpleworkflow.models.RegisterWorkflowTypeInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.RegisterWorkflowTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "RegisterWorkflowType", POST, "/", input)
  override def listDomains(input: org.lyranthe.araethura.simpleworkflow.models.ListDomainsInput): F[org.lyranthe.araethura.simpleworkflow.models.DomainInfos] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.DomainInfos, org.lyranthe.araethura.simpleworkflow.models.ListDomainsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListDomains", POST, "/", input)
  override def respondActivityTaskFailed(input: org.lyranthe.araethura.simpleworkflow.models.RespondActivityTaskFailedInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.RespondActivityTaskFailedInput](client, awsData, ServiceType, ServiceAndPrefix, "RespondActivityTaskFailed", POST, "/", input)
  override def listWorkflowTypes(input: org.lyranthe.araethura.simpleworkflow.models.ListWorkflowTypesInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeInfos] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeInfos, org.lyranthe.araethura.simpleworkflow.models.ListWorkflowTypesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListWorkflowTypes", POST, "/", input)
  override def describeWorkflowType(input: org.lyranthe.araethura.simpleworkflow.models.DescribeWorkflowTypeInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeDetail] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeDetail, org.lyranthe.araethura.simpleworkflow.models.DescribeWorkflowTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeWorkflowType", POST, "/", input)
  override def listActivityTypes(input: org.lyranthe.araethura.simpleworkflow.models.ListActivityTypesInput): F[org.lyranthe.araethura.simpleworkflow.models.ActivityTypeInfos] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.ActivityTypeInfos, org.lyranthe.araethura.simpleworkflow.models.ListActivityTypesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListActivityTypes", POST, "/", input)
  override def countPendingActivityTasks(input: org.lyranthe.araethura.simpleworkflow.models.CountPendingActivityTasksInput): F[org.lyranthe.araethura.simpleworkflow.models.PendingTaskCount] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.PendingTaskCount, org.lyranthe.araethura.simpleworkflow.models.CountPendingActivityTasksInput](client, awsData, ServiceType, ServiceAndPrefix, "CountPendingActivityTasks", POST, "/", input)
  override def startWorkflowExecution(input: org.lyranthe.araethura.simpleworkflow.models.StartWorkflowExecutionInput): F[org.lyranthe.araethura.simpleworkflow.models.Run] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.Run, org.lyranthe.araethura.simpleworkflow.models.StartWorkflowExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "StartWorkflowExecution", POST, "/", input)
  override def registerDomain(input: org.lyranthe.araethura.simpleworkflow.models.RegisterDomainInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.RegisterDomainInput](client, awsData, ServiceType, ServiceAndPrefix, "RegisterDomain", POST, "/", input)
  override def recordActivityTaskHeartbeat(input: org.lyranthe.araethura.simpleworkflow.models.RecordActivityTaskHeartbeatInput): F[org.lyranthe.araethura.simpleworkflow.models.ActivityTaskStatus] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.ActivityTaskStatus, org.lyranthe.araethura.simpleworkflow.models.RecordActivityTaskHeartbeatInput](client, awsData, ServiceType, ServiceAndPrefix, "RecordActivityTaskHeartbeat", POST, "/", input)
  override def describeActivityType(input: org.lyranthe.araethura.simpleworkflow.models.DescribeActivityTypeInput): F[org.lyranthe.araethura.simpleworkflow.models.ActivityTypeDetail] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.ActivityTypeDetail, org.lyranthe.araethura.simpleworkflow.models.DescribeActivityTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeActivityType", POST, "/", input)
  override def getWorkflowExecutionHistory(input: org.lyranthe.araethura.simpleworkflow.models.GetWorkflowExecutionHistoryInput): F[org.lyranthe.araethura.simpleworkflow.models.History] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.History, org.lyranthe.araethura.simpleworkflow.models.GetWorkflowExecutionHistoryInput](client, awsData, ServiceType, ServiceAndPrefix, "GetWorkflowExecutionHistory", POST, "/", input)
  override def pollForDecisionTask(input: org.lyranthe.araethura.simpleworkflow.models.PollForDecisionTaskInput): F[org.lyranthe.araethura.simpleworkflow.models.DecisionTask] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.DecisionTask, org.lyranthe.araethura.simpleworkflow.models.PollForDecisionTaskInput](client, awsData, ServiceType, ServiceAndPrefix, "PollForDecisionTask", POST, "/", input)
  override def countOpenWorkflowExecutions(input: org.lyranthe.araethura.simpleworkflow.models.CountOpenWorkflowExecutionsInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionCount] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionCount, org.lyranthe.araethura.simpleworkflow.models.CountOpenWorkflowExecutionsInput](client, awsData, ServiceType, ServiceAndPrefix, "CountOpenWorkflowExecutions", POST, "/", input)
  override def listOpenWorkflowExecutions(input: org.lyranthe.araethura.simpleworkflow.models.ListOpenWorkflowExecutionsInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionInfos] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionInfos, org.lyranthe.araethura.simpleworkflow.models.ListOpenWorkflowExecutionsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListOpenWorkflowExecutions", POST, "/", input)
  override def pollForActivityTask(input: org.lyranthe.araethura.simpleworkflow.models.PollForActivityTaskInput): F[org.lyranthe.araethura.simpleworkflow.models.ActivityTask] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.ActivityTask, org.lyranthe.araethura.simpleworkflow.models.PollForActivityTaskInput](client, awsData, ServiceType, ServiceAndPrefix, "PollForActivityTask", POST, "/", input)
  override def terminateWorkflowExecution(input: org.lyranthe.araethura.simpleworkflow.models.TerminateWorkflowExecutionInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.TerminateWorkflowExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "TerminateWorkflowExecution", POST, "/", input)
  override def describeDomain(input: org.lyranthe.araethura.simpleworkflow.models.DescribeDomainInput): F[org.lyranthe.araethura.simpleworkflow.models.DomainDetail] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.DomainDetail, org.lyranthe.araethura.simpleworkflow.models.DescribeDomainInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDomain", POST, "/", input)
  override def respondDecisionTaskCompleted(input: org.lyranthe.araethura.simpleworkflow.models.RespondDecisionTaskCompletedInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.RespondDecisionTaskCompletedInput](client, awsData, ServiceType, ServiceAndPrefix, "RespondDecisionTaskCompleted", POST, "/", input)
  override def deprecateWorkflowType(input: org.lyranthe.araethura.simpleworkflow.models.DeprecateWorkflowTypeInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.DeprecateWorkflowTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "DeprecateWorkflowType", POST, "/", input)
  override def signalWorkflowExecution(input: org.lyranthe.araethura.simpleworkflow.models.SignalWorkflowExecutionInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.SignalWorkflowExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "SignalWorkflowExecution", POST, "/", input)
  override def describeWorkflowExecution(input: org.lyranthe.araethura.simpleworkflow.models.DescribeWorkflowExecutionInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionDetail] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionDetail, org.lyranthe.araethura.simpleworkflow.models.DescribeWorkflowExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeWorkflowExecution", POST, "/", input)
  override def respondActivityTaskCompleted(input: org.lyranthe.araethura.simpleworkflow.models.RespondActivityTaskCompletedInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.RespondActivityTaskCompletedInput](client, awsData, ServiceType, ServiceAndPrefix, "RespondActivityTaskCompleted", POST, "/", input)
  override def countPendingDecisionTasks(input: org.lyranthe.araethura.simpleworkflow.models.CountPendingDecisionTasksInput): F[org.lyranthe.araethura.simpleworkflow.models.PendingTaskCount] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.simpleworkflow.models.PendingTaskCount, org.lyranthe.araethura.simpleworkflow.models.CountPendingDecisionTasksInput](client, awsData, ServiceType, ServiceAndPrefix, "CountPendingDecisionTasks", POST, "/", input)
  override def registerActivityType(input: org.lyranthe.araethura.simpleworkflow.models.RegisterActivityTypeInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.RegisterActivityTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "RegisterActivityType", POST, "/", input)
  override def respondActivityTaskCanceled(input: org.lyranthe.araethura.simpleworkflow.models.RespondActivityTaskCanceledInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.RespondActivityTaskCanceledInput](client, awsData, ServiceType, ServiceAndPrefix, "RespondActivityTaskCanceled", POST, "/", input)
  override def deprecateDomain(input: org.lyranthe.araethura.simpleworkflow.models.DeprecateDomainInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.DeprecateDomainInput](client, awsData, ServiceType, ServiceAndPrefix, "DeprecateDomain", POST, "/", input)
  override def requestCancelWorkflowExecution(input: org.lyranthe.araethura.simpleworkflow.models.RequestCancelWorkflowExecutionInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.simpleworkflow.models.RequestCancelWorkflowExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "RequestCancelWorkflowExecution", POST, "/", input)
}