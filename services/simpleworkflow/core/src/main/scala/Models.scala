package org.lyranthe.araethura.simpleworkflow.models
final case class StartChildWorkflowExecutionInitiatedEventAttributes(decisionTaskCompletedEventId: scala.Long, taskList: org.lyranthe.araethura.simpleworkflow.models.TaskList, workflowId: java.lang.String, childPolicy: java.lang.String, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, executionStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskPriority: scala.Option[java.lang.String] = scala.None, tagList: scala.Option[scala.List[java.lang.String]] = scala.None, control: scala.Option[java.lang.String] = scala.None, input: scala.Option[java.lang.String] = scala.None, lambdaRole: scala.Option[java.lang.String] = scala.None)
final case class ActivityTypeInfos(typeInfos: scala.List[org.lyranthe.araethura.simpleworkflow.models.ActivityTypeInfo], nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class WorkflowExecutionCount(count: scala.Int, truncated: scala.Option[scala.Boolean] = scala.None)
final case class RequestCancelWorkflowExecutionInput(domain: java.lang.String, workflowId: java.lang.String, runId: scala.Option[java.lang.String] = scala.None)
final case class DecisionTaskTimedOutEventAttributes(timeoutType: java.lang.String, scheduledEventId: scala.Long, startedEventId: scala.Long)
final case class ActivityTaskCanceledEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, latestCancelRequestedEventId: scala.Option[scala.Long] = scala.None, details: scala.Option[java.lang.String] = scala.None)
final case class CountClosedWorkflowExecutionsInput(domain: java.lang.String, startTimeFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ExecutionTimeFilter] = scala.None, closeTimeFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ExecutionTimeFilter] = scala.None, tagFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TagFilter] = scala.None, closeStatusFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.CloseStatusFilter] = scala.None, typeFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeFilter] = scala.None, executionFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionFilter] = scala.None)
final case class ChildWorkflowExecutionTerminatedEventAttributes(workflowExecution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, initiatedEventId: scala.Long, startedEventId: scala.Long)
final case class ScheduleLambdaFunctionFailedEventAttributes(id: java.lang.String, name: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class ListWorkflowTypesInput(domain: java.lang.String, registrationStatus: java.lang.String, maximumPageSize: scala.Option[scala.Int] = scala.None, reverseOrder: scala.Option[scala.Boolean] = scala.None, name: scala.Option[java.lang.String] = scala.None, nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class ExecutionTimeFilter(oldestDate: java.time.Instant, latestDate: scala.Option[java.time.Instant] = scala.None)
final case class SignalExternalWorkflowExecutionDecisionAttributes(workflowId: java.lang.String, signalName: java.lang.String, runId: scala.Option[java.lang.String] = scala.None, input: scala.Option[java.lang.String] = scala.None, control: scala.Option[java.lang.String] = scala.None)
final case class LimitExceededFault(message: scala.Option[java.lang.String] = scala.None)
final case class RequestCancelActivityTaskDecisionAttributes(activityId: java.lang.String)
final case class RegisterWorkflowTypeInput(name: java.lang.String, version: java.lang.String, domain: java.lang.String, defaultTaskStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, defaultExecutionStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, defaultTaskPriority: scala.Option[java.lang.String] = scala.None, defaultTaskList: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TaskList] = scala.None, defaultChildPolicy: scala.Option[java.lang.String] = scala.None, defaultLambdaRole: scala.Option[java.lang.String] = scala.None, description: scala.Option[java.lang.String] = scala.None)
final case class ExternalWorkflowExecutionSignaledEventAttributes(workflowExecution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, initiatedEventId: scala.Long)
final case class ActivityTaskStartedEventAttributes(scheduledEventId: scala.Long, identity: scala.Option[java.lang.String] = scala.None)
final case class RequestCancelExternalWorkflowExecutionInitiatedEventAttributes(workflowId: java.lang.String, decisionTaskCompletedEventId: scala.Long, runId: scala.Option[java.lang.String] = scala.None, control: scala.Option[java.lang.String] = scala.None)
final case class RequestCancelActivityTaskFailedEventAttributes(activityId: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class FailWorkflowExecutionFailedEventAttributes(cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class LambdaFunctionCompletedEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, result: scala.Option[java.lang.String] = scala.None)
final case class DomainInfo(name: java.lang.String, status: java.lang.String, description: scala.Option[java.lang.String] = scala.None)
final case class DefaultUndefinedFault(message: scala.Option[java.lang.String] = scala.None)
final case class WorkflowExecutionSignaledEventAttributes(signalName: java.lang.String, input: scala.Option[java.lang.String] = scala.None, externalWorkflowExecution: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution] = scala.None, externalInitiatedEventId: scala.Option[scala.Long] = scala.None)
final case class WorkflowExecutionInfo(startTimestamp: java.time.Instant, executionStatus: java.lang.String, execution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, closeTimestamp: scala.Option[java.time.Instant] = scala.None, tagList: scala.Option[scala.List[java.lang.String]] = scala.None, closeStatus: scala.Option[java.lang.String] = scala.None, parent: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution] = scala.None, cancelRequested: scala.Option[scala.Boolean] = scala.None)
final case class WorkflowExecutionStartedEventAttributes(taskList: org.lyranthe.araethura.simpleworkflow.models.TaskList, childPolicy: java.lang.String, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, executionStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskPriority: scala.Option[java.lang.String] = scala.None, parentInitiatedEventId: scala.Option[scala.Long] = scala.None, tagList: scala.Option[scala.List[java.lang.String]] = scala.None, parentWorkflowExecution: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution] = scala.None, input: scala.Option[java.lang.String] = scala.None, lambdaRole: scala.Option[java.lang.String] = scala.None, continuedExecutionRunId: scala.Option[java.lang.String] = scala.None)
final case class StartLambdaFunctionFailedEventAttributes(scheduledEventId: scala.Option[scala.Long] = scala.None, cause: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class DomainDeprecatedFault(message: scala.Option[java.lang.String] = scala.None)
final case class ActivityTypeConfiguration(defaultTaskStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, defaultTaskHeartbeatTimeout: scala.Option[java.lang.String] = scala.None, defaultTaskScheduleToStartTimeout: scala.Option[java.lang.String] = scala.None, defaultTaskScheduleToCloseTimeout: scala.Option[java.lang.String] = scala.None, defaultTaskList: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TaskList] = scala.None, defaultTaskPriority: scala.Option[java.lang.String] = scala.None)
final case class RecordActivityTaskHeartbeatInput(taskToken: java.lang.String, details: scala.Option[java.lang.String] = scala.None)
final case class WorkflowExecutionTerminatedEventAttributes(childPolicy: java.lang.String, reason: scala.Option[java.lang.String] = scala.None, details: scala.Option[java.lang.String] = scala.None, cause: scala.Option[java.lang.String] = scala.None)
final case class TagFilter(tag: java.lang.String)
final case class WorkflowExecutionCompletedEventAttributes(decisionTaskCompletedEventId: scala.Long, result: scala.Option[java.lang.String] = scala.None)
final case class ListActivityTypesInput(domain: java.lang.String, registrationStatus: java.lang.String, maximumPageSize: scala.Option[scala.Int] = scala.None, reverseOrder: scala.Option[scala.Boolean] = scala.None, name: scala.Option[java.lang.String] = scala.None, nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class MarkerRecordedEventAttributes(markerName: java.lang.String, decisionTaskCompletedEventId: scala.Long, details: scala.Option[java.lang.String] = scala.None)
final case class CancelTimerFailedEventAttributes(timerId: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class WorkflowExecutionCanceledEventAttributes(decisionTaskCompletedEventId: scala.Long, details: scala.Option[java.lang.String] = scala.None)
final case class StartTimerFailedEventAttributes(timerId: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class ActivityTypeDetail(typeInfo: org.lyranthe.araethura.simpleworkflow.models.ActivityTypeInfo, configuration: org.lyranthe.araethura.simpleworkflow.models.ActivityTypeConfiguration)
final case class RegisterActivityTypeInput(name: java.lang.String, version: java.lang.String, domain: java.lang.String, defaultTaskStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, defaultTaskHeartbeatTimeout: scala.Option[java.lang.String] = scala.None, defaultTaskScheduleToStartTimeout: scala.Option[java.lang.String] = scala.None, defaultTaskScheduleToCloseTimeout: scala.Option[java.lang.String] = scala.None, defaultTaskPriority: scala.Option[java.lang.String] = scala.None, defaultTaskList: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TaskList] = scala.None, description: scala.Option[java.lang.String] = scala.None)
final case class TimerFiredEventAttributes(timerId: java.lang.String, startedEventId: scala.Long)
final case class WorkflowExecutionOpenCounts(openActivityTasks: scala.Int, openTimers: scala.Int, openChildWorkflowExecutions: scala.Int, openDecisionTasks: scala.Int, openLambdaFunctions: scala.Option[scala.Int] = scala.None)
final case class CountPendingDecisionTasksInput(domain: java.lang.String, taskList: org.lyranthe.araethura.simpleworkflow.models.TaskList)
final case class ActivityTaskCompletedEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, result: scala.Option[java.lang.String] = scala.None)
final case class HistoryEvent(eventTimestamp: java.time.Instant, eventType: java.lang.String, eventId: scala.Long, startChildWorkflowExecutionInitiatedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.StartChildWorkflowExecutionInitiatedEventAttributes] = scala.None, decisionTaskTimedOutEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.DecisionTaskTimedOutEventAttributes] = scala.None, activityTaskCanceledEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ActivityTaskCanceledEventAttributes] = scala.None, childWorkflowExecutionTerminatedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ChildWorkflowExecutionTerminatedEventAttributes] = scala.None, scheduleLambdaFunctionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ScheduleLambdaFunctionFailedEventAttributes] = scala.None, externalWorkflowExecutionSignaledEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ExternalWorkflowExecutionSignaledEventAttributes] = scala.None, activityTaskStartedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ActivityTaskStartedEventAttributes] = scala.None, requestCancelExternalWorkflowExecutionInitiatedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.RequestCancelExternalWorkflowExecutionInitiatedEventAttributes] = scala.None, requestCancelActivityTaskFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.RequestCancelActivityTaskFailedEventAttributes] = scala.None, failWorkflowExecutionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.FailWorkflowExecutionFailedEventAttributes] = scala.None, lambdaFunctionCompletedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.LambdaFunctionCompletedEventAttributes] = scala.None, workflowExecutionSignaledEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionSignaledEventAttributes] = scala.None, workflowExecutionStartedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionStartedEventAttributes] = scala.None, startLambdaFunctionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.StartLambdaFunctionFailedEventAttributes] = scala.None, workflowExecutionTerminatedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionTerminatedEventAttributes] = scala.None, workflowExecutionCompletedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionCompletedEventAttributes] = scala.None, markerRecordedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.MarkerRecordedEventAttributes] = scala.None, cancelTimerFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.CancelTimerFailedEventAttributes] = scala.None, workflowExecutionCanceledEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionCanceledEventAttributes] = scala.None, startTimerFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.StartTimerFailedEventAttributes] = scala.None, timerFiredEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TimerFiredEventAttributes] = scala.None, activityTaskCompletedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ActivityTaskCompletedEventAttributes] = scala.None, workflowExecutionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionFailedEventAttributes] = scala.None, cancelWorkflowExecutionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.CancelWorkflowExecutionFailedEventAttributes] = scala.None, externalWorkflowExecutionCancelRequestedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ExternalWorkflowExecutionCancelRequestedEventAttributes] = scala.None, timerCanceledEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TimerCanceledEventAttributes] = scala.None, signalExternalWorkflowExecutionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.SignalExternalWorkflowExecutionFailedEventAttributes] = scala.None, workflowExecutionContinuedAsNewEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionContinuedAsNewEventAttributes] = scala.None, lambdaFunctionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.LambdaFunctionFailedEventAttributes] = scala.None, decisionTaskCompletedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.DecisionTaskCompletedEventAttributes] = scala.None, childWorkflowExecutionTimedOutEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ChildWorkflowExecutionTimedOutEventAttributes] = scala.None, decisionTaskStartedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.DecisionTaskStartedEventAttributes] = scala.None, completeWorkflowExecutionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.CompleteWorkflowExecutionFailedEventAttributes] = scala.None, childWorkflowExecutionCanceledEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ChildWorkflowExecutionCanceledEventAttributes] = scala.None, timerStartedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TimerStartedEventAttributes] = scala.None, workflowExecutionCancelRequestedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionCancelRequestedEventAttributes] = scala.None, workflowExecutionTimedOutEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionTimedOutEventAttributes] = scala.None, scheduleActivityTaskFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ScheduleActivityTaskFailedEventAttributes] = scala.None, requestCancelExternalWorkflowExecutionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.RequestCancelExternalWorkflowExecutionFailedEventAttributes] = scala.None, startChildWorkflowExecutionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.StartChildWorkflowExecutionFailedEventAttributes] = scala.None, recordMarkerFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.RecordMarkerFailedEventAttributes] = scala.None, childWorkflowExecutionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ChildWorkflowExecutionFailedEventAttributes] = scala.None, activityTaskScheduledEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ActivityTaskScheduledEventAttributes] = scala.None, lambdaFunctionStartedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.LambdaFunctionStartedEventAttributes] = scala.None, activityTaskFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ActivityTaskFailedEventAttributes] = scala.None, lambdaFunctionTimedOutEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.LambdaFunctionTimedOutEventAttributes] = scala.None, activityTaskCancelRequestedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ActivityTaskCancelRequestedEventAttributes] = scala.None, childWorkflowExecutionCompletedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ChildWorkflowExecutionCompletedEventAttributes] = scala.None, childWorkflowExecutionStartedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ChildWorkflowExecutionStartedEventAttributes] = scala.None, continueAsNewWorkflowExecutionFailedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ContinueAsNewWorkflowExecutionFailedEventAttributes] = scala.None, signalExternalWorkflowExecutionInitiatedEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.SignalExternalWorkflowExecutionInitiatedEventAttributes] = scala.None, decisionTaskScheduledEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.DecisionTaskScheduledEventAttributes] = scala.None, activityTaskTimedOutEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ActivityTaskTimedOutEventAttributes] = scala.None, lambdaFunctionScheduledEventAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.LambdaFunctionScheduledEventAttributes] = scala.None)
final case class History(events: scala.List[org.lyranthe.araethura.simpleworkflow.models.HistoryEvent], nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class SignalWorkflowExecutionInput(domain: java.lang.String, workflowId: java.lang.String, signalName: java.lang.String, input: scala.Option[java.lang.String] = scala.None, runId: scala.Option[java.lang.String] = scala.None)
final case class WorkflowTypeInfos(typeInfos: scala.List[org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeInfo], nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class StartWorkflowExecutionInput(domain: java.lang.String, workflowId: java.lang.String, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, executionStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskPriority: scala.Option[java.lang.String] = scala.None, taskList: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TaskList] = scala.None, tagList: scala.Option[scala.List[java.lang.String]] = scala.None, childPolicy: scala.Option[java.lang.String] = scala.None, input: scala.Option[java.lang.String] = scala.None, lambdaRole: scala.Option[java.lang.String] = scala.None)
final case class WorkflowExecutionFailedEventAttributes(decisionTaskCompletedEventId: scala.Long, reason: scala.Option[java.lang.String] = scala.None, details: scala.Option[java.lang.String] = scala.None)
final case class CancelWorkflowExecutionFailedEventAttributes(cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class TypeDeprecatedFault(message: scala.Option[java.lang.String] = scala.None)
final case class ExternalWorkflowExecutionCancelRequestedEventAttributes(workflowExecution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, initiatedEventId: scala.Long)
final case class DescribeActivityTypeInput(domain: java.lang.String, activityType: org.lyranthe.araethura.simpleworkflow.models.ActivityType)
final case class TimerCanceledEventAttributes(timerId: java.lang.String, startedEventId: scala.Long, decisionTaskCompletedEventId: scala.Long)
final case class DescribeWorkflowExecutionInput(domain: java.lang.String, execution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution)
final case class StartChildWorkflowExecutionDecisionAttributes(workflowId: java.lang.String, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, executionStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskPriority: scala.Option[java.lang.String] = scala.None, taskList: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TaskList] = scala.None, tagList: scala.Option[scala.List[java.lang.String]] = scala.None, childPolicy: scala.Option[java.lang.String] = scala.None, control: scala.Option[java.lang.String] = scala.None, input: scala.Option[java.lang.String] = scala.None, lambdaRole: scala.Option[java.lang.String] = scala.None)
final case class GetWorkflowExecutionHistoryInput(domain: java.lang.String, execution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, maximumPageSize: scala.Option[scala.Int] = scala.None, reverseOrder: scala.Option[scala.Boolean] = scala.None, nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class DomainInfos(domainInfos: scala.List[org.lyranthe.araethura.simpleworkflow.models.DomainInfo], nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class CompleteWorkflowExecutionDecisionAttributes(result: scala.Option[java.lang.String] = scala.None)
final case class WorkflowTypeInfo(workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, status: java.lang.String, creationDate: java.time.Instant, deprecationDate: scala.Option[java.time.Instant] = scala.None, description: scala.Option[java.lang.String] = scala.None)
final case class SignalExternalWorkflowExecutionFailedEventAttributes(cause: java.lang.String, initiatedEventId: scala.Long, decisionTaskCompletedEventId: scala.Long, workflowId: java.lang.String, control: scala.Option[java.lang.String] = scala.None, runId: scala.Option[java.lang.String] = scala.None)
final case class WorkflowExecutionContinuedAsNewEventAttributes(decisionTaskCompletedEventId: scala.Long, taskList: org.lyranthe.araethura.simpleworkflow.models.TaskList, childPolicy: java.lang.String, newExecutionRunId: java.lang.String, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, executionStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskPriority: scala.Option[java.lang.String] = scala.None, tagList: scala.Option[scala.List[java.lang.String]] = scala.None, input: scala.Option[java.lang.String] = scala.None, lambdaRole: scala.Option[java.lang.String] = scala.None)
final case class LambdaFunctionFailedEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, reason: scala.Option[java.lang.String] = scala.None, details: scala.Option[java.lang.String] = scala.None)
final case class TypeAlreadyExistsFault(message: scala.Option[java.lang.String] = scala.None)
final case class DescribeWorkflowTypeInput(domain: java.lang.String, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType)
final case class DecisionTaskCompletedEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, executionContext: scala.Option[java.lang.String] = scala.None)
final case class PendingTaskCount(count: scala.Int, truncated: scala.Option[scala.Boolean] = scala.None)
final case class DomainDetail(domainInfo: org.lyranthe.araethura.simpleworkflow.models.DomainInfo, configuration: org.lyranthe.araethura.simpleworkflow.models.DomainConfiguration)
final case class ScheduleLambdaFunctionDecisionAttributes(id: java.lang.String, name: java.lang.String, startToCloseTimeout: scala.Option[java.lang.String] = scala.None, input: scala.Option[java.lang.String] = scala.None, control: scala.Option[java.lang.String] = scala.None)
final case class OperationNotPermittedFault(message: scala.Option[java.lang.String] = scala.None)
final case class TaskList(name: java.lang.String)
final case class ListOpenWorkflowExecutionsInput(startTimeFilter: org.lyranthe.araethura.simpleworkflow.models.ExecutionTimeFilter, domain: java.lang.String, maximumPageSize: scala.Option[scala.Int] = scala.None, reverseOrder: scala.Option[scala.Boolean] = scala.None, tagFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TagFilter] = scala.None, typeFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeFilter] = scala.None, executionFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionFilter] = scala.None, nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class ChildWorkflowExecutionTimedOutEventAttributes(workflowExecution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, timeoutType: java.lang.String, initiatedEventId: scala.Long, startedEventId: scala.Long)
final case class DecisionTaskStartedEventAttributes(scheduledEventId: scala.Long, identity: scala.Option[java.lang.String] = scala.None)
final case class ListClosedWorkflowExecutionsInput(domain: java.lang.String, startTimeFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ExecutionTimeFilter] = scala.None, closeTimeFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ExecutionTimeFilter] = scala.None, maximumPageSize: scala.Option[scala.Int] = scala.None, reverseOrder: scala.Option[scala.Boolean] = scala.None, tagFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TagFilter] = scala.None, closeStatusFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.CloseStatusFilter] = scala.None, typeFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeFilter] = scala.None, executionFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionFilter] = scala.None, nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class DomainConfiguration(workflowExecutionRetentionPeriodInDays: java.lang.String)
final case class ListDomainsInput(registrationStatus: java.lang.String, nextPageToken: scala.Option[java.lang.String] = scala.None, maximumPageSize: scala.Option[scala.Int] = scala.None, reverseOrder: scala.Option[scala.Boolean] = scala.None)
final case class DomainAlreadyExistsFault(message: scala.Option[java.lang.String] = scala.None)
final case class CompleteWorkflowExecutionFailedEventAttributes(cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class ChildWorkflowExecutionCanceledEventAttributes(workflowExecution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, initiatedEventId: scala.Long, startedEventId: scala.Long, details: scala.Option[java.lang.String] = scala.None)
final case class TimerStartedEventAttributes(timerId: java.lang.String, startToFireTimeout: java.lang.String, decisionTaskCompletedEventId: scala.Long, control: scala.Option[java.lang.String] = scala.None)
final case class CloseStatusFilter(status: java.lang.String)
final case class RecordMarkerDecisionAttributes(markerName: java.lang.String, details: scala.Option[java.lang.String] = scala.None)
final case class WorkflowExecutionCancelRequestedEventAttributes(externalWorkflowExecution: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution] = scala.None, externalInitiatedEventId: scala.Option[scala.Long] = scala.None, cause: scala.Option[java.lang.String] = scala.None)
final case class ActivityTypeInfo(activityType: org.lyranthe.araethura.simpleworkflow.models.ActivityType, status: java.lang.String, creationDate: java.time.Instant, deprecationDate: scala.Option[java.time.Instant] = scala.None, description: scala.Option[java.lang.String] = scala.None)
final case class WorkflowExecutionTimedOutEventAttributes(timeoutType: java.lang.String, childPolicy: java.lang.String)
final case class ScheduleActivityTaskFailedEventAttributes(activityType: org.lyranthe.araethura.simpleworkflow.models.ActivityType, activityId: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class DescribeDomainInput(name: java.lang.String)
final case class DecisionTask(events: scala.List[org.lyranthe.araethura.simpleworkflow.models.HistoryEvent], startedEventId: scala.Long, workflowExecution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, taskToken: java.lang.String, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, previousStartedEventId: scala.Option[scala.Long] = scala.None, nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class ContinueAsNewWorkflowExecutionDecisionAttributes(executionStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, taskPriority: scala.Option[java.lang.String] = scala.None, workflowTypeVersion: scala.Option[java.lang.String] = scala.None, taskList: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TaskList] = scala.None, tagList: scala.Option[scala.List[java.lang.String]] = scala.None, childPolicy: scala.Option[java.lang.String] = scala.None, input: scala.Option[java.lang.String] = scala.None, lambdaRole: scala.Option[java.lang.String] = scala.None)
final case class WorkflowTypeFilter(name: java.lang.String, version: scala.Option[java.lang.String] = scala.None)
final case class RequestCancelExternalWorkflowExecutionFailedEventAttributes(initiatedEventId: scala.Long, decisionTaskCompletedEventId: scala.Long, workflowId: java.lang.String, cause: java.lang.String, control: scala.Option[java.lang.String] = scala.None, runId: scala.Option[java.lang.String] = scala.None)
final case class PollForActivityTaskInput(domain: java.lang.String, taskList: org.lyranthe.araethura.simpleworkflow.models.TaskList, identity: scala.Option[java.lang.String] = scala.None)
final case class WorkflowExecutionFilter(workflowId: java.lang.String)
final case class StartChildWorkflowExecutionFailedEventAttributes(cause: java.lang.String, initiatedEventId: scala.Long, decisionTaskCompletedEventId: scala.Long, workflowId: java.lang.String, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, control: scala.Option[java.lang.String] = scala.None)
final case class WorkflowTypeDetail(typeInfo: org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeInfo, configuration: org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeConfiguration)
final case class WorkflowExecutionConfiguration(taskList: org.lyranthe.araethura.simpleworkflow.models.TaskList, taskStartToCloseTimeout: java.lang.String, executionStartToCloseTimeout: java.lang.String, childPolicy: java.lang.String, taskPriority: scala.Option[java.lang.String] = scala.None, lambdaRole: scala.Option[java.lang.String] = scala.None)
final case class FailWorkflowExecutionDecisionAttributes(reason: scala.Option[java.lang.String] = scala.None, details: scala.Option[java.lang.String] = scala.None)
final case class RespondActivityTaskFailedInput(taskToken: java.lang.String, reason: scala.Option[java.lang.String] = scala.None, details: scala.Option[java.lang.String] = scala.None)
final case class WorkflowExecution(workflowId: java.lang.String, runId: java.lang.String)
final case class WorkflowTypeConfiguration(defaultTaskStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, defaultExecutionStartToCloseTimeout: scala.Option[java.lang.String] = scala.None, defaultTaskPriority: scala.Option[java.lang.String] = scala.None, defaultTaskList: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TaskList] = scala.None, defaultChildPolicy: scala.Option[java.lang.String] = scala.None, defaultLambdaRole: scala.Option[java.lang.String] = scala.None)
final case class UnknownResourceFault(message: scala.Option[java.lang.String] = scala.None)
final case class RecordMarkerFailedEventAttributes(markerName: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class WorkflowExecutionAlreadyStartedFault(message: scala.Option[java.lang.String] = scala.None)
final case class ChildWorkflowExecutionFailedEventAttributes(initiatedEventId: scala.Long, startedEventId: scala.Long, workflowExecution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, reason: scala.Option[java.lang.String] = scala.None, details: scala.Option[java.lang.String] = scala.None)
final case class ActivityTaskScheduledEventAttributes(decisionTaskCompletedEventId: scala.Long, taskList: org.lyranthe.araethura.simpleworkflow.models.TaskList, activityId: java.lang.String, activityType: org.lyranthe.araethura.simpleworkflow.models.ActivityType, scheduleToStartTimeout: scala.Option[java.lang.String] = scala.None, scheduleToCloseTimeout: scala.Option[java.lang.String] = scala.None, startToCloseTimeout: scala.Option[java.lang.String] = scala.None, heartbeatTimeout: scala.Option[java.lang.String] = scala.None, taskPriority: scala.Option[java.lang.String] = scala.None, input: scala.Option[java.lang.String] = scala.None, control: scala.Option[java.lang.String] = scala.None)
final case class ActivityTaskStatus(cancelRequested: scala.Boolean)
final case class DeprecateDomainInput(name: java.lang.String)
final case class Decision(decisionType: java.lang.String, signalExternalWorkflowExecutionDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.SignalExternalWorkflowExecutionDecisionAttributes] = scala.None, requestCancelActivityTaskDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.RequestCancelActivityTaskDecisionAttributes] = scala.None, startChildWorkflowExecutionDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.StartChildWorkflowExecutionDecisionAttributes] = scala.None, completeWorkflowExecutionDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.CompleteWorkflowExecutionDecisionAttributes] = scala.None, scheduleLambdaFunctionDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ScheduleLambdaFunctionDecisionAttributes] = scala.None, recordMarkerDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.RecordMarkerDecisionAttributes] = scala.None, continueAsNewWorkflowExecutionDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ContinueAsNewWorkflowExecutionDecisionAttributes] = scala.None, failWorkflowExecutionDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.FailWorkflowExecutionDecisionAttributes] = scala.None, requestCancelExternalWorkflowExecutionDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.RequestCancelExternalWorkflowExecutionDecisionAttributes] = scala.None, scheduleActivityTaskDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.ScheduleActivityTaskDecisionAttributes] = scala.None, cancelTimerDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.CancelTimerDecisionAttributes] = scala.None, cancelWorkflowExecutionDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.CancelWorkflowExecutionDecisionAttributes] = scala.None, startTimerDecisionAttributes: scala.Option[org.lyranthe.araethura.simpleworkflow.models.StartTimerDecisionAttributes] = scala.None)
final case class RequestCancelExternalWorkflowExecutionDecisionAttributes(workflowId: java.lang.String, runId: scala.Option[java.lang.String] = scala.None, control: scala.Option[java.lang.String] = scala.None)
final case class LambdaFunctionStartedEventAttributes(scheduledEventId: scala.Long)
final case class ActivityTaskFailedEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, reason: scala.Option[java.lang.String] = scala.None, details: scala.Option[java.lang.String] = scala.None)
final case class DeprecateWorkflowTypeInput(domain: java.lang.String, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType)
final case class LambdaFunctionTimedOutEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, timeoutType: scala.Option[java.lang.String] = scala.None)
final case class RegisterDomainInput(name: java.lang.String, workflowExecutionRetentionPeriodInDays: java.lang.String, description: scala.Option[java.lang.String] = scala.None)
final case class ActivityTask(startedEventId: scala.Long, workflowExecution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, activityId: java.lang.String, activityType: org.lyranthe.araethura.simpleworkflow.models.ActivityType, taskToken: java.lang.String, input: scala.Option[java.lang.String] = scala.None)
final case class ActivityType(name: java.lang.String, version: java.lang.String)
final case class TerminateWorkflowExecutionInput(domain: java.lang.String, workflowId: java.lang.String, childPolicy: scala.Option[java.lang.String] = scala.None, details: scala.Option[java.lang.String] = scala.None, reason: scala.Option[java.lang.String] = scala.None, runId: scala.Option[java.lang.String] = scala.None)
final case class RespondActivityTaskCanceledInput(taskToken: java.lang.String, details: scala.Option[java.lang.String] = scala.None)
final case class WorkflowExecutionDetail(executionInfo: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionInfo, openCounts: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionOpenCounts, executionConfiguration: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionConfiguration, latestActivityTaskTimestamp: scala.Option[java.time.Instant] = scala.None, latestExecutionContext: scala.Option[java.lang.String] = scala.None)
final case class ScheduleActivityTaskDecisionAttributes(activityId: java.lang.String, activityType: org.lyranthe.araethura.simpleworkflow.models.ActivityType, scheduleToCloseTimeout: scala.Option[java.lang.String] = scala.None, scheduleToStartTimeout: scala.Option[java.lang.String] = scala.None, startToCloseTimeout: scala.Option[java.lang.String] = scala.None, heartbeatTimeout: scala.Option[java.lang.String] = scala.None, taskPriority: scala.Option[java.lang.String] = scala.None, taskList: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TaskList] = scala.None, control: scala.Option[java.lang.String] = scala.None, input: scala.Option[java.lang.String] = scala.None)
final case class ActivityTaskCancelRequestedEventAttributes(decisionTaskCompletedEventId: scala.Long, activityId: java.lang.String)
final case class ChildWorkflowExecutionCompletedEventAttributes(workflowExecution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, initiatedEventId: scala.Long, startedEventId: scala.Long, result: scala.Option[java.lang.String] = scala.None)
final case class ChildWorkflowExecutionStartedEventAttributes(workflowExecution: org.lyranthe.araethura.simpleworkflow.models.WorkflowExecution, workflowType: org.lyranthe.araethura.simpleworkflow.models.WorkflowType, initiatedEventId: scala.Long)
final case class Run(runId: scala.Option[java.lang.String] = scala.None)
final case class ContinueAsNewWorkflowExecutionFailedEventAttributes(cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class SignalExternalWorkflowExecutionInitiatedEventAttributes(decisionTaskCompletedEventId: scala.Long, workflowId: java.lang.String, signalName: java.lang.String, input: scala.Option[java.lang.String] = scala.None, control: scala.Option[java.lang.String] = scala.None, runId: scala.Option[java.lang.String] = scala.None)
final case class RespondActivityTaskCompletedInput(taskToken: java.lang.String, result: scala.Option[java.lang.String] = scala.None)
final case class DeprecateActivityTypeInput(domain: java.lang.String, activityType: org.lyranthe.araethura.simpleworkflow.models.ActivityType)
final case class PollForDecisionTaskInput(domain: java.lang.String, taskList: org.lyranthe.araethura.simpleworkflow.models.TaskList, maximumPageSize: scala.Option[scala.Int] = scala.None, reverseOrder: scala.Option[scala.Boolean] = scala.None, identity: scala.Option[java.lang.String] = scala.None, nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class DecisionTaskScheduledEventAttributes(taskList: org.lyranthe.araethura.simpleworkflow.models.TaskList, taskPriority: scala.Option[java.lang.String] = scala.None, startToCloseTimeout: scala.Option[java.lang.String] = scala.None)
final case class CancelTimerDecisionAttributes(timerId: java.lang.String)
final case class CancelWorkflowExecutionDecisionAttributes(details: scala.Option[java.lang.String] = scala.None)
final case class ActivityTaskTimedOutEventAttributes(timeoutType: java.lang.String, scheduledEventId: scala.Long, startedEventId: scala.Long, details: scala.Option[java.lang.String] = scala.None)
final case class CountPendingActivityTasksInput(domain: java.lang.String, taskList: org.lyranthe.araethura.simpleworkflow.models.TaskList)
final case class StartTimerDecisionAttributes(timerId: java.lang.String, startToFireTimeout: java.lang.String, control: scala.Option[java.lang.String] = scala.None)
final case class RespondDecisionTaskCompletedInput(taskToken: java.lang.String, decisions: scala.Option[scala.List[org.lyranthe.araethura.simpleworkflow.models.Decision]] = scala.None, executionContext: scala.Option[java.lang.String] = scala.None)
final case class WorkflowType(name: java.lang.String, version: java.lang.String)
final case class CountOpenWorkflowExecutionsInput(startTimeFilter: org.lyranthe.araethura.simpleworkflow.models.ExecutionTimeFilter, domain: java.lang.String, tagFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.TagFilter] = scala.None, typeFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeFilter] = scala.None, executionFilter: scala.Option[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionFilter] = scala.None)
final case class WorkflowExecutionInfos(executionInfos: scala.List[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionInfo], nextPageToken: scala.Option[java.lang.String] = scala.None)
final case class LambdaFunctionScheduledEventAttributes(decisionTaskCompletedEventId: scala.Long, id: java.lang.String, name: java.lang.String, startToCloseTimeout: scala.Option[java.lang.String] = scala.None, input: scala.Option[java.lang.String] = scala.None, control: scala.Option[java.lang.String] = scala.None)