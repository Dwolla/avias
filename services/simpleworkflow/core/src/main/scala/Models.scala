package org.lyranthe.araethura.simpleworkflow.models
import org.lyranthe.araethura.simpleworkflow.models
final case class StartChildWorkflowExecutionInitiatedEventAttributes(decisionTaskCompletedEventId: scala.Long, taskList: models.TaskList, workflowId: java.lang.String, childPolicy: java.lang.String, workflowType: models.WorkflowType, executionStartToCloseTimeout: scala.Option[java.lang.String] = None, taskStartToCloseTimeout: scala.Option[java.lang.String] = None, taskPriority: scala.Option[java.lang.String] = None, tagList: scala.Option[scala.List[java.lang.String]] = None, control: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None, lambdaRole: scala.Option[java.lang.String] = None)
final case class ActivityTypeInfos(typeInfos: scala.List[models.ActivityTypeInfo], nextPageToken: scala.Option[java.lang.String] = None)
final case class WorkflowExecutionCount(count: scala.Int, truncated: scala.Option[scala.Boolean] = None)
final case class RequestCancelWorkflowExecutionInput(domain: java.lang.String, workflowId: java.lang.String, runId: scala.Option[java.lang.String] = None)
final case class DecisionTaskTimedOutEventAttributes(timeoutType: java.lang.String, scheduledEventId: scala.Long, startedEventId: scala.Long)
final case class ActivityTaskCanceledEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, latestCancelRequestedEventId: scala.Option[scala.Long] = None, details: scala.Option[java.lang.String] = None)
final case class CountClosedWorkflowExecutionsInput(domain: java.lang.String, startTimeFilter: scala.Option[models.ExecutionTimeFilter] = None, closeTimeFilter: scala.Option[models.ExecutionTimeFilter] = None, tagFilter: scala.Option[models.TagFilter] = None, closeStatusFilter: scala.Option[models.CloseStatusFilter] = None, typeFilter: scala.Option[models.WorkflowTypeFilter] = None, executionFilter: scala.Option[models.WorkflowExecutionFilter] = None)
final case class ChildWorkflowExecutionTerminatedEventAttributes(workflowExecution: models.WorkflowExecution, workflowType: models.WorkflowType, initiatedEventId: scala.Long, startedEventId: scala.Long)
final case class ScheduleLambdaFunctionFailedEventAttributes(id: java.lang.String, name: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class ListWorkflowTypesInput(domain: java.lang.String, registrationStatus: java.lang.String, maximumPageSize: scala.Option[scala.Int] = None, reverseOrder: scala.Option[scala.Boolean] = None, name: scala.Option[java.lang.String] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class ExecutionTimeFilter(oldestDate: java.time.Instant, latestDate: scala.Option[java.time.Instant] = None)
final case class SignalExternalWorkflowExecutionDecisionAttributes(workflowId: java.lang.String, signalName: java.lang.String, runId: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None, control: scala.Option[java.lang.String] = None)
final case class LimitExceededFault(message: scala.Option[java.lang.String] = None)
final case class RequestCancelActivityTaskDecisionAttributes(activityId: java.lang.String)
final case class RegisterWorkflowTypeInput(name: java.lang.String, version: java.lang.String, domain: java.lang.String, defaultTaskStartToCloseTimeout: scala.Option[java.lang.String] = None, defaultExecutionStartToCloseTimeout: scala.Option[java.lang.String] = None, defaultTaskPriority: scala.Option[java.lang.String] = None, defaultTaskList: scala.Option[models.TaskList] = None, defaultChildPolicy: scala.Option[java.lang.String] = None, defaultLambdaRole: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None)
final case class ExternalWorkflowExecutionSignaledEventAttributes(workflowExecution: models.WorkflowExecution, initiatedEventId: scala.Long)
final case class ActivityTaskStartedEventAttributes(scheduledEventId: scala.Long, identity: scala.Option[java.lang.String] = None)
final case class RequestCancelExternalWorkflowExecutionInitiatedEventAttributes(workflowId: java.lang.String, decisionTaskCompletedEventId: scala.Long, runId: scala.Option[java.lang.String] = None, control: scala.Option[java.lang.String] = None)
final case class RequestCancelActivityTaskFailedEventAttributes(activityId: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class FailWorkflowExecutionFailedEventAttributes(cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class LambdaFunctionCompletedEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, result: scala.Option[java.lang.String] = None)
final case class DomainInfo(name: java.lang.String, status: java.lang.String, description: scala.Option[java.lang.String] = None)
final case class DefaultUndefinedFault(message: scala.Option[java.lang.String] = None)
final case class WorkflowExecutionSignaledEventAttributes(signalName: java.lang.String, input: scala.Option[java.lang.String] = None, externalWorkflowExecution: scala.Option[models.WorkflowExecution] = None, externalInitiatedEventId: scala.Option[scala.Long] = None)
final case class WorkflowExecutionInfo(startTimestamp: java.time.Instant, executionStatus: java.lang.String, execution: models.WorkflowExecution, workflowType: models.WorkflowType, closeTimestamp: scala.Option[java.time.Instant] = None, tagList: scala.Option[scala.List[java.lang.String]] = None, closeStatus: scala.Option[java.lang.String] = None, parent: scala.Option[models.WorkflowExecution] = None, cancelRequested: scala.Option[scala.Boolean] = None)
final case class WorkflowExecutionStartedEventAttributes(taskList: models.TaskList, childPolicy: java.lang.String, workflowType: models.WorkflowType, executionStartToCloseTimeout: scala.Option[java.lang.String] = None, taskStartToCloseTimeout: scala.Option[java.lang.String] = None, taskPriority: scala.Option[java.lang.String] = None, parentInitiatedEventId: scala.Option[scala.Long] = None, tagList: scala.Option[scala.List[java.lang.String]] = None, parentWorkflowExecution: scala.Option[models.WorkflowExecution] = None, input: scala.Option[java.lang.String] = None, lambdaRole: scala.Option[java.lang.String] = None, continuedExecutionRunId: scala.Option[java.lang.String] = None)
final case class StartLambdaFunctionFailedEventAttributes(scheduledEventId: scala.Option[scala.Long] = None, cause: scala.Option[java.lang.String] = None, message: scala.Option[java.lang.String] = None)
final case class DomainDeprecatedFault(message: scala.Option[java.lang.String] = None)
final case class ActivityTypeConfiguration(defaultTaskStartToCloseTimeout: scala.Option[java.lang.String] = None, defaultTaskHeartbeatTimeout: scala.Option[java.lang.String] = None, defaultTaskScheduleToStartTimeout: scala.Option[java.lang.String] = None, defaultTaskScheduleToCloseTimeout: scala.Option[java.lang.String] = None, defaultTaskList: scala.Option[models.TaskList] = None, defaultTaskPriority: scala.Option[java.lang.String] = None)
final case class RecordActivityTaskHeartbeatInput(taskToken: java.lang.String, details: scala.Option[java.lang.String] = None)
final case class WorkflowExecutionTerminatedEventAttributes(childPolicy: java.lang.String, reason: scala.Option[java.lang.String] = None, details: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class TagFilter(tag: java.lang.String)
final case class WorkflowExecutionCompletedEventAttributes(decisionTaskCompletedEventId: scala.Long, result: scala.Option[java.lang.String] = None)
final case class ListActivityTypesInput(domain: java.lang.String, registrationStatus: java.lang.String, maximumPageSize: scala.Option[scala.Int] = None, reverseOrder: scala.Option[scala.Boolean] = None, name: scala.Option[java.lang.String] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class MarkerRecordedEventAttributes(markerName: java.lang.String, decisionTaskCompletedEventId: scala.Long, details: scala.Option[java.lang.String] = None)
final case class CancelTimerFailedEventAttributes(timerId: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class WorkflowExecutionCanceledEventAttributes(decisionTaskCompletedEventId: scala.Long, details: scala.Option[java.lang.String] = None)
final case class StartTimerFailedEventAttributes(timerId: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class ActivityTypeDetail(typeInfo: models.ActivityTypeInfo, configuration: models.ActivityTypeConfiguration)
final case class RegisterActivityTypeInput(name: java.lang.String, version: java.lang.String, domain: java.lang.String, defaultTaskStartToCloseTimeout: scala.Option[java.lang.String] = None, defaultTaskHeartbeatTimeout: scala.Option[java.lang.String] = None, defaultTaskScheduleToStartTimeout: scala.Option[java.lang.String] = None, defaultTaskScheduleToCloseTimeout: scala.Option[java.lang.String] = None, defaultTaskPriority: scala.Option[java.lang.String] = None, defaultTaskList: scala.Option[models.TaskList] = None, description: scala.Option[java.lang.String] = None)
final case class TimerFiredEventAttributes(timerId: java.lang.String, startedEventId: scala.Long)
final case class WorkflowExecutionOpenCounts(openActivityTasks: scala.Int, openTimers: scala.Int, openChildWorkflowExecutions: scala.Int, openDecisionTasks: scala.Int, openLambdaFunctions: scala.Option[scala.Int] = None)
final case class CountPendingDecisionTasksInput(domain: java.lang.String, taskList: models.TaskList)
final case class ActivityTaskCompletedEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, result: scala.Option[java.lang.String] = None)
final case class HistoryEvent(eventTimestamp: java.time.Instant, eventType: java.lang.String, eventId: scala.Long, startChildWorkflowExecutionInitiatedEventAttributes: scala.Option[models.StartChildWorkflowExecutionInitiatedEventAttributes] = None, decisionTaskTimedOutEventAttributes: scala.Option[models.DecisionTaskTimedOutEventAttributes] = None, activityTaskCanceledEventAttributes: scala.Option[models.ActivityTaskCanceledEventAttributes] = None, childWorkflowExecutionTerminatedEventAttributes: scala.Option[models.ChildWorkflowExecutionTerminatedEventAttributes] = None, scheduleLambdaFunctionFailedEventAttributes: scala.Option[models.ScheduleLambdaFunctionFailedEventAttributes] = None, externalWorkflowExecutionSignaledEventAttributes: scala.Option[models.ExternalWorkflowExecutionSignaledEventAttributes] = None, activityTaskStartedEventAttributes: scala.Option[models.ActivityTaskStartedEventAttributes] = None, requestCancelExternalWorkflowExecutionInitiatedEventAttributes: scala.Option[models.RequestCancelExternalWorkflowExecutionInitiatedEventAttributes] = None, requestCancelActivityTaskFailedEventAttributes: scala.Option[models.RequestCancelActivityTaskFailedEventAttributes] = None, failWorkflowExecutionFailedEventAttributes: scala.Option[models.FailWorkflowExecutionFailedEventAttributes] = None, lambdaFunctionCompletedEventAttributes: scala.Option[models.LambdaFunctionCompletedEventAttributes] = None, workflowExecutionSignaledEventAttributes: scala.Option[models.WorkflowExecutionSignaledEventAttributes] = None, workflowExecutionStartedEventAttributes: scala.Option[models.WorkflowExecutionStartedEventAttributes] = None, startLambdaFunctionFailedEventAttributes: scala.Option[models.StartLambdaFunctionFailedEventAttributes] = None, workflowExecutionTerminatedEventAttributes: scala.Option[models.WorkflowExecutionTerminatedEventAttributes] = None, workflowExecutionCompletedEventAttributes: scala.Option[models.WorkflowExecutionCompletedEventAttributes] = None, markerRecordedEventAttributes: scala.Option[models.MarkerRecordedEventAttributes] = None, cancelTimerFailedEventAttributes: scala.Option[models.CancelTimerFailedEventAttributes] = None, workflowExecutionCanceledEventAttributes: scala.Option[models.WorkflowExecutionCanceledEventAttributes] = None, startTimerFailedEventAttributes: scala.Option[models.StartTimerFailedEventAttributes] = None, timerFiredEventAttributes: scala.Option[models.TimerFiredEventAttributes] = None, activityTaskCompletedEventAttributes: scala.Option[models.ActivityTaskCompletedEventAttributes] = None, workflowExecutionFailedEventAttributes: scala.Option[models.WorkflowExecutionFailedEventAttributes] = None, cancelWorkflowExecutionFailedEventAttributes: scala.Option[models.CancelWorkflowExecutionFailedEventAttributes] = None, externalWorkflowExecutionCancelRequestedEventAttributes: scala.Option[models.ExternalWorkflowExecutionCancelRequestedEventAttributes] = None, timerCanceledEventAttributes: scala.Option[models.TimerCanceledEventAttributes] = None, signalExternalWorkflowExecutionFailedEventAttributes: scala.Option[models.SignalExternalWorkflowExecutionFailedEventAttributes] = None, workflowExecutionContinuedAsNewEventAttributes: scala.Option[models.WorkflowExecutionContinuedAsNewEventAttributes] = None, lambdaFunctionFailedEventAttributes: scala.Option[models.LambdaFunctionFailedEventAttributes] = None, decisionTaskCompletedEventAttributes: scala.Option[models.DecisionTaskCompletedEventAttributes] = None, childWorkflowExecutionTimedOutEventAttributes: scala.Option[models.ChildWorkflowExecutionTimedOutEventAttributes] = None, decisionTaskStartedEventAttributes: scala.Option[models.DecisionTaskStartedEventAttributes] = None, completeWorkflowExecutionFailedEventAttributes: scala.Option[models.CompleteWorkflowExecutionFailedEventAttributes] = None, childWorkflowExecutionCanceledEventAttributes: scala.Option[models.ChildWorkflowExecutionCanceledEventAttributes] = None, timerStartedEventAttributes: scala.Option[models.TimerStartedEventAttributes] = None, workflowExecutionCancelRequestedEventAttributes: scala.Option[models.WorkflowExecutionCancelRequestedEventAttributes] = None, workflowExecutionTimedOutEventAttributes: scala.Option[models.WorkflowExecutionTimedOutEventAttributes] = None, scheduleActivityTaskFailedEventAttributes: scala.Option[models.ScheduleActivityTaskFailedEventAttributes] = None, requestCancelExternalWorkflowExecutionFailedEventAttributes: scala.Option[models.RequestCancelExternalWorkflowExecutionFailedEventAttributes] = None, startChildWorkflowExecutionFailedEventAttributes: scala.Option[models.StartChildWorkflowExecutionFailedEventAttributes] = None, recordMarkerFailedEventAttributes: scala.Option[models.RecordMarkerFailedEventAttributes] = None, childWorkflowExecutionFailedEventAttributes: scala.Option[models.ChildWorkflowExecutionFailedEventAttributes] = None, activityTaskScheduledEventAttributes: scala.Option[models.ActivityTaskScheduledEventAttributes] = None, lambdaFunctionStartedEventAttributes: scala.Option[models.LambdaFunctionStartedEventAttributes] = None, activityTaskFailedEventAttributes: scala.Option[models.ActivityTaskFailedEventAttributes] = None, lambdaFunctionTimedOutEventAttributes: scala.Option[models.LambdaFunctionTimedOutEventAttributes] = None, activityTaskCancelRequestedEventAttributes: scala.Option[models.ActivityTaskCancelRequestedEventAttributes] = None, childWorkflowExecutionCompletedEventAttributes: scala.Option[models.ChildWorkflowExecutionCompletedEventAttributes] = None, childWorkflowExecutionStartedEventAttributes: scala.Option[models.ChildWorkflowExecutionStartedEventAttributes] = None, continueAsNewWorkflowExecutionFailedEventAttributes: scala.Option[models.ContinueAsNewWorkflowExecutionFailedEventAttributes] = None, signalExternalWorkflowExecutionInitiatedEventAttributes: scala.Option[models.SignalExternalWorkflowExecutionInitiatedEventAttributes] = None, decisionTaskScheduledEventAttributes: scala.Option[models.DecisionTaskScheduledEventAttributes] = None, activityTaskTimedOutEventAttributes: scala.Option[models.ActivityTaskTimedOutEventAttributes] = None, lambdaFunctionScheduledEventAttributes: scala.Option[models.LambdaFunctionScheduledEventAttributes] = None)
final case class History(events: scala.List[models.HistoryEvent], nextPageToken: scala.Option[java.lang.String] = None)
final case class SignalWorkflowExecutionInput(domain: java.lang.String, workflowId: java.lang.String, signalName: java.lang.String, input: scala.Option[java.lang.String] = None, runId: scala.Option[java.lang.String] = None)
final case class WorkflowTypeInfos(typeInfos: scala.List[models.WorkflowTypeInfo], nextPageToken: scala.Option[java.lang.String] = None)
final case class StartWorkflowExecutionInput(domain: java.lang.String, workflowId: java.lang.String, workflowType: models.WorkflowType, executionStartToCloseTimeout: scala.Option[java.lang.String] = None, taskStartToCloseTimeout: scala.Option[java.lang.String] = None, taskPriority: scala.Option[java.lang.String] = None, taskList: scala.Option[models.TaskList] = None, tagList: scala.Option[scala.List[java.lang.String]] = None, childPolicy: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None, lambdaRole: scala.Option[java.lang.String] = None)
final case class WorkflowExecutionFailedEventAttributes(decisionTaskCompletedEventId: scala.Long, reason: scala.Option[java.lang.String] = None, details: scala.Option[java.lang.String] = None)
final case class CancelWorkflowExecutionFailedEventAttributes(cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class TypeDeprecatedFault(message: scala.Option[java.lang.String] = None)
final case class ExternalWorkflowExecutionCancelRequestedEventAttributes(workflowExecution: models.WorkflowExecution, initiatedEventId: scala.Long)
final case class DescribeActivityTypeInput(domain: java.lang.String, activityType: models.ActivityType)
final case class TimerCanceledEventAttributes(timerId: java.lang.String, startedEventId: scala.Long, decisionTaskCompletedEventId: scala.Long)
final case class DescribeWorkflowExecutionInput(domain: java.lang.String, execution: models.WorkflowExecution)
final case class StartChildWorkflowExecutionDecisionAttributes(workflowId: java.lang.String, workflowType: models.WorkflowType, executionStartToCloseTimeout: scala.Option[java.lang.String] = None, taskStartToCloseTimeout: scala.Option[java.lang.String] = None, taskPriority: scala.Option[java.lang.String] = None, taskList: scala.Option[models.TaskList] = None, tagList: scala.Option[scala.List[java.lang.String]] = None, childPolicy: scala.Option[java.lang.String] = None, control: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None, lambdaRole: scala.Option[java.lang.String] = None)
final case class GetWorkflowExecutionHistoryInput(domain: java.lang.String, execution: models.WorkflowExecution, maximumPageSize: scala.Option[scala.Int] = None, reverseOrder: scala.Option[scala.Boolean] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class DomainInfos(domainInfos: scala.List[models.DomainInfo], nextPageToken: scala.Option[java.lang.String] = None)
final case class CompleteWorkflowExecutionDecisionAttributes(result: scala.Option[java.lang.String] = None)
final case class WorkflowTypeInfo(workflowType: models.WorkflowType, status: java.lang.String, creationDate: java.time.Instant, deprecationDate: scala.Option[java.time.Instant] = None, description: scala.Option[java.lang.String] = None)
final case class SignalExternalWorkflowExecutionFailedEventAttributes(cause: java.lang.String, initiatedEventId: scala.Long, decisionTaskCompletedEventId: scala.Long, workflowId: java.lang.String, control: scala.Option[java.lang.String] = None, runId: scala.Option[java.lang.String] = None)
final case class WorkflowExecutionContinuedAsNewEventAttributes(decisionTaskCompletedEventId: scala.Long, taskList: models.TaskList, childPolicy: java.lang.String, newExecutionRunId: java.lang.String, workflowType: models.WorkflowType, executionStartToCloseTimeout: scala.Option[java.lang.String] = None, taskStartToCloseTimeout: scala.Option[java.lang.String] = None, taskPriority: scala.Option[java.lang.String] = None, tagList: scala.Option[scala.List[java.lang.String]] = None, input: scala.Option[java.lang.String] = None, lambdaRole: scala.Option[java.lang.String] = None)
final case class LambdaFunctionFailedEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, reason: scala.Option[java.lang.String] = None, details: scala.Option[java.lang.String] = None)
final case class TypeAlreadyExistsFault(message: scala.Option[java.lang.String] = None)
final case class DescribeWorkflowTypeInput(domain: java.lang.String, workflowType: models.WorkflowType)
final case class DecisionTaskCompletedEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, executionContext: scala.Option[java.lang.String] = None)
final case class PendingTaskCount(count: scala.Int, truncated: scala.Option[scala.Boolean] = None)
final case class DomainDetail(domainInfo: models.DomainInfo, configuration: models.DomainConfiguration)
final case class ScheduleLambdaFunctionDecisionAttributes(id: java.lang.String, name: java.lang.String, startToCloseTimeout: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None, control: scala.Option[java.lang.String] = None)
final case class OperationNotPermittedFault(message: scala.Option[java.lang.String] = None)
final case class TaskList(name: java.lang.String)
final case class ListOpenWorkflowExecutionsInput(startTimeFilter: models.ExecutionTimeFilter, domain: java.lang.String, maximumPageSize: scala.Option[scala.Int] = None, reverseOrder: scala.Option[scala.Boolean] = None, tagFilter: scala.Option[models.TagFilter] = None, typeFilter: scala.Option[models.WorkflowTypeFilter] = None, executionFilter: scala.Option[models.WorkflowExecutionFilter] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class ChildWorkflowExecutionTimedOutEventAttributes(workflowExecution: models.WorkflowExecution, workflowType: models.WorkflowType, timeoutType: java.lang.String, initiatedEventId: scala.Long, startedEventId: scala.Long)
final case class DecisionTaskStartedEventAttributes(scheduledEventId: scala.Long, identity: scala.Option[java.lang.String] = None)
final case class ListClosedWorkflowExecutionsInput(domain: java.lang.String, startTimeFilter: scala.Option[models.ExecutionTimeFilter] = None, closeTimeFilter: scala.Option[models.ExecutionTimeFilter] = None, maximumPageSize: scala.Option[scala.Int] = None, reverseOrder: scala.Option[scala.Boolean] = None, tagFilter: scala.Option[models.TagFilter] = None, closeStatusFilter: scala.Option[models.CloseStatusFilter] = None, typeFilter: scala.Option[models.WorkflowTypeFilter] = None, executionFilter: scala.Option[models.WorkflowExecutionFilter] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class DomainConfiguration(workflowExecutionRetentionPeriodInDays: java.lang.String)
final case class ListDomainsInput(registrationStatus: java.lang.String, nextPageToken: scala.Option[java.lang.String] = None, maximumPageSize: scala.Option[scala.Int] = None, reverseOrder: scala.Option[scala.Boolean] = None)
final case class DomainAlreadyExistsFault(message: scala.Option[java.lang.String] = None)
final case class CompleteWorkflowExecutionFailedEventAttributes(cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class ChildWorkflowExecutionCanceledEventAttributes(workflowExecution: models.WorkflowExecution, workflowType: models.WorkflowType, initiatedEventId: scala.Long, startedEventId: scala.Long, details: scala.Option[java.lang.String] = None)
final case class TimerStartedEventAttributes(timerId: java.lang.String, startToFireTimeout: java.lang.String, decisionTaskCompletedEventId: scala.Long, control: scala.Option[java.lang.String] = None)
final case class CloseStatusFilter(status: java.lang.String)
final case class RecordMarkerDecisionAttributes(markerName: java.lang.String, details: scala.Option[java.lang.String] = None)
final case class WorkflowExecutionCancelRequestedEventAttributes(externalWorkflowExecution: scala.Option[models.WorkflowExecution] = None, externalInitiatedEventId: scala.Option[scala.Long] = None, cause: scala.Option[java.lang.String] = None)
final case class ActivityTypeInfo(activityType: models.ActivityType, status: java.lang.String, creationDate: java.time.Instant, deprecationDate: scala.Option[java.time.Instant] = None, description: scala.Option[java.lang.String] = None)
final case class WorkflowExecutionTimedOutEventAttributes(timeoutType: java.lang.String, childPolicy: java.lang.String)
final case class ScheduleActivityTaskFailedEventAttributes(activityType: models.ActivityType, activityId: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class DescribeDomainInput(name: java.lang.String)
final case class DecisionTask(events: scala.List[models.HistoryEvent], startedEventId: scala.Long, workflowExecution: models.WorkflowExecution, taskToken: java.lang.String, workflowType: models.WorkflowType, previousStartedEventId: scala.Option[scala.Long] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class ContinueAsNewWorkflowExecutionDecisionAttributes(executionStartToCloseTimeout: scala.Option[java.lang.String] = None, taskStartToCloseTimeout: scala.Option[java.lang.String] = None, taskPriority: scala.Option[java.lang.String] = None, workflowTypeVersion: scala.Option[java.lang.String] = None, taskList: scala.Option[models.TaskList] = None, tagList: scala.Option[scala.List[java.lang.String]] = None, childPolicy: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None, lambdaRole: scala.Option[java.lang.String] = None)
final case class WorkflowTypeFilter(name: java.lang.String, version: scala.Option[java.lang.String] = None)
final case class RequestCancelExternalWorkflowExecutionFailedEventAttributes(initiatedEventId: scala.Long, decisionTaskCompletedEventId: scala.Long, workflowId: java.lang.String, cause: java.lang.String, control: scala.Option[java.lang.String] = None, runId: scala.Option[java.lang.String] = None)
final case class PollForActivityTaskInput(domain: java.lang.String, taskList: models.TaskList, identity: scala.Option[java.lang.String] = None)
final case class WorkflowExecutionFilter(workflowId: java.lang.String)
final case class StartChildWorkflowExecutionFailedEventAttributes(cause: java.lang.String, initiatedEventId: scala.Long, decisionTaskCompletedEventId: scala.Long, workflowId: java.lang.String, workflowType: models.WorkflowType, control: scala.Option[java.lang.String] = None)
final case class WorkflowTypeDetail(typeInfo: models.WorkflowTypeInfo, configuration: models.WorkflowTypeConfiguration)
final case class WorkflowExecutionConfiguration(taskList: models.TaskList, taskStartToCloseTimeout: java.lang.String, executionStartToCloseTimeout: java.lang.String, childPolicy: java.lang.String, taskPriority: scala.Option[java.lang.String] = None, lambdaRole: scala.Option[java.lang.String] = None)
final case class FailWorkflowExecutionDecisionAttributes(reason: scala.Option[java.lang.String] = None, details: scala.Option[java.lang.String] = None)
final case class RespondActivityTaskFailedInput(taskToken: java.lang.String, reason: scala.Option[java.lang.String] = None, details: scala.Option[java.lang.String] = None)
final case class WorkflowExecution(workflowId: java.lang.String, runId: java.lang.String)
final case class WorkflowTypeConfiguration(defaultTaskStartToCloseTimeout: scala.Option[java.lang.String] = None, defaultExecutionStartToCloseTimeout: scala.Option[java.lang.String] = None, defaultTaskPriority: scala.Option[java.lang.String] = None, defaultTaskList: scala.Option[models.TaskList] = None, defaultChildPolicy: scala.Option[java.lang.String] = None, defaultLambdaRole: scala.Option[java.lang.String] = None)
final case class UnknownResourceFault(message: scala.Option[java.lang.String] = None)
final case class RecordMarkerFailedEventAttributes(markerName: java.lang.String, cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class WorkflowExecutionAlreadyStartedFault(message: scala.Option[java.lang.String] = None)
final case class ChildWorkflowExecutionFailedEventAttributes(initiatedEventId: scala.Long, startedEventId: scala.Long, workflowExecution: models.WorkflowExecution, workflowType: models.WorkflowType, reason: scala.Option[java.lang.String] = None, details: scala.Option[java.lang.String] = None)
final case class ActivityTaskScheduledEventAttributes(decisionTaskCompletedEventId: scala.Long, taskList: models.TaskList, activityId: java.lang.String, activityType: models.ActivityType, scheduleToStartTimeout: scala.Option[java.lang.String] = None, scheduleToCloseTimeout: scala.Option[java.lang.String] = None, startToCloseTimeout: scala.Option[java.lang.String] = None, heartbeatTimeout: scala.Option[java.lang.String] = None, taskPriority: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None, control: scala.Option[java.lang.String] = None)
final case class ActivityTaskStatus(cancelRequested: scala.Boolean)
final case class DeprecateDomainInput(name: java.lang.String)
final case class Decision(decisionType: java.lang.String, signalExternalWorkflowExecutionDecisionAttributes: scala.Option[models.SignalExternalWorkflowExecutionDecisionAttributes] = None, requestCancelActivityTaskDecisionAttributes: scala.Option[models.RequestCancelActivityTaskDecisionAttributes] = None, startChildWorkflowExecutionDecisionAttributes: scala.Option[models.StartChildWorkflowExecutionDecisionAttributes] = None, completeWorkflowExecutionDecisionAttributes: scala.Option[models.CompleteWorkflowExecutionDecisionAttributes] = None, scheduleLambdaFunctionDecisionAttributes: scala.Option[models.ScheduleLambdaFunctionDecisionAttributes] = None, recordMarkerDecisionAttributes: scala.Option[models.RecordMarkerDecisionAttributes] = None, continueAsNewWorkflowExecutionDecisionAttributes: scala.Option[models.ContinueAsNewWorkflowExecutionDecisionAttributes] = None, failWorkflowExecutionDecisionAttributes: scala.Option[models.FailWorkflowExecutionDecisionAttributes] = None, requestCancelExternalWorkflowExecutionDecisionAttributes: scala.Option[models.RequestCancelExternalWorkflowExecutionDecisionAttributes] = None, scheduleActivityTaskDecisionAttributes: scala.Option[models.ScheduleActivityTaskDecisionAttributes] = None, cancelTimerDecisionAttributes: scala.Option[models.CancelTimerDecisionAttributes] = None, cancelWorkflowExecutionDecisionAttributes: scala.Option[models.CancelWorkflowExecutionDecisionAttributes] = None, startTimerDecisionAttributes: scala.Option[models.StartTimerDecisionAttributes] = None)
final case class RequestCancelExternalWorkflowExecutionDecisionAttributes(workflowId: java.lang.String, runId: scala.Option[java.lang.String] = None, control: scala.Option[java.lang.String] = None)
final case class LambdaFunctionStartedEventAttributes(scheduledEventId: scala.Long)
final case class ActivityTaskFailedEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, reason: scala.Option[java.lang.String] = None, details: scala.Option[java.lang.String] = None)
final case class DeprecateWorkflowTypeInput(domain: java.lang.String, workflowType: models.WorkflowType)
final case class LambdaFunctionTimedOutEventAttributes(scheduledEventId: scala.Long, startedEventId: scala.Long, timeoutType: scala.Option[java.lang.String] = None)
final case class RegisterDomainInput(name: java.lang.String, workflowExecutionRetentionPeriodInDays: java.lang.String, description: scala.Option[java.lang.String] = None)
final case class ActivityTask(startedEventId: scala.Long, workflowExecution: models.WorkflowExecution, activityId: java.lang.String, activityType: models.ActivityType, taskToken: java.lang.String, input: scala.Option[java.lang.String] = None)
final case class ActivityType(name: java.lang.String, version: java.lang.String)
final case class TerminateWorkflowExecutionInput(domain: java.lang.String, workflowId: java.lang.String, childPolicy: scala.Option[java.lang.String] = None, details: scala.Option[java.lang.String] = None, reason: scala.Option[java.lang.String] = None, runId: scala.Option[java.lang.String] = None)
final case class RespondActivityTaskCanceledInput(taskToken: java.lang.String, details: scala.Option[java.lang.String] = None)
final case class WorkflowExecutionDetail(executionInfo: models.WorkflowExecutionInfo, openCounts: models.WorkflowExecutionOpenCounts, executionConfiguration: models.WorkflowExecutionConfiguration, latestActivityTaskTimestamp: scala.Option[java.time.Instant] = None, latestExecutionContext: scala.Option[java.lang.String] = None)
final case class ScheduleActivityTaskDecisionAttributes(activityId: java.lang.String, activityType: models.ActivityType, scheduleToCloseTimeout: scala.Option[java.lang.String] = None, scheduleToStartTimeout: scala.Option[java.lang.String] = None, startToCloseTimeout: scala.Option[java.lang.String] = None, heartbeatTimeout: scala.Option[java.lang.String] = None, taskPriority: scala.Option[java.lang.String] = None, taskList: scala.Option[models.TaskList] = None, control: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None)
final case class ActivityTaskCancelRequestedEventAttributes(decisionTaskCompletedEventId: scala.Long, activityId: java.lang.String)
final case class ChildWorkflowExecutionCompletedEventAttributes(workflowExecution: models.WorkflowExecution, workflowType: models.WorkflowType, initiatedEventId: scala.Long, startedEventId: scala.Long, result: scala.Option[java.lang.String] = None)
final case class ChildWorkflowExecutionStartedEventAttributes(workflowExecution: models.WorkflowExecution, workflowType: models.WorkflowType, initiatedEventId: scala.Long)
final case class Run(runId: scala.Option[java.lang.String] = None)
final case class ContinueAsNewWorkflowExecutionFailedEventAttributes(cause: java.lang.String, decisionTaskCompletedEventId: scala.Long)
final case class SignalExternalWorkflowExecutionInitiatedEventAttributes(decisionTaskCompletedEventId: scala.Long, workflowId: java.lang.String, signalName: java.lang.String, input: scala.Option[java.lang.String] = None, control: scala.Option[java.lang.String] = None, runId: scala.Option[java.lang.String] = None)
final case class RespondActivityTaskCompletedInput(taskToken: java.lang.String, result: scala.Option[java.lang.String] = None)
final case class DeprecateActivityTypeInput(domain: java.lang.String, activityType: models.ActivityType)
final case class PollForDecisionTaskInput(domain: java.lang.String, taskList: models.TaskList, maximumPageSize: scala.Option[scala.Int] = None, reverseOrder: scala.Option[scala.Boolean] = None, identity: scala.Option[java.lang.String] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class DecisionTaskScheduledEventAttributes(taskList: models.TaskList, taskPriority: scala.Option[java.lang.String] = None, startToCloseTimeout: scala.Option[java.lang.String] = None)
final case class CancelTimerDecisionAttributes(timerId: java.lang.String)
final case class CancelWorkflowExecutionDecisionAttributes(details: scala.Option[java.lang.String] = None)
final case class ActivityTaskTimedOutEventAttributes(timeoutType: java.lang.String, scheduledEventId: scala.Long, startedEventId: scala.Long, details: scala.Option[java.lang.String] = None)
final case class CountPendingActivityTasksInput(domain: java.lang.String, taskList: models.TaskList)
final case class StartTimerDecisionAttributes(timerId: java.lang.String, startToFireTimeout: java.lang.String, control: scala.Option[java.lang.String] = None)
final case class RespondDecisionTaskCompletedInput(taskToken: java.lang.String, decisions: scala.Option[scala.List[models.Decision]] = None, executionContext: scala.Option[java.lang.String] = None)
final case class WorkflowType(name: java.lang.String, version: java.lang.String)
final case class CountOpenWorkflowExecutionsInput(startTimeFilter: models.ExecutionTimeFilter, domain: java.lang.String, tagFilter: scala.Option[models.TagFilter] = None, typeFilter: scala.Option[models.WorkflowTypeFilter] = None, executionFilter: scala.Option[models.WorkflowExecutionFilter] = None)
final case class WorkflowExecutionInfos(executionInfos: scala.List[models.WorkflowExecutionInfo], nextPageToken: scala.Option[java.lang.String] = None)
final case class LambdaFunctionScheduledEventAttributes(decisionTaskCompletedEventId: scala.Long, id: java.lang.String, name: java.lang.String, startToCloseTimeout: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None, control: scala.Option[java.lang.String] = None)