package org.lyranthe.araethura.simpleworkflow
trait Amazonsimpleworkflow[F[_]] {
  def countClosedWorkflowExecutions(input: org.lyranthe.araethura.simpleworkflow.models.CountClosedWorkflowExecutionsInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionCount]
  def listClosedWorkflowExecutions(input: org.lyranthe.araethura.simpleworkflow.models.ListClosedWorkflowExecutionsInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionInfos]
  def deprecateActivityType(input: org.lyranthe.araethura.simpleworkflow.models.DeprecateActivityTypeInput): F[scala.Unit]
  def registerWorkflowType(input: org.lyranthe.araethura.simpleworkflow.models.RegisterWorkflowTypeInput): F[scala.Unit]
  def listDomains(input: org.lyranthe.araethura.simpleworkflow.models.ListDomainsInput): F[org.lyranthe.araethura.simpleworkflow.models.DomainInfos]
  def respondActivityTaskFailed(input: org.lyranthe.araethura.simpleworkflow.models.RespondActivityTaskFailedInput): F[scala.Unit]
  def listWorkflowTypes(input: org.lyranthe.araethura.simpleworkflow.models.ListWorkflowTypesInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeInfos]
  def describeWorkflowType(input: org.lyranthe.araethura.simpleworkflow.models.DescribeWorkflowTypeInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowTypeDetail]
  def listActivityTypes(input: org.lyranthe.araethura.simpleworkflow.models.ListActivityTypesInput): F[org.lyranthe.araethura.simpleworkflow.models.ActivityTypeInfos]
  def countPendingActivityTasks(input: org.lyranthe.araethura.simpleworkflow.models.CountPendingActivityTasksInput): F[org.lyranthe.araethura.simpleworkflow.models.PendingTaskCount]
  def startWorkflowExecution(input: org.lyranthe.araethura.simpleworkflow.models.StartWorkflowExecutionInput): F[org.lyranthe.araethura.simpleworkflow.models.Run]
  def registerDomain(input: org.lyranthe.araethura.simpleworkflow.models.RegisterDomainInput): F[scala.Unit]
  def recordActivityTaskHeartbeat(input: org.lyranthe.araethura.simpleworkflow.models.RecordActivityTaskHeartbeatInput): F[org.lyranthe.araethura.simpleworkflow.models.ActivityTaskStatus]
  def describeActivityType(input: org.lyranthe.araethura.simpleworkflow.models.DescribeActivityTypeInput): F[org.lyranthe.araethura.simpleworkflow.models.ActivityTypeDetail]
  def getWorkflowExecutionHistory(input: org.lyranthe.araethura.simpleworkflow.models.GetWorkflowExecutionHistoryInput): F[org.lyranthe.araethura.simpleworkflow.models.History]
  def pollForDecisionTask(input: org.lyranthe.araethura.simpleworkflow.models.PollForDecisionTaskInput): F[org.lyranthe.araethura.simpleworkflow.models.DecisionTask]
  def countOpenWorkflowExecutions(input: org.lyranthe.araethura.simpleworkflow.models.CountOpenWorkflowExecutionsInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionCount]
  def listOpenWorkflowExecutions(input: org.lyranthe.araethura.simpleworkflow.models.ListOpenWorkflowExecutionsInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionInfos]
  def pollForActivityTask(input: org.lyranthe.araethura.simpleworkflow.models.PollForActivityTaskInput): F[org.lyranthe.araethura.simpleworkflow.models.ActivityTask]
  def terminateWorkflowExecution(input: org.lyranthe.araethura.simpleworkflow.models.TerminateWorkflowExecutionInput): F[scala.Unit]
  def describeDomain(input: org.lyranthe.araethura.simpleworkflow.models.DescribeDomainInput): F[org.lyranthe.araethura.simpleworkflow.models.DomainDetail]
  def respondDecisionTaskCompleted(input: org.lyranthe.araethura.simpleworkflow.models.RespondDecisionTaskCompletedInput): F[scala.Unit]
  def deprecateWorkflowType(input: org.lyranthe.araethura.simpleworkflow.models.DeprecateWorkflowTypeInput): F[scala.Unit]
  def signalWorkflowExecution(input: org.lyranthe.araethura.simpleworkflow.models.SignalWorkflowExecutionInput): F[scala.Unit]
  def describeWorkflowExecution(input: org.lyranthe.araethura.simpleworkflow.models.DescribeWorkflowExecutionInput): F[org.lyranthe.araethura.simpleworkflow.models.WorkflowExecutionDetail]
  def respondActivityTaskCompleted(input: org.lyranthe.araethura.simpleworkflow.models.RespondActivityTaskCompletedInput): F[scala.Unit]
  def countPendingDecisionTasks(input: org.lyranthe.araethura.simpleworkflow.models.CountPendingDecisionTasksInput): F[org.lyranthe.araethura.simpleworkflow.models.PendingTaskCount]
  def registerActivityType(input: org.lyranthe.araethura.simpleworkflow.models.RegisterActivityTypeInput): F[scala.Unit]
  def respondActivityTaskCanceled(input: org.lyranthe.araethura.simpleworkflow.models.RespondActivityTaskCanceledInput): F[scala.Unit]
  def deprecateDomain(input: org.lyranthe.araethura.simpleworkflow.models.DeprecateDomainInput): F[scala.Unit]
  def requestCancelWorkflowExecution(input: org.lyranthe.araethura.simpleworkflow.models.RequestCancelWorkflowExecutionInput): F[scala.Unit]
}