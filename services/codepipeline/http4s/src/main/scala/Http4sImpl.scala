package org.lyranthe.araethura.codepipeline.http4s
import org.http4s.Method._
import org.lyranthe.araethura.codepipeline.circe._
import org.lyranthe.araethura.codepipeline.models
class AmazoncodepipelineClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.codepipeline.Amazoncodepipeline[F] {
  private[this] final val ServiceType: String = "codepipeline"
  private[this] final val ServiceAndPrefix: Option[String] = Some("CodePipeline_20150709")
  override def listPipelineExecutions(input: models.ListPipelineExecutionsInput): F[models.ListPipelineExecutionsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListPipelineExecutionsOutput, models.ListPipelineExecutionsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListPipelineExecutions", POST, "/", input)
  override def createCustomActionType(input: models.CreateCustomActionTypeInput): F[models.CreateCustomActionTypeOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateCustomActionTypeOutput, models.CreateCustomActionTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateCustomActionType", POST, "/", input)
  override def putActionRevision(input: models.PutActionRevisionInput): F[models.PutActionRevisionOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutActionRevisionOutput, models.PutActionRevisionInput](client, awsData, ServiceType, ServiceAndPrefix, "PutActionRevision", POST, "/", input)
  override def acknowledgeJob(input: models.AcknowledgeJobInput): F[models.AcknowledgeJobOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AcknowledgeJobOutput, models.AcknowledgeJobInput](client, awsData, ServiceType, ServiceAndPrefix, "AcknowledgeJob", POST, "/", input)
  override def putApprovalResult(input: models.PutApprovalResultInput): F[models.PutApprovalResultOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutApprovalResultOutput, models.PutApprovalResultInput](client, awsData, ServiceType, ServiceAndPrefix, "PutApprovalResult", POST, "/", input)
  override def putJobFailureResult(input: models.PutJobFailureResultInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.PutJobFailureResultInput](client, awsData, ServiceType, ServiceAndPrefix, "PutJobFailureResult", POST, "/", input)
  override def listActionTypes(input: models.ListActionTypesInput): F[models.ListActionTypesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListActionTypesOutput, models.ListActionTypesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListActionTypes", POST, "/", input)
  override def putThirdPartyJobSuccessResult(input: models.PutThirdPartyJobSuccessResultInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.PutThirdPartyJobSuccessResultInput](client, awsData, ServiceType, ServiceAndPrefix, "PutThirdPartyJobSuccessResult", POST, "/", input)
  override def pollForJobs(input: models.PollForJobsInput): F[models.PollForJobsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PollForJobsOutput, models.PollForJobsInput](client, awsData, ServiceType, ServiceAndPrefix, "PollForJobs", POST, "/", input)
  override def acknowledgeThirdPartyJob(input: models.AcknowledgeThirdPartyJobInput): F[models.AcknowledgeThirdPartyJobOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AcknowledgeThirdPartyJobOutput, models.AcknowledgeThirdPartyJobInput](client, awsData, ServiceType, ServiceAndPrefix, "AcknowledgeThirdPartyJob", POST, "/", input)
  override def deleteCustomActionType(input: models.DeleteCustomActionTypeInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteCustomActionTypeInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteCustomActionType", POST, "/", input)
  override def putThirdPartyJobFailureResult(input: models.PutThirdPartyJobFailureResultInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.PutThirdPartyJobFailureResultInput](client, awsData, ServiceType, ServiceAndPrefix, "PutThirdPartyJobFailureResult", POST, "/", input)
  override def listPipelines(input: models.ListPipelinesInput): F[models.ListPipelinesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListPipelinesOutput, models.ListPipelinesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListPipelines", POST, "/", input)
  override def startPipelineExecution(input: models.StartPipelineExecutionInput): F[models.StartPipelineExecutionOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StartPipelineExecutionOutput, models.StartPipelineExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "StartPipelineExecution", POST, "/", input)
  override def getThirdPartyJobDetails(input: models.GetThirdPartyJobDetailsInput): F[models.GetThirdPartyJobDetailsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetThirdPartyJobDetailsOutput, models.GetThirdPartyJobDetailsInput](client, awsData, ServiceType, ServiceAndPrefix, "GetThirdPartyJobDetails", POST, "/", input)
  override def deletePipeline(input: models.DeletePipelineInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeletePipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "DeletePipeline", POST, "/", input)
  override def enableStageTransition(input: models.EnableStageTransitionInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.EnableStageTransitionInput](client, awsData, ServiceType, ServiceAndPrefix, "EnableStageTransition", POST, "/", input)
  override def createPipeline(input: models.CreatePipelineInput): F[models.CreatePipelineOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreatePipelineOutput, models.CreatePipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "CreatePipeline", POST, "/", input)
  override def getPipeline(input: models.GetPipelineInput): F[models.GetPipelineOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetPipelineOutput, models.GetPipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "GetPipeline", POST, "/", input)
  override def pollForThirdPartyJobs(input: models.PollForThirdPartyJobsInput): F[models.PollForThirdPartyJobsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PollForThirdPartyJobsOutput, models.PollForThirdPartyJobsInput](client, awsData, ServiceType, ServiceAndPrefix, "PollForThirdPartyJobs", POST, "/", input)
  override def getPipelineExecution(input: models.GetPipelineExecutionInput): F[models.GetPipelineExecutionOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetPipelineExecutionOutput, models.GetPipelineExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "GetPipelineExecution", POST, "/", input)
  override def updatePipeline(input: models.UpdatePipelineInput): F[models.UpdatePipelineOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdatePipelineOutput, models.UpdatePipelineInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdatePipeline", POST, "/", input)
  override def retryStageExecution(input: models.RetryStageExecutionInput): F[models.RetryStageExecutionOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RetryStageExecutionOutput, models.RetryStageExecutionInput](client, awsData, ServiceType, ServiceAndPrefix, "RetryStageExecution", POST, "/", input)
  override def getJobDetails(input: models.GetJobDetailsInput): F[models.GetJobDetailsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetJobDetailsOutput, models.GetJobDetailsInput](client, awsData, ServiceType, ServiceAndPrefix, "GetJobDetails", POST, "/", input)
  override def disableStageTransition(input: models.DisableStageTransitionInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DisableStageTransitionInput](client, awsData, ServiceType, ServiceAndPrefix, "DisableStageTransition", POST, "/", input)
  override def getPipelineState(input: models.GetPipelineStateInput): F[models.GetPipelineStateOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetPipelineStateOutput, models.GetPipelineStateInput](client, awsData, ServiceType, ServiceAndPrefix, "GetPipelineState", POST, "/", input)
  override def putJobSuccessResult(input: models.PutJobSuccessResultInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.PutJobSuccessResultInput](client, awsData, ServiceType, ServiceAndPrefix, "PutJobSuccessResult", POST, "/", input)
}