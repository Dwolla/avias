package org.lyranthe.araethura.kinesis.http4s
import org.http4s.Method._
import org.lyranthe.araethura.kinesis.circe._
import org.lyranthe.araethura.kinesis.models
class AmazonkinesisClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.kinesis.Amazonkinesis[F] {
  private[this] final val ServiceType: String = "kinesis"
  private[this] final val ServiceAndPrefix: Option[String] = Some("Kinesis_20131202")
  override def putRecord(input: org.lyranthe.araethura.kinesis.models.PutRecordInput): F[org.lyranthe.araethura.kinesis.models.PutRecordOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.PutRecordOutput, org.lyranthe.araethura.kinesis.models.PutRecordInput](client, awsData, ServiceType, ServiceAndPrefix, "PutRecord", POST, "/", input)
  override def describeStream(input: org.lyranthe.araethura.kinesis.models.DescribeStreamInput): F[org.lyranthe.araethura.kinesis.models.DescribeStreamOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.DescribeStreamOutput, org.lyranthe.araethura.kinesis.models.DescribeStreamInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeStream", POST, "/", input)
  override def addTagsToStream(input: org.lyranthe.araethura.kinesis.models.AddTagsToStreamInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.kinesis.models.AddTagsToStreamInput](client, awsData, ServiceType, ServiceAndPrefix, "AddTagsToStream", POST, "/", input)
  override def getShardIterator(input: org.lyranthe.araethura.kinesis.models.GetShardIteratorInput): F[org.lyranthe.araethura.kinesis.models.GetShardIteratorOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.GetShardIteratorOutput, org.lyranthe.araethura.kinesis.models.GetShardIteratorInput](client, awsData, ServiceType, ServiceAndPrefix, "GetShardIterator", POST, "/", input)
  override def listTagsForStream(input: org.lyranthe.araethura.kinesis.models.ListTagsForStreamInput): F[org.lyranthe.araethura.kinesis.models.ListTagsForStreamOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.ListTagsForStreamOutput, org.lyranthe.araethura.kinesis.models.ListTagsForStreamInput](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForStream", POST, "/", input)
  override def startStreamEncryption(input: org.lyranthe.araethura.kinesis.models.StartStreamEncryptionInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.kinesis.models.StartStreamEncryptionInput](client, awsData, ServiceType, ServiceAndPrefix, "StartStreamEncryption", POST, "/", input)
  override def putRecords(input: org.lyranthe.araethura.kinesis.models.PutRecordsInput): F[org.lyranthe.araethura.kinesis.models.PutRecordsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.PutRecordsOutput, org.lyranthe.araethura.kinesis.models.PutRecordsInput](client, awsData, ServiceType, ServiceAndPrefix, "PutRecords", POST, "/", input)
  override def enableEnhancedMonitoring(input: org.lyranthe.araethura.kinesis.models.EnableEnhancedMonitoringInput): F[org.lyranthe.araethura.kinesis.models.EnhancedMonitoringOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.EnhancedMonitoringOutput, org.lyranthe.araethura.kinesis.models.EnableEnhancedMonitoringInput](client, awsData, ServiceType, ServiceAndPrefix, "EnableEnhancedMonitoring", POST, "/", input)
  override def stopStreamEncryption(input: org.lyranthe.araethura.kinesis.models.StopStreamEncryptionInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.kinesis.models.StopStreamEncryptionInput](client, awsData, ServiceType, ServiceAndPrefix, "StopStreamEncryption", POST, "/", input)
  override def describeLimits: F[org.lyranthe.araethura.kinesis.models.DescribeLimitsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.DescribeLimitsOutput, scala.Unit](client, awsData, ServiceType, ServiceAndPrefix, "DescribeLimits", POST, "/", ())
  override def getRecords(input: org.lyranthe.araethura.kinesis.models.GetRecordsInput): F[org.lyranthe.araethura.kinesis.models.GetRecordsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.GetRecordsOutput, org.lyranthe.araethura.kinesis.models.GetRecordsInput](client, awsData, ServiceType, ServiceAndPrefix, "GetRecords", POST, "/", input)
  override def mergeShards(input: org.lyranthe.araethura.kinesis.models.MergeShardsInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.kinesis.models.MergeShardsInput](client, awsData, ServiceType, ServiceAndPrefix, "MergeShards", POST, "/", input)
  override def createStream(input: org.lyranthe.araethura.kinesis.models.CreateStreamInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.kinesis.models.CreateStreamInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateStream", POST, "/", input)
  override def listStreams(input: org.lyranthe.araethura.kinesis.models.ListStreamsInput): F[org.lyranthe.araethura.kinesis.models.ListStreamsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.ListStreamsOutput, org.lyranthe.araethura.kinesis.models.ListStreamsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListStreams", POST, "/", input)
  override def increaseStreamRetentionPeriod(input: org.lyranthe.araethura.kinesis.models.IncreaseStreamRetentionPeriodInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.kinesis.models.IncreaseStreamRetentionPeriodInput](client, awsData, ServiceType, ServiceAndPrefix, "IncreaseStreamRetentionPeriod", POST, "/", input)
  override def describeStreamSummary(input: org.lyranthe.araethura.kinesis.models.DescribeStreamSummaryInput): F[org.lyranthe.araethura.kinesis.models.DescribeStreamSummaryOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.DescribeStreamSummaryOutput, org.lyranthe.araethura.kinesis.models.DescribeStreamSummaryInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeStreamSummary", POST, "/", input)
  override def disableEnhancedMonitoring(input: org.lyranthe.araethura.kinesis.models.DisableEnhancedMonitoringInput): F[org.lyranthe.araethura.kinesis.models.EnhancedMonitoringOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.EnhancedMonitoringOutput, org.lyranthe.araethura.kinesis.models.DisableEnhancedMonitoringInput](client, awsData, ServiceType, ServiceAndPrefix, "DisableEnhancedMonitoring", POST, "/", input)
  override def deleteStream(input: org.lyranthe.araethura.kinesis.models.DeleteStreamInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.kinesis.models.DeleteStreamInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteStream", POST, "/", input)
  override def removeTagsFromStream(input: org.lyranthe.araethura.kinesis.models.RemoveTagsFromStreamInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.kinesis.models.RemoveTagsFromStreamInput](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTagsFromStream", POST, "/", input)
  override def splitShard(input: org.lyranthe.araethura.kinesis.models.SplitShardInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.kinesis.models.SplitShardInput](client, awsData, ServiceType, ServiceAndPrefix, "SplitShard", POST, "/", input)
  override def decreaseStreamRetentionPeriod(input: org.lyranthe.araethura.kinesis.models.DecreaseStreamRetentionPeriodInput): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, org.lyranthe.araethura.kinesis.models.DecreaseStreamRetentionPeriodInput](client, awsData, ServiceType, ServiceAndPrefix, "DecreaseStreamRetentionPeriod", POST, "/", input)
  override def updateShardCount(input: org.lyranthe.araethura.kinesis.models.UpdateShardCountInput): F[org.lyranthe.araethura.kinesis.models.UpdateShardCountOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.kinesis.models.UpdateShardCountOutput, org.lyranthe.araethura.kinesis.models.UpdateShardCountInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateShardCount", POST, "/", input)
}