package org.lyranthe.araethura.kinesis
trait Amazonkinesis[F[_]] {
  def putRecord(input: org.lyranthe.araethura.kinesis.models.PutRecordInput): F[org.lyranthe.araethura.kinesis.models.PutRecordOutput]
  def describeStream(input: org.lyranthe.araethura.kinesis.models.DescribeStreamInput): F[org.lyranthe.araethura.kinesis.models.DescribeStreamOutput]
  def addTagsToStream(input: org.lyranthe.araethura.kinesis.models.AddTagsToStreamInput): F[scala.Unit]
  def getShardIterator(input: org.lyranthe.araethura.kinesis.models.GetShardIteratorInput): F[org.lyranthe.araethura.kinesis.models.GetShardIteratorOutput]
  def listTagsForStream(input: org.lyranthe.araethura.kinesis.models.ListTagsForStreamInput): F[org.lyranthe.araethura.kinesis.models.ListTagsForStreamOutput]
  def startStreamEncryption(input: org.lyranthe.araethura.kinesis.models.StartStreamEncryptionInput): F[scala.Unit]
  def putRecords(input: org.lyranthe.araethura.kinesis.models.PutRecordsInput): F[org.lyranthe.araethura.kinesis.models.PutRecordsOutput]
  def enableEnhancedMonitoring(input: org.lyranthe.araethura.kinesis.models.EnableEnhancedMonitoringInput): F[org.lyranthe.araethura.kinesis.models.EnhancedMonitoringOutput]
  def stopStreamEncryption(input: org.lyranthe.araethura.kinesis.models.StopStreamEncryptionInput): F[scala.Unit]
  def describeLimits: F[org.lyranthe.araethura.kinesis.models.DescribeLimitsOutput]
  def getRecords(input: org.lyranthe.araethura.kinesis.models.GetRecordsInput): F[org.lyranthe.araethura.kinesis.models.GetRecordsOutput]
  def mergeShards(input: org.lyranthe.araethura.kinesis.models.MergeShardsInput): F[scala.Unit]
  def createStream(input: org.lyranthe.araethura.kinesis.models.CreateStreamInput): F[scala.Unit]
  def listStreams(input: org.lyranthe.araethura.kinesis.models.ListStreamsInput): F[org.lyranthe.araethura.kinesis.models.ListStreamsOutput]
  def increaseStreamRetentionPeriod(input: org.lyranthe.araethura.kinesis.models.IncreaseStreamRetentionPeriodInput): F[scala.Unit]
  def describeStreamSummary(input: org.lyranthe.araethura.kinesis.models.DescribeStreamSummaryInput): F[org.lyranthe.araethura.kinesis.models.DescribeStreamSummaryOutput]
  def disableEnhancedMonitoring(input: org.lyranthe.araethura.kinesis.models.DisableEnhancedMonitoringInput): F[org.lyranthe.araethura.kinesis.models.EnhancedMonitoringOutput]
  def deleteStream(input: org.lyranthe.araethura.kinesis.models.DeleteStreamInput): F[scala.Unit]
  def removeTagsFromStream(input: org.lyranthe.araethura.kinesis.models.RemoveTagsFromStreamInput): F[scala.Unit]
  def splitShard(input: org.lyranthe.araethura.kinesis.models.SplitShardInput): F[scala.Unit]
  def decreaseStreamRetentionPeriod(input: org.lyranthe.araethura.kinesis.models.DecreaseStreamRetentionPeriodInput): F[scala.Unit]
  def updateShardCount(input: org.lyranthe.araethura.kinesis.models.UpdateShardCountInput): F[org.lyranthe.araethura.kinesis.models.UpdateShardCountOutput]
}