package org.lyranthe.araethura.kinesis
trait Amazonkinesis[F[_]] {
  def putRecord(input: models.PutRecordInput): F[models.PutRecordOutput]
  def describeStream(input: models.DescribeStreamInput): F[models.DescribeStreamOutput]
  def addTagsToStream(input: models.AddTagsToStreamInput): F[Unit]
  def getShardIterator(input: models.GetShardIteratorInput): F[models.GetShardIteratorOutput]
  def listTagsForStream(input: models.ListTagsForStreamInput): F[models.ListTagsForStreamOutput]
  def startStreamEncryption(input: models.StartStreamEncryptionInput): F[Unit]
  def putRecords(input: models.PutRecordsInput): F[models.PutRecordsOutput]
  def enableEnhancedMonitoring(input: models.EnableEnhancedMonitoringInput): F[models.EnhancedMonitoringOutput]
  def stopStreamEncryption(input: models.StopStreamEncryptionInput): F[Unit]
  def describeLimits: F[models.DescribeLimitsOutput]
  def getRecords(input: models.GetRecordsInput): F[models.GetRecordsOutput]
  def mergeShards(input: models.MergeShardsInput): F[Unit]
  def createStream(input: models.CreateStreamInput): F[Unit]
  def listStreams(input: models.ListStreamsInput): F[models.ListStreamsOutput]
  def increaseStreamRetentionPeriod(input: models.IncreaseStreamRetentionPeriodInput): F[Unit]
  def describeStreamSummary(input: models.DescribeStreamSummaryInput): F[models.DescribeStreamSummaryOutput]
  def disableEnhancedMonitoring(input: models.DisableEnhancedMonitoringInput): F[models.EnhancedMonitoringOutput]
  def deleteStream(input: models.DeleteStreamInput): F[Unit]
  def removeTagsFromStream(input: models.RemoveTagsFromStreamInput): F[Unit]
  def splitShard(input: models.SplitShardInput): F[Unit]
  def decreaseStreamRetentionPeriod(input: models.DecreaseStreamRetentionPeriodInput): F[Unit]
  def updateShardCount(input: models.UpdateShardCountInput): F[models.UpdateShardCountOutput]
}