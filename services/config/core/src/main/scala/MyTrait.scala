package org.lyranthe.araethura.config
trait Amazonconfig[F[_]] {
  def describeConfigRuleEvaluationStatus(input: models.DescribeConfigRuleEvaluationStatusRequest): F[models.DescribeConfigRuleEvaluationStatusResponse]
  def deleteEvaluationResults(input: models.DeleteEvaluationResultsRequest): F[scala.Unit]
  def deleteDeliveryChannel(input: models.DeleteDeliveryChannelRequest): F[Unit]
  def deliverConfigSnapshot(input: models.DeliverConfigSnapshotRequest): F[models.DeliverConfigSnapshotResponse]
  def describeDeliveryChannels(input: models.DescribeDeliveryChannelsRequest): F[models.DescribeDeliveryChannelsResponse]
  def deleteConfigRule(input: models.DeleteConfigRuleRequest): F[Unit]
  def describeDeliveryChannelStatus(input: models.DescribeDeliveryChannelStatusRequest): F[models.DescribeDeliveryChannelStatusResponse]
  def putConfigRule(input: models.PutConfigRuleRequest): F[Unit]
  def getResourceConfigHistory(input: models.GetResourceConfigHistoryRequest): F[models.GetResourceConfigHistoryResponse]
  def getComplianceDetailsByConfigRule(input: models.GetComplianceDetailsByConfigRuleRequest): F[models.GetComplianceDetailsByConfigRuleResponse]
  def getDiscoveredResourceCounts(input: models.GetDiscoveredResourceCountsRequest): F[models.GetDiscoveredResourceCountsResponse]
  def describeConfigurationRecorderStatus(input: models.DescribeConfigurationRecorderStatusRequest): F[models.DescribeConfigurationRecorderStatusResponse]
  def listDiscoveredResources(input: models.ListDiscoveredResourcesRequest): F[models.ListDiscoveredResourcesResponse]
  def stopConfigurationRecorder(input: models.StopConfigurationRecorderRequest): F[Unit]
  def describeComplianceByResource(input: models.DescribeComplianceByResourceRequest): F[models.DescribeComplianceByResourceResponse]
  def describeComplianceByConfigRule(input: models.DescribeComplianceByConfigRuleRequest): F[models.DescribeComplianceByConfigRuleResponse]
  def deleteConfigurationRecorder(input: models.DeleteConfigurationRecorderRequest): F[Unit]
  def startConfigRulesEvaluation(input: models.StartConfigRulesEvaluationRequest): F[scala.Unit]
  def putDeliveryChannel(input: models.PutDeliveryChannelRequest): F[Unit]
  def getComplianceDetailsByResource(input: models.GetComplianceDetailsByResourceRequest): F[models.GetComplianceDetailsByResourceResponse]
  def startConfigurationRecorder(input: models.StartConfigurationRecorderRequest): F[Unit]
  def describeConfigurationRecorders(input: models.DescribeConfigurationRecordersRequest): F[models.DescribeConfigurationRecordersResponse]
  def describeConfigRules(input: models.DescribeConfigRulesRequest): F[models.DescribeConfigRulesResponse]
  def getComplianceSummaryByResourceType(input: models.GetComplianceSummaryByResourceTypeRequest): F[models.GetComplianceSummaryByResourceTypeResponse]
  def putConfigurationRecorder(input: models.PutConfigurationRecorderRequest): F[Unit]
  def getComplianceSummaryByConfigRule: F[models.GetComplianceSummaryByConfigRuleResponse]
  def putEvaluations(input: models.PutEvaluationsRequest): F[models.PutEvaluationsResponse]
}