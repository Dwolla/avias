package avias.config
trait Amazonconfig[F[_]] {
  def describeConfigRuleEvaluationStatus(input: avias.config.models.DescribeConfigRuleEvaluationStatusRequest): F[avias.config.models.DescribeConfigRuleEvaluationStatusResponse]
  def deleteEvaluationResults(input: avias.config.models.DeleteEvaluationResultsRequest): F[scala.Unit]
  def deleteDeliveryChannel(input: avias.config.models.DeleteDeliveryChannelRequest): F[scala.Unit]
  def deliverConfigSnapshot(input: avias.config.models.DeliverConfigSnapshotRequest): F[avias.config.models.DeliverConfigSnapshotResponse]
  def describeDeliveryChannels(input: avias.config.models.DescribeDeliveryChannelsRequest): F[avias.config.models.DescribeDeliveryChannelsResponse]
  def deleteConfigRule(input: avias.config.models.DeleteConfigRuleRequest): F[scala.Unit]
  def describeDeliveryChannelStatus(input: avias.config.models.DescribeDeliveryChannelStatusRequest): F[avias.config.models.DescribeDeliveryChannelStatusResponse]
  def putConfigRule(input: avias.config.models.PutConfigRuleRequest): F[scala.Unit]
  def getResourceConfigHistory(input: avias.config.models.GetResourceConfigHistoryRequest): F[avias.config.models.GetResourceConfigHistoryResponse]
  def getComplianceDetailsByConfigRule(input: avias.config.models.GetComplianceDetailsByConfigRuleRequest): F[avias.config.models.GetComplianceDetailsByConfigRuleResponse]
  def getDiscoveredResourceCounts(input: avias.config.models.GetDiscoveredResourceCountsRequest): F[avias.config.models.GetDiscoveredResourceCountsResponse]
  def describeConfigurationRecorderStatus(input: avias.config.models.DescribeConfigurationRecorderStatusRequest): F[avias.config.models.DescribeConfigurationRecorderStatusResponse]
  def listDiscoveredResources(input: avias.config.models.ListDiscoveredResourcesRequest): F[avias.config.models.ListDiscoveredResourcesResponse]
  def stopConfigurationRecorder(input: avias.config.models.StopConfigurationRecorderRequest): F[scala.Unit]
  def describeComplianceByResource(input: avias.config.models.DescribeComplianceByResourceRequest): F[avias.config.models.DescribeComplianceByResourceResponse]
  def describeComplianceByConfigRule(input: avias.config.models.DescribeComplianceByConfigRuleRequest): F[avias.config.models.DescribeComplianceByConfigRuleResponse]
  def deleteConfigurationRecorder(input: avias.config.models.DeleteConfigurationRecorderRequest): F[scala.Unit]
  def startConfigRulesEvaluation(input: avias.config.models.StartConfigRulesEvaluationRequest): F[scala.Unit]
  def putDeliveryChannel(input: avias.config.models.PutDeliveryChannelRequest): F[scala.Unit]
  def getComplianceDetailsByResource(input: avias.config.models.GetComplianceDetailsByResourceRequest): F[avias.config.models.GetComplianceDetailsByResourceResponse]
  def startConfigurationRecorder(input: avias.config.models.StartConfigurationRecorderRequest): F[scala.Unit]
  def describeConfigurationRecorders(input: avias.config.models.DescribeConfigurationRecordersRequest): F[avias.config.models.DescribeConfigurationRecordersResponse]
  def describeConfigRules(input: avias.config.models.DescribeConfigRulesRequest): F[avias.config.models.DescribeConfigRulesResponse]
  def getComplianceSummaryByResourceType(input: avias.config.models.GetComplianceSummaryByResourceTypeRequest): F[avias.config.models.GetComplianceSummaryByResourceTypeResponse]
  def putConfigurationRecorder(input: avias.config.models.PutConfigurationRecorderRequest): F[scala.Unit]
  def getComplianceSummaryByConfigRule: F[avias.config.models.GetComplianceSummaryByConfigRuleResponse]
  def putEvaluations(input: avias.config.models.PutEvaluationsRequest): F[avias.config.models.PutEvaluationsResponse]
}