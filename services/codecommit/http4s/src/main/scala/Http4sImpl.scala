package org.lyranthe.araethura.codecommit.http4s
import org.http4s.Method._
import org.lyranthe.araethura.codecommit.circe._
import org.lyranthe.araethura.codecommit.models
class AmazoncodecommitClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.codecommit.Amazoncodecommit[F] {
  private[this] final val ServiceType: String = "codecommit"
  private[this] final val ServiceAndPrefix: Option[String] = Some("CodeCommit_20150413")
  override def getDifferences(input: models.GetDifferencesInput): F[models.GetDifferencesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDifferencesOutput, models.GetDifferencesInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDifferences", POST, "/", input)
  override def deleteRepository(input: models.DeleteRepositoryInput): F[models.DeleteRepositoryOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteRepositoryOutput, models.DeleteRepositoryInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteRepository", POST, "/", input)
  override def deleteCommentContent(input: models.DeleteCommentContentInput): F[models.DeleteCommentContentOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteCommentContentOutput, models.DeleteCommentContentInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteCommentContent", POST, "/", input)
  override def getBlob(input: models.GetBlobInput): F[models.GetBlobOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetBlobOutput, models.GetBlobInput](client, awsData, ServiceType, ServiceAndPrefix, "GetBlob", POST, "/", input)
  override def getBranch(input: models.GetBranchInput): F[models.GetBranchOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetBranchOutput, models.GetBranchInput](client, awsData, ServiceType, ServiceAndPrefix, "GetBranch", POST, "/", input)
  override def getPullRequest(input: models.GetPullRequestInput): F[models.GetPullRequestOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetPullRequestOutput, models.GetPullRequestInput](client, awsData, ServiceType, ServiceAndPrefix, "GetPullRequest", POST, "/", input)
  override def describePullRequestEvents(input: models.DescribePullRequestEventsInput): F[models.DescribePullRequestEventsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribePullRequestEventsOutput, models.DescribePullRequestEventsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribePullRequestEvents", POST, "/", input)
  override def getComment(input: models.GetCommentInput): F[models.GetCommentOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetCommentOutput, models.GetCommentInput](client, awsData, ServiceType, ServiceAndPrefix, "GetComment", POST, "/", input)
  override def getRepositoryTriggers(input: models.GetRepositoryTriggersInput): F[models.GetRepositoryTriggersOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetRepositoryTriggersOutput, models.GetRepositoryTriggersInput](client, awsData, ServiceType, ServiceAndPrefix, "GetRepositoryTriggers", POST, "/", input)
  override def updatePullRequestTitle(input: models.UpdatePullRequestTitleInput): F[models.UpdatePullRequestTitleOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdatePullRequestTitleOutput, models.UpdatePullRequestTitleInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdatePullRequestTitle", POST, "/", input)
  override def updateComment(input: models.UpdateCommentInput): F[models.UpdateCommentOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateCommentOutput, models.UpdateCommentInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateComment", POST, "/", input)
  override def postCommentReply(input: models.PostCommentReplyInput): F[models.PostCommentReplyOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PostCommentReplyOutput, models.PostCommentReplyInput](client, awsData, ServiceType, ServiceAndPrefix, "PostCommentReply", POST, "/", input)
  override def getRepository(input: models.GetRepositoryInput): F[models.GetRepositoryOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetRepositoryOutput, models.GetRepositoryInput](client, awsData, ServiceType, ServiceAndPrefix, "GetRepository", POST, "/", input)
  override def createBranch(input: models.CreateBranchInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.CreateBranchInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateBranch", POST, "/", input)
  override def updateRepositoryDescription(input: models.UpdateRepositoryDescriptionInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateRepositoryDescriptionInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateRepositoryDescription", POST, "/", input)
  override def getCommentsForComparedCommit(input: models.GetCommentsForComparedCommitInput): F[models.GetCommentsForComparedCommitOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetCommentsForComparedCommitOutput, models.GetCommentsForComparedCommitInput](client, awsData, ServiceType, ServiceAndPrefix, "GetCommentsForComparedCommit", POST, "/", input)
  override def getMergeConflicts(input: models.GetMergeConflictsInput): F[models.GetMergeConflictsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetMergeConflictsOutput, models.GetMergeConflictsInput](client, awsData, ServiceType, ServiceAndPrefix, "GetMergeConflicts", POST, "/", input)
  override def createRepository(input: models.CreateRepositoryInput): F[models.CreateRepositoryOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateRepositoryOutput, models.CreateRepositoryInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateRepository", POST, "/", input)
  override def listRepositories(input: models.ListRepositoriesInput): F[models.ListRepositoriesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListRepositoriesOutput, models.ListRepositoriesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListRepositories", POST, "/", input)
  override def getCommentsForPullRequest(input: models.GetCommentsForPullRequestInput): F[models.GetCommentsForPullRequestOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetCommentsForPullRequestOutput, models.GetCommentsForPullRequestInput](client, awsData, ServiceType, ServiceAndPrefix, "GetCommentsForPullRequest", POST, "/", input)
  override def putRepositoryTriggers(input: models.PutRepositoryTriggersInput): F[models.PutRepositoryTriggersOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutRepositoryTriggersOutput, models.PutRepositoryTriggersInput](client, awsData, ServiceType, ServiceAndPrefix, "PutRepositoryTriggers", POST, "/", input)
  override def listPullRequests(input: models.ListPullRequestsInput): F[models.ListPullRequestsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListPullRequestsOutput, models.ListPullRequestsInput](client, awsData, ServiceType, ServiceAndPrefix, "ListPullRequests", POST, "/", input)
  override def createPullRequest(input: models.CreatePullRequestInput): F[models.CreatePullRequestOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreatePullRequestOutput, models.CreatePullRequestInput](client, awsData, ServiceType, ServiceAndPrefix, "CreatePullRequest", POST, "/", input)
  override def updatePullRequestDescription(input: models.UpdatePullRequestDescriptionInput): F[models.UpdatePullRequestDescriptionOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdatePullRequestDescriptionOutput, models.UpdatePullRequestDescriptionInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdatePullRequestDescription", POST, "/", input)
  override def postCommentForPullRequest(input: models.PostCommentForPullRequestInput): F[models.PostCommentForPullRequestOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PostCommentForPullRequestOutput, models.PostCommentForPullRequestInput](client, awsData, ServiceType, ServiceAndPrefix, "PostCommentForPullRequest", POST, "/", input)
  override def getCommit(input: models.GetCommitInput): F[models.GetCommitOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetCommitOutput, models.GetCommitInput](client, awsData, ServiceType, ServiceAndPrefix, "GetCommit", POST, "/", input)
  override def testRepositoryTriggers(input: models.TestRepositoryTriggersInput): F[models.TestRepositoryTriggersOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.TestRepositoryTriggersOutput, models.TestRepositoryTriggersInput](client, awsData, ServiceType, ServiceAndPrefix, "TestRepositoryTriggers", POST, "/", input)
  override def batchGetRepositories(input: models.BatchGetRepositoriesInput): F[models.BatchGetRepositoriesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchGetRepositoriesOutput, models.BatchGetRepositoriesInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetRepositories", POST, "/", input)
  override def updateRepositoryName(input: models.UpdateRepositoryNameInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateRepositoryNameInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateRepositoryName", POST, "/", input)
  override def mergePullRequestByFastForward(input: models.MergePullRequestByFastForwardInput): F[models.MergePullRequestByFastForwardOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.MergePullRequestByFastForwardOutput, models.MergePullRequestByFastForwardInput](client, awsData, ServiceType, ServiceAndPrefix, "MergePullRequestByFastForward", POST, "/", input)
  override def postCommentForComparedCommit(input: models.PostCommentForComparedCommitInput): F[models.PostCommentForComparedCommitOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PostCommentForComparedCommitOutput, models.PostCommentForComparedCommitInput](client, awsData, ServiceType, ServiceAndPrefix, "PostCommentForComparedCommit", POST, "/", input)
  override def updatePullRequestStatus(input: models.UpdatePullRequestStatusInput): F[models.UpdatePullRequestStatusOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdatePullRequestStatusOutput, models.UpdatePullRequestStatusInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdatePullRequestStatus", POST, "/", input)
  override def deleteBranch(input: models.DeleteBranchInput): F[models.DeleteBranchOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteBranchOutput, models.DeleteBranchInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteBranch", POST, "/", input)
  override def listBranches(input: models.ListBranchesInput): F[models.ListBranchesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListBranchesOutput, models.ListBranchesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListBranches", POST, "/", input)
  override def updateDefaultBranch(input: models.UpdateDefaultBranchInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateDefaultBranchInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDefaultBranch", POST, "/", input)
}