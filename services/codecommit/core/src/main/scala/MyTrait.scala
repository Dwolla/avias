package org.lyranthe.araethura.codecommit
trait Amazoncodecommit[F[_]] {
  def getDifferences(input: org.lyranthe.araethura.codecommit.models.GetDifferencesInput): F[org.lyranthe.araethura.codecommit.models.GetDifferencesOutput]
  def deleteRepository(input: org.lyranthe.araethura.codecommit.models.DeleteRepositoryInput): F[org.lyranthe.araethura.codecommit.models.DeleteRepositoryOutput]
  def deleteCommentContent(input: org.lyranthe.araethura.codecommit.models.DeleteCommentContentInput): F[org.lyranthe.araethura.codecommit.models.DeleteCommentContentOutput]
  def getBlob(input: org.lyranthe.araethura.codecommit.models.GetBlobInput): F[org.lyranthe.araethura.codecommit.models.GetBlobOutput]
  def getBranch(input: org.lyranthe.araethura.codecommit.models.GetBranchInput): F[org.lyranthe.araethura.codecommit.models.GetBranchOutput]
  def getPullRequest(input: org.lyranthe.araethura.codecommit.models.GetPullRequestInput): F[org.lyranthe.araethura.codecommit.models.GetPullRequestOutput]
  def describePullRequestEvents(input: org.lyranthe.araethura.codecommit.models.DescribePullRequestEventsInput): F[org.lyranthe.araethura.codecommit.models.DescribePullRequestEventsOutput]
  def getComment(input: org.lyranthe.araethura.codecommit.models.GetCommentInput): F[org.lyranthe.araethura.codecommit.models.GetCommentOutput]
  def getRepositoryTriggers(input: org.lyranthe.araethura.codecommit.models.GetRepositoryTriggersInput): F[org.lyranthe.araethura.codecommit.models.GetRepositoryTriggersOutput]
  def updatePullRequestTitle(input: org.lyranthe.araethura.codecommit.models.UpdatePullRequestTitleInput): F[org.lyranthe.araethura.codecommit.models.UpdatePullRequestTitleOutput]
  def updateComment(input: org.lyranthe.araethura.codecommit.models.UpdateCommentInput): F[org.lyranthe.araethura.codecommit.models.UpdateCommentOutput]
  def postCommentReply(input: org.lyranthe.araethura.codecommit.models.PostCommentReplyInput): F[org.lyranthe.araethura.codecommit.models.PostCommentReplyOutput]
  def getRepository(input: org.lyranthe.araethura.codecommit.models.GetRepositoryInput): F[org.lyranthe.araethura.codecommit.models.GetRepositoryOutput]
  def createBranch(input: org.lyranthe.araethura.codecommit.models.CreateBranchInput): F[scala.Unit]
  def updateRepositoryDescription(input: org.lyranthe.araethura.codecommit.models.UpdateRepositoryDescriptionInput): F[scala.Unit]
  def getCommentsForComparedCommit(input: org.lyranthe.araethura.codecommit.models.GetCommentsForComparedCommitInput): F[org.lyranthe.araethura.codecommit.models.GetCommentsForComparedCommitOutput]
  def getMergeConflicts(input: org.lyranthe.araethura.codecommit.models.GetMergeConflictsInput): F[org.lyranthe.araethura.codecommit.models.GetMergeConflictsOutput]
  def createRepository(input: org.lyranthe.araethura.codecommit.models.CreateRepositoryInput): F[org.lyranthe.araethura.codecommit.models.CreateRepositoryOutput]
  def listRepositories(input: org.lyranthe.araethura.codecommit.models.ListRepositoriesInput): F[org.lyranthe.araethura.codecommit.models.ListRepositoriesOutput]
  def getCommentsForPullRequest(input: org.lyranthe.araethura.codecommit.models.GetCommentsForPullRequestInput): F[org.lyranthe.araethura.codecommit.models.GetCommentsForPullRequestOutput]
  def putRepositoryTriggers(input: org.lyranthe.araethura.codecommit.models.PutRepositoryTriggersInput): F[org.lyranthe.araethura.codecommit.models.PutRepositoryTriggersOutput]
  def listPullRequests(input: org.lyranthe.araethura.codecommit.models.ListPullRequestsInput): F[org.lyranthe.araethura.codecommit.models.ListPullRequestsOutput]
  def createPullRequest(input: org.lyranthe.araethura.codecommit.models.CreatePullRequestInput): F[org.lyranthe.araethura.codecommit.models.CreatePullRequestOutput]
  def updatePullRequestDescription(input: org.lyranthe.araethura.codecommit.models.UpdatePullRequestDescriptionInput): F[org.lyranthe.araethura.codecommit.models.UpdatePullRequestDescriptionOutput]
  def postCommentForPullRequest(input: org.lyranthe.araethura.codecommit.models.PostCommentForPullRequestInput): F[org.lyranthe.araethura.codecommit.models.PostCommentForPullRequestOutput]
  def getCommit(input: org.lyranthe.araethura.codecommit.models.GetCommitInput): F[org.lyranthe.araethura.codecommit.models.GetCommitOutput]
  def testRepositoryTriggers(input: org.lyranthe.araethura.codecommit.models.TestRepositoryTriggersInput): F[org.lyranthe.araethura.codecommit.models.TestRepositoryTriggersOutput]
  def batchGetRepositories(input: org.lyranthe.araethura.codecommit.models.BatchGetRepositoriesInput): F[org.lyranthe.araethura.codecommit.models.BatchGetRepositoriesOutput]
  def updateRepositoryName(input: org.lyranthe.araethura.codecommit.models.UpdateRepositoryNameInput): F[scala.Unit]
  def mergePullRequestByFastForward(input: org.lyranthe.araethura.codecommit.models.MergePullRequestByFastForwardInput): F[org.lyranthe.araethura.codecommit.models.MergePullRequestByFastForwardOutput]
  def postCommentForComparedCommit(input: org.lyranthe.araethura.codecommit.models.PostCommentForComparedCommitInput): F[org.lyranthe.araethura.codecommit.models.PostCommentForComparedCommitOutput]
  def updatePullRequestStatus(input: org.lyranthe.araethura.codecommit.models.UpdatePullRequestStatusInput): F[org.lyranthe.araethura.codecommit.models.UpdatePullRequestStatusOutput]
  def deleteBranch(input: org.lyranthe.araethura.codecommit.models.DeleteBranchInput): F[org.lyranthe.araethura.codecommit.models.DeleteBranchOutput]
  def listBranches(input: org.lyranthe.araethura.codecommit.models.ListBranchesInput): F[org.lyranthe.araethura.codecommit.models.ListBranchesOutput]
  def updateDefaultBranch(input: org.lyranthe.araethura.codecommit.models.UpdateDefaultBranchInput): F[scala.Unit]
}