package org.lyranthe.araethura.opsworks.http4s
import org.http4s.Method._
import org.lyranthe.araethura.opsworks.circe._
import org.lyranthe.araethura.opsworks.models
class AmazonopsworksClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.opsworks.Amazonopsworks[F] {
  private[this] final val ServiceType: String = "opsworks"
  private[this] final val ServiceAndPrefix: Option[String] = Some("OpsWorks_20130218")
  override def describeElasticIps(input: models.DescribeElasticIpsRequest): F[models.DescribeElasticIpsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeElasticIpsResult, models.DescribeElasticIpsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeElasticIps", POST, "/", input)
  override def untagResource(input: models.UntagResourceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UntagResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "UntagResource", POST, "/", input)
  override def setTimeBasedAutoScaling(input: models.SetTimeBasedAutoScalingRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.SetTimeBasedAutoScalingRequest](client, awsData, ServiceType, ServiceAndPrefix, "SetTimeBasedAutoScaling", POST, "/", input)
  override def describeInstances(input: models.DescribeInstancesRequest): F[models.DescribeInstancesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeInstancesResult, models.DescribeInstancesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstances", POST, "/", input)
  override def describeRaidArrays(input: models.DescribeRaidArraysRequest): F[models.DescribeRaidArraysResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeRaidArraysResult, models.DescribeRaidArraysRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeRaidArrays", POST, "/", input)
  override def unassignVolume(input: models.UnassignVolumeRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UnassignVolumeRequest](client, awsData, ServiceType, ServiceAndPrefix, "UnassignVolume", POST, "/", input)
  override def deleteUserProfile(input: models.DeleteUserProfileRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteUserProfileRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUserProfile", POST, "/", input)
  override def setPermission(input: models.SetPermissionRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.SetPermissionRequest](client, awsData, ServiceType, ServiceAndPrefix, "SetPermission", POST, "/", input)
  override def updateElasticIp(input: models.UpdateElasticIpRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateElasticIpRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateElasticIp", POST, "/", input)
  override def describeApps(input: models.DescribeAppsRequest): F[models.DescribeAppsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeAppsResult, models.DescribeAppsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeApps", POST, "/", input)
  override def deregisterInstance(input: models.DeregisterInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeregisterInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterInstance", POST, "/", input)
  override def disassociateElasticIp(input: models.DisassociateElasticIpRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DisassociateElasticIpRequest](client, awsData, ServiceType, ServiceAndPrefix, "DisassociateElasticIp", POST, "/", input)
  override def deregisterVolume(input: models.DeregisterVolumeRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeregisterVolumeRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterVolume", POST, "/", input)
  override def updateStack(input: models.UpdateStackRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateStackRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateStack", POST, "/", input)
  override def deleteInstance(input: models.DeleteInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteInstance", POST, "/", input)
  override def deregisterRdsDbInstance(input: models.DeregisterRdsDbInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeregisterRdsDbInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterRdsDbInstance", POST, "/", input)
  override def describeMyUserProfile: F[models.DescribeMyUserProfileResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequestWithoutBody[F, models.DescribeMyUserProfileResult](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMyUserProfile", POST, "/")
  override def describeAgentVersions(input: models.DescribeAgentVersionsRequest): F[models.DescribeAgentVersionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeAgentVersionsResult, models.DescribeAgentVersionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAgentVersions", POST, "/", input)
  override def deregisterElasticIp(input: models.DeregisterElasticIpRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeregisterElasticIpRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterElasticIp", POST, "/", input)
  override def describePermissions(input: models.DescribePermissionsRequest): F[models.DescribePermissionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribePermissionsResult, models.DescribePermissionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribePermissions", POST, "/", input)
  override def describeUserProfiles(input: models.DescribeUserProfilesRequest): F[models.DescribeUserProfilesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeUserProfilesResult, models.DescribeUserProfilesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeUserProfiles", POST, "/", input)
  override def rebootInstance(input: models.RebootInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.RebootInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "RebootInstance", POST, "/", input)
  override def updateUserProfile(input: models.UpdateUserProfileRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateUserProfileRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateUserProfile", POST, "/", input)
  override def startInstance(input: models.StartInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.StartInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartInstance", POST, "/", input)
  override def tagResource(input: models.TagResourceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.TagResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "TagResource", POST, "/", input)
  override def stopInstance(input: models.StopInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.StopInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopInstance", POST, "/", input)
  override def describeServiceErrors(input: models.DescribeServiceErrorsRequest): F[models.DescribeServiceErrorsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeServiceErrorsResult, models.DescribeServiceErrorsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeServiceErrors", POST, "/", input)
  override def describeVolumes(input: models.DescribeVolumesRequest): F[models.DescribeVolumesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeVolumesResult, models.DescribeVolumesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeVolumes", POST, "/", input)
  override def assignInstance(input: models.AssignInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AssignInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AssignInstance", POST, "/", input)
  override def attachElasticLoadBalancer(input: models.AttachElasticLoadBalancerRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AttachElasticLoadBalancerRequest](client, awsData, ServiceType, ServiceAndPrefix, "AttachElasticLoadBalancer", POST, "/", input)
  override def createUserProfile(input: models.CreateUserProfileRequest): F[models.CreateUserProfileResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateUserProfileResult, models.CreateUserProfileRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateUserProfile", POST, "/", input)
  override def describeElasticLoadBalancers(input: models.DescribeElasticLoadBalancersRequest): F[models.DescribeElasticLoadBalancersResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeElasticLoadBalancersResult, models.DescribeElasticLoadBalancersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeElasticLoadBalancers", POST, "/", input)
  override def describeCommands(input: models.DescribeCommandsRequest): F[models.DescribeCommandsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeCommandsResult, models.DescribeCommandsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeCommands", POST, "/", input)
  override def deleteStack(input: models.DeleteStackRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteStackRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteStack", POST, "/", input)
  override def registerInstance(input: models.RegisterInstanceRequest): F[models.RegisterInstanceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RegisterInstanceResult, models.RegisterInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterInstance", POST, "/", input)
  override def registerEcsCluster(input: models.RegisterEcsClusterRequest): F[models.RegisterEcsClusterResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RegisterEcsClusterResult, models.RegisterEcsClusterRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterEcsCluster", POST, "/", input)
  override def associateElasticIp(input: models.AssociateElasticIpRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AssociateElasticIpRequest](client, awsData, ServiceType, ServiceAndPrefix, "AssociateElasticIp", POST, "/", input)
  override def updateRdsDbInstance(input: models.UpdateRdsDbInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateRdsDbInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateRdsDbInstance", POST, "/", input)
  override def detachElasticLoadBalancer(input: models.DetachElasticLoadBalancerRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DetachElasticLoadBalancerRequest](client, awsData, ServiceType, ServiceAndPrefix, "DetachElasticLoadBalancer", POST, "/", input)
  override def deleteApp(input: models.DeleteAppRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteAppRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteApp", POST, "/", input)
  override def deregisterEcsCluster(input: models.DeregisterEcsClusterRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeregisterEcsClusterRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterEcsCluster", POST, "/", input)
  override def createDeployment(input: models.CreateDeploymentRequest): F[models.CreateDeploymentResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDeploymentResult, models.CreateDeploymentRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDeployment", POST, "/", input)
  override def describeStackSummary(input: models.DescribeStackSummaryRequest): F[models.DescribeStackSummaryResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeStackSummaryResult, models.DescribeStackSummaryRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeStackSummary", POST, "/", input)
  override def listTags(input: models.ListTagsRequest): F[models.ListTagsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTagsResult, models.ListTagsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTags", POST, "/", input)
  override def deleteLayer(input: models.DeleteLayerRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteLayerRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteLayer", POST, "/", input)
  override def getHostnameSuggestion(input: models.GetHostnameSuggestionRequest): F[models.GetHostnameSuggestionResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetHostnameSuggestionResult, models.GetHostnameSuggestionRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetHostnameSuggestion", POST, "/", input)
  override def createInstance(input: models.CreateInstanceRequest): F[models.CreateInstanceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateInstanceResult, models.CreateInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateInstance", POST, "/", input)
  override def registerVolume(input: models.RegisterVolumeRequest): F[models.RegisterVolumeResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RegisterVolumeResult, models.RegisterVolumeRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterVolume", POST, "/", input)
  override def stopStack(input: models.StopStackRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.StopStackRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopStack", POST, "/", input)
  override def describeLayers(input: models.DescribeLayersRequest): F[models.DescribeLayersResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeLayersResult, models.DescribeLayersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeLayers", POST, "/", input)
  override def createApp(input: models.CreateAppRequest): F[models.CreateAppResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateAppResult, models.CreateAppRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateApp", POST, "/", input)
  override def describeStackProvisioningParameters(input: models.DescribeStackProvisioningParametersRequest): F[models.DescribeStackProvisioningParametersResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeStackProvisioningParametersResult, models.DescribeStackProvisioningParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeStackProvisioningParameters", POST, "/", input)
  override def unassignInstance(input: models.UnassignInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UnassignInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "UnassignInstance", POST, "/", input)
  override def assignVolume(input: models.AssignVolumeRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AssignVolumeRequest](client, awsData, ServiceType, ServiceAndPrefix, "AssignVolume", POST, "/", input)
  override def grantAccess(input: models.GrantAccessRequest): F[models.GrantAccessResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GrantAccessResult, models.GrantAccessRequest](client, awsData, ServiceType, ServiceAndPrefix, "GrantAccess", POST, "/", input)
  override def cloneStack(input: models.CloneStackRequest): F[models.CloneStackResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CloneStackResult, models.CloneStackRequest](client, awsData, ServiceType, ServiceAndPrefix, "CloneStack", POST, "/", input)
  override def describeTimeBasedAutoScaling(input: models.DescribeTimeBasedAutoScalingRequest): F[models.DescribeTimeBasedAutoScalingResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeTimeBasedAutoScalingResult, models.DescribeTimeBasedAutoScalingRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTimeBasedAutoScaling", POST, "/", input)
  override def describeRdsDbInstances(input: models.DescribeRdsDbInstancesRequest): F[models.DescribeRdsDbInstancesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeRdsDbInstancesResult, models.DescribeRdsDbInstancesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeRdsDbInstances", POST, "/", input)
  override def updateApp(input: models.UpdateAppRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateAppRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateApp", POST, "/", input)
  override def updateMyUserProfile(input: models.UpdateMyUserProfileRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateMyUserProfileRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateMyUserProfile", POST, "/", input)
  override def describeEcsClusters(input: models.DescribeEcsClustersRequest): F[models.DescribeEcsClustersResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeEcsClustersResult, models.DescribeEcsClustersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEcsClusters", POST, "/", input)
  override def updateLayer(input: models.UpdateLayerRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateLayerRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateLayer", POST, "/", input)
  override def registerRdsDbInstance(input: models.RegisterRdsDbInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.RegisterRdsDbInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterRdsDbInstance", POST, "/", input)
  override def updateInstance(input: models.UpdateInstanceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateInstance", POST, "/", input)
  override def describeStacks(input: models.DescribeStacksRequest): F[models.DescribeStacksResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeStacksResult, models.DescribeStacksRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeStacks", POST, "/", input)
  override def setLoadBasedAutoScaling(input: models.SetLoadBasedAutoScalingRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.SetLoadBasedAutoScalingRequest](client, awsData, ServiceType, ServiceAndPrefix, "SetLoadBasedAutoScaling", POST, "/", input)
  override def startStack(input: models.StartStackRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.StartStackRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartStack", POST, "/", input)
  override def describeLoadBasedAutoScaling(input: models.DescribeLoadBasedAutoScalingRequest): F[models.DescribeLoadBasedAutoScalingResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeLoadBasedAutoScalingResult, models.DescribeLoadBasedAutoScalingRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeLoadBasedAutoScaling", POST, "/", input)
  override def createLayer(input: models.CreateLayerRequest): F[models.CreateLayerResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateLayerResult, models.CreateLayerRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateLayer", POST, "/", input)
  override def updateVolume(input: models.UpdateVolumeRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UpdateVolumeRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateVolume", POST, "/", input)
  override def createStack(input: models.CreateStackRequest): F[models.CreateStackResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateStackResult, models.CreateStackRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateStack", POST, "/", input)
  override def describeDeployments(input: models.DescribeDeploymentsRequest): F[models.DescribeDeploymentsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeDeploymentsResult, models.DescribeDeploymentsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDeployments", POST, "/", input)
  override def registerElasticIp(input: models.RegisterElasticIpRequest): F[models.RegisterElasticIpResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RegisterElasticIpResult, models.RegisterElasticIpRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterElasticIp", POST, "/", input)
}