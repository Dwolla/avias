package avias.athena.models
final case class DeleteNamedQueryInput(namedQueryId: java.lang.String)
final case class BatchGetQueryExecutionOutput(queryExecutions: scala.Option[scala.List[avias.athena.models.QueryExecution]] = scala.None, unprocessedQueryExecutionIds: scala.Option[scala.List[avias.athena.models.UnprocessedQueryExecutionId]] = scala.None)
final case class ListNamedQueriesOutput(namedQueryIds: scala.Option[scala.List[java.lang.String]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class EncryptionConfiguration(encryptionOption: java.lang.String, kmsKey: scala.Option[java.lang.String] = scala.None)
final case class QueryExecution(query: scala.Option[java.lang.String] = scala.None, queryExecutionId: scala.Option[java.lang.String] = scala.None, resultConfiguration: scala.Option[avias.athena.models.ResultConfiguration] = scala.None, status: scala.Option[avias.athena.models.QueryExecutionStatus] = scala.None, queryExecutionContext: scala.Option[avias.athena.models.QueryExecutionContext] = scala.None, statistics: scala.Option[avias.athena.models.QueryExecutionStatistics] = scala.None)
final case class UnprocessedNamedQueryId(namedQueryId: scala.Option[java.lang.String] = scala.None, errorCode: scala.Option[java.lang.String] = scala.None, errorMessage: scala.Option[java.lang.String] = scala.None)
final case class Datum(varCharValue: scala.Option[java.lang.String] = scala.None)
final case class ListNamedQueriesInput(nextToken: scala.Option[java.lang.String] = scala.None, maxResults: scala.Option[scala.Int] = scala.None)
final case class ResultConfiguration(outputLocation: java.lang.String, encryptionConfiguration: scala.Option[avias.athena.models.EncryptionConfiguration] = scala.None)
final case class StartQueryExecutionOutput(queryExecutionId: scala.Option[java.lang.String] = scala.None)
final case class BatchGetQueryExecutionInput(queryExecutionIds: scala.List[java.lang.String])
final case class ListQueryExecutionsInput(nextToken: scala.Option[java.lang.String] = scala.None, maxResults: scala.Option[scala.Int] = scala.None)
final case class UnprocessedQueryExecutionId(queryExecutionId: scala.Option[java.lang.String] = scala.None, errorCode: scala.Option[java.lang.String] = scala.None, errorMessage: scala.Option[java.lang.String] = scala.None)
final case class ResultSetMetadata(columnInfo: scala.Option[scala.List[avias.athena.models.ColumnInfo]] = scala.None)
case object StopQueryExecutionOutput
case object DeleteNamedQueryOutput
final case class InternalServerException(message: scala.Option[java.lang.String] = scala.None)
final case class ColumnInfo(name: java.lang.String, `type`: java.lang.String, schemaName: scala.Option[java.lang.String] = scala.None, catalogName: scala.Option[java.lang.String] = scala.None, tableName: scala.Option[java.lang.String] = scala.None, label: scala.Option[java.lang.String] = scala.None, precision: scala.Option[scala.Int] = scala.None, scale: scala.Option[scala.Int] = scala.None, nullable: scala.Option[java.lang.String] = scala.None, caseSensitive: scala.Option[scala.Boolean] = scala.None)
final case class GetQueryExecutionInput(queryExecutionId: java.lang.String)
final case class BatchGetNamedQueryInput(namedQueryIds: scala.List[java.lang.String])
final case class Row(data: scala.Option[scala.List[avias.athena.models.Datum]] = scala.None)
final case class ListQueryExecutionsOutput(queryExecutionIds: scala.Option[scala.List[java.lang.String]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class QueryExecutionStatus(state: scala.Option[java.lang.String] = scala.None, stateChangeReason: scala.Option[java.lang.String] = scala.None, submissionDateTime: scala.Option[java.time.Instant] = scala.None, completionDateTime: scala.Option[java.time.Instant] = scala.None)
final case class InvalidRequestException(athenaErrorCode: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class BatchGetNamedQueryOutput(namedQueries: scala.Option[scala.List[avias.athena.models.NamedQuery]] = scala.None, unprocessedNamedQueryIds: scala.Option[scala.List[avias.athena.models.UnprocessedNamedQueryId]] = scala.None)
final case class GetQueryResultsInput(queryExecutionId: java.lang.String, nextToken: scala.Option[java.lang.String] = scala.None, maxResults: scala.Option[scala.Int] = scala.None)
final case class StopQueryExecutionInput(queryExecutionId: java.lang.String)
final case class GetQueryExecutionOutput(queryExecution: scala.Option[avias.athena.models.QueryExecution] = scala.None)
final case class GetNamedQueryInput(namedQueryId: java.lang.String)
final case class StartQueryExecutionInput(queryString: java.lang.String, resultConfiguration: avias.athena.models.ResultConfiguration, clientRequestToken: scala.Option[java.lang.String] = scala.None, queryExecutionContext: scala.Option[avias.athena.models.QueryExecutionContext] = scala.None)
final case class GetNamedQueryOutput(namedQuery: scala.Option[avias.athena.models.NamedQuery] = scala.None)
final case class CreateNamedQueryInput(queryString: java.lang.String, name: java.lang.String, database: java.lang.String, clientRequestToken: scala.Option[java.lang.String] = scala.None, description: scala.Option[java.lang.String] = scala.None)
final case class QueryExecutionContext(database: scala.Option[java.lang.String] = scala.None)
final case class TooManyRequestsException(message: scala.Option[java.lang.String] = scala.None, reason: scala.Option[java.lang.String] = scala.None)
final case class NamedQuery(queryString: java.lang.String, name: java.lang.String, database: java.lang.String, description: scala.Option[java.lang.String] = scala.None, namedQueryId: scala.Option[java.lang.String] = scala.None)
final case class ResultSet(rows: scala.Option[scala.List[avias.athena.models.Row]] = scala.None, resultSetMetadata: scala.Option[avias.athena.models.ResultSetMetadata] = scala.None)
final case class CreateNamedQueryOutput(namedQueryId: scala.Option[java.lang.String] = scala.None)
final case class QueryExecutionStatistics(engineExecutionTimeInMillis: scala.Option[scala.Long] = scala.None, dataScannedInBytes: scala.Option[scala.Long] = scala.None)
final case class GetQueryResultsOutput(resultSet: scala.Option[avias.athena.models.ResultSet] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)