package org.lyranthe.araethura.cognitoidp.http4s
import org.http4s.Method._
import org.lyranthe.araethura.cognitoidp.circe._
import org.lyranthe.araethura.cognitoidp.models
class AmazoncognitoidpClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.cognitoidp.Amazoncognitoidp[F] {
  private[this] final val ServiceType: String = "cognito-idp"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AWSCognitoIdentityProviderService")
  override def listResourceServers(input: models.ListResourceServersRequest): F[models.ListResourceServersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListResourceServersResponse, models.ListResourceServersRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListResourceServers", POST, "/", input)
  override def listUserImportJobs(input: models.ListUserImportJobsRequest): F[models.ListUserImportJobsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListUserImportJobsResponse, models.ListUserImportJobsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUserImportJobs", POST, "/", input)
  override def adminUserGlobalSignOut(input: models.AdminUserGlobalSignOutRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminUserGlobalSignOutRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminUserGlobalSignOut", POST, "/", input)
  override def adminEnableUser(input: models.AdminEnableUserRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminEnableUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminEnableUser", POST, "/", input)
  override def adminGetDevice(input: models.AdminGetDeviceRequest): F[models.AdminGetDeviceResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AdminGetDeviceResponse, models.AdminGetDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminGetDevice", POST, "/", input)
  override def changePassword(input: models.ChangePasswordRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.ChangePasswordRequest](client, awsData, ServiceType, ServiceAndPrefix, "ChangePassword", POST, "/", input)
  override def getDevice(input: models.GetDeviceRequest): F[models.GetDeviceResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDeviceResponse, models.GetDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDevice", POST, "/", input)
  override def adminListDevices(input: models.AdminListDevicesRequest): F[models.AdminListDevicesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AdminListDevicesResponse, models.AdminListDevicesRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminListDevices", POST, "/", input)
  override def adminSetUserSettings(input: models.AdminSetUserSettingsRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminSetUserSettingsRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminSetUserSettings", POST, "/", input)
  override def createUserImportJob(input: models.CreateUserImportJobRequest): F[models.CreateUserImportJobResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateUserImportJobResponse, models.CreateUserImportJobRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateUserImportJob", POST, "/", input)
  override def getUserAttributeVerificationCode(input: models.GetUserAttributeVerificationCodeRequest): F[models.GetUserAttributeVerificationCodeResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetUserAttributeVerificationCodeResponse, models.GetUserAttributeVerificationCodeRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetUserAttributeVerificationCode", POST, "/", input)
  override def initiateAuth(input: models.InitiateAuthRequest): F[models.InitiateAuthResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.InitiateAuthResponse, models.InitiateAuthRequest](client, awsData, ServiceType, ServiceAndPrefix, "InitiateAuth", POST, "/", input)
  override def getUser(input: models.GetUserRequest): F[models.GetUserResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetUserResponse, models.GetUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetUser", POST, "/", input)
  override def adminRespondToAuthChallenge(input: models.AdminRespondToAuthChallengeRequest): F[models.AdminRespondToAuthChallengeResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AdminRespondToAuthChallengeResponse, models.AdminRespondToAuthChallengeRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminRespondToAuthChallenge", POST, "/", input)
  override def updateUserPool(input: models.UpdateUserPoolRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.UpdateUserPoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateUserPool", POST, "/", input)
  override def listUserPools(input: models.ListUserPoolsRequest): F[models.ListUserPoolsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListUserPoolsResponse, models.ListUserPoolsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUserPools", POST, "/", input)
  override def deleteUser(input: models.DeleteUserRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUser", POST, "/", input)
  override def adminUpdateDeviceStatus(input: models.AdminUpdateDeviceStatusRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminUpdateDeviceStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminUpdateDeviceStatus", POST, "/", input)
  override def getUICustomization(input: models.GetUICustomizationRequest): F[models.GetUICustomizationResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetUICustomizationResponse, models.GetUICustomizationRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetUICustomization", POST, "/", input)
  override def respondToAuthChallenge(input: models.RespondToAuthChallengeRequest): F[models.RespondToAuthChallengeResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RespondToAuthChallengeResponse, models.RespondToAuthChallengeRequest](client, awsData, ServiceType, ServiceAndPrefix, "RespondToAuthChallenge", POST, "/", input)
  override def deleteUserPoolDomain(input: models.DeleteUserPoolDomainRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteUserPoolDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUserPoolDomain", POST, "/", input)
  override def adminGetUser(input: models.AdminGetUserRequest): F[models.AdminGetUserResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AdminGetUserResponse, models.AdminGetUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminGetUser", POST, "/", input)
  override def deleteUserPoolClient(input: models.DeleteUserPoolClientRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteUserPoolClientRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUserPoolClient", POST, "/", input)
  override def deleteIdentityProvider(input: models.DeleteIdentityProviderRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteIdentityProviderRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteIdentityProvider", POST, "/", input)
  override def deleteResourceServer(input: models.DeleteResourceServerRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteResourceServerRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteResourceServer", POST, "/", input)
  override def createGroup(input: models.CreateGroupRequest): F[models.CreateGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateGroupResponse, models.CreateGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateGroup", POST, "/", input)
  override def listUsersInGroup(input: models.ListUsersInGroupRequest): F[models.ListUsersInGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListUsersInGroupResponse, models.ListUsersInGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUsersInGroup", POST, "/", input)
  override def createUserPool(input: models.CreateUserPoolRequest): F[models.CreateUserPoolResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateUserPoolResponse, models.CreateUserPoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateUserPool", POST, "/", input)
  override def adminDisableProviderForUser(input: models.AdminDisableProviderForUserRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminDisableProviderForUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminDisableProviderForUser", POST, "/", input)
  override def updateDeviceStatus(input: models.UpdateDeviceStatusRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.UpdateDeviceStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDeviceStatus", POST, "/", input)
  override def adminDisableUser(input: models.AdminDisableUserRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminDisableUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminDisableUser", POST, "/", input)
  override def addCustomAttributes(input: models.AddCustomAttributesRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AddCustomAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "AddCustomAttributes", POST, "/", input)
  override def adminLinkProviderForUser(input: models.AdminLinkProviderForUserRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminLinkProviderForUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminLinkProviderForUser", POST, "/", input)
  override def listIdentityProviders(input: models.ListIdentityProvidersRequest): F[models.ListIdentityProvidersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListIdentityProvidersResponse, models.ListIdentityProvidersRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListIdentityProviders", POST, "/", input)
  override def getIdentityProviderByIdentifier(input: models.GetIdentityProviderByIdentifierRequest): F[models.GetIdentityProviderByIdentifierResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetIdentityProviderByIdentifierResponse, models.GetIdentityProviderByIdentifierRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetIdentityProviderByIdentifier", POST, "/", input)
  override def getGroup(input: models.GetGroupRequest): F[models.GetGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetGroupResponse, models.GetGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetGroup", POST, "/", input)
  override def updateUserPoolClient(input: models.UpdateUserPoolClientRequest): F[models.UpdateUserPoolClientResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateUserPoolClientResponse, models.UpdateUserPoolClientRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateUserPoolClient", POST, "/", input)
  override def updateUserAttributes(input: models.UpdateUserAttributesRequest): F[models.UpdateUserAttributesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateUserAttributesResponse, models.UpdateUserAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateUserAttributes", POST, "/", input)
  override def describeUserPoolClient(input: models.DescribeUserPoolClientRequest): F[models.DescribeUserPoolClientResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeUserPoolClientResponse, models.DescribeUserPoolClientRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeUserPoolClient", POST, "/", input)
  override def deleteUserAttributes(input: models.DeleteUserAttributesRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteUserAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUserAttributes", POST, "/", input)
  override def resendConfirmationCode(input: models.ResendConfirmationCodeRequest): F[models.ResendConfirmationCodeResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ResendConfirmationCodeResponse, models.ResendConfirmationCodeRequest](client, awsData, ServiceType, ServiceAndPrefix, "ResendConfirmationCode", POST, "/", input)
  override def describeUserPoolDomain(input: models.DescribeUserPoolDomainRequest): F[models.DescribeUserPoolDomainResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeUserPoolDomainResponse, models.DescribeUserPoolDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeUserPoolDomain", POST, "/", input)
  override def createResourceServer(input: models.CreateResourceServerRequest): F[models.CreateResourceServerResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateResourceServerResponse, models.CreateResourceServerRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateResourceServer", POST, "/", input)
  override def describeUserImportJob(input: models.DescribeUserImportJobRequest): F[models.DescribeUserImportJobResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeUserImportJobResponse, models.DescribeUserImportJobRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeUserImportJob", POST, "/", input)
  override def setUICustomization(input: models.SetUICustomizationRequest): F[models.SetUICustomizationResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.SetUICustomizationResponse, models.SetUICustomizationRequest](client, awsData, ServiceType, ServiceAndPrefix, "SetUICustomization", POST, "/", input)
  override def describeResourceServer(input: models.DescribeResourceServerRequest): F[models.DescribeResourceServerResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeResourceServerResponse, models.DescribeResourceServerRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeResourceServer", POST, "/", input)
  override def listUserPoolClients(input: models.ListUserPoolClientsRequest): F[models.ListUserPoolClientsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListUserPoolClientsResponse, models.ListUserPoolClientsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUserPoolClients", POST, "/", input)
  override def confirmForgotPassword(input: models.ConfirmForgotPasswordRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.ConfirmForgotPasswordRequest](client, awsData, ServiceType, ServiceAndPrefix, "ConfirmForgotPassword", POST, "/", input)
  override def listUsers(input: models.ListUsersRequest): F[models.ListUsersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListUsersResponse, models.ListUsersRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUsers", POST, "/", input)
  override def adminForgetDevice(input: models.AdminForgetDeviceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AdminForgetDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminForgetDevice", POST, "/", input)
  override def updateIdentityProvider(input: models.UpdateIdentityProviderRequest): F[models.UpdateIdentityProviderResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateIdentityProviderResponse, models.UpdateIdentityProviderRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateIdentityProvider", POST, "/", input)
  override def listDevices(input: models.ListDevicesRequest): F[models.ListDevicesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListDevicesResponse, models.ListDevicesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListDevices", POST, "/", input)
  override def updateResourceServer(input: models.UpdateResourceServerRequest): F[models.UpdateResourceServerResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateResourceServerResponse, models.UpdateResourceServerRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateResourceServer", POST, "/", input)
  override def adminListGroupsForUser(input: models.AdminListGroupsForUserRequest): F[models.AdminListGroupsForUserResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AdminListGroupsForUserResponse, models.AdminListGroupsForUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminListGroupsForUser", POST, "/", input)
  override def startUserImportJob(input: models.StartUserImportJobRequest): F[models.StartUserImportJobResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StartUserImportJobResponse, models.StartUserImportJobRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartUserImportJob", POST, "/", input)
  override def createIdentityProvider(input: models.CreateIdentityProviderRequest): F[models.CreateIdentityProviderResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateIdentityProviderResponse, models.CreateIdentityProviderRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateIdentityProvider", POST, "/", input)
  override def forgotPassword(input: models.ForgotPasswordRequest): F[models.ForgotPasswordResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ForgotPasswordResponse, models.ForgotPasswordRequest](client, awsData, ServiceType, ServiceAndPrefix, "ForgotPassword", POST, "/", input)
  override def deleteUserPool(input: models.DeleteUserPoolRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteUserPoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUserPool", POST, "/", input)
  override def adminCreateUser(input: models.AdminCreateUserRequest): F[models.AdminCreateUserResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AdminCreateUserResponse, models.AdminCreateUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminCreateUser", POST, "/", input)
  override def deleteGroup(input: models.DeleteGroupRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteGroup", POST, "/", input)
  override def createUserPoolDomain(input: models.CreateUserPoolDomainRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.CreateUserPoolDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateUserPoolDomain", POST, "/", input)
  override def adminDeleteUserAttributes(input: models.AdminDeleteUserAttributesRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminDeleteUserAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminDeleteUserAttributes", POST, "/", input)
  override def confirmSignUp(input: models.ConfirmSignUpRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.ConfirmSignUpRequest](client, awsData, ServiceType, ServiceAndPrefix, "ConfirmSignUp", POST, "/", input)
  override def globalSignOut(input: models.GlobalSignOutRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.GlobalSignOutRequest](client, awsData, ServiceType, ServiceAndPrefix, "GlobalSignOut", POST, "/", input)
  override def adminAddUserToGroup(input: models.AdminAddUserToGroupRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AdminAddUserToGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminAddUserToGroup", POST, "/", input)
  override def adminRemoveUserFromGroup(input: models.AdminRemoveUserFromGroupRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AdminRemoveUserFromGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminRemoveUserFromGroup", POST, "/", input)
  override def confirmDevice(input: models.ConfirmDeviceRequest): F[models.ConfirmDeviceResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ConfirmDeviceResponse, models.ConfirmDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "ConfirmDevice", POST, "/", input)
  override def getCSVHeader(input: models.GetCSVHeaderRequest): F[models.GetCSVHeaderResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetCSVHeaderResponse, models.GetCSVHeaderRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetCSVHeader", POST, "/", input)
  override def verifyUserAttribute(input: models.VerifyUserAttributeRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.VerifyUserAttributeRequest](client, awsData, ServiceType, ServiceAndPrefix, "VerifyUserAttribute", POST, "/", input)
  override def adminDeleteUser(input: models.AdminDeleteUserRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AdminDeleteUserRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminDeleteUser", POST, "/", input)
  override def describeIdentityProvider(input: models.DescribeIdentityProviderRequest): F[models.DescribeIdentityProviderResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeIdentityProviderResponse, models.DescribeIdentityProviderRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeIdentityProvider", POST, "/", input)
  override def updateGroup(input: models.UpdateGroupRequest): F[models.UpdateGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateGroupResponse, models.UpdateGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateGroup", POST, "/", input)
  override def describeUserPool(input: models.DescribeUserPoolRequest): F[models.DescribeUserPoolResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeUserPoolResponse, models.DescribeUserPoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeUserPool", POST, "/", input)
  override def adminUpdateUserAttributes(input: models.AdminUpdateUserAttributesRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminUpdateUserAttributesRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminUpdateUserAttributes", POST, "/", input)
  override def adminResetUserPassword(input: models.AdminResetUserPasswordRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminResetUserPasswordRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminResetUserPassword", POST, "/", input)
  override def stopUserImportJob(input: models.StopUserImportJobRequest): F[models.StopUserImportJobResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StopUserImportJobResponse, models.StopUserImportJobRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopUserImportJob", POST, "/", input)
  override def adminInitiateAuth(input: models.AdminInitiateAuthRequest): F[models.AdminInitiateAuthResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AdminInitiateAuthResponse, models.AdminInitiateAuthRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminInitiateAuth", POST, "/", input)
  override def adminConfirmSignUp(input: models.AdminConfirmSignUpRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AdminConfirmSignUpRequest](client, awsData, ServiceType, ServiceAndPrefix, "AdminConfirmSignUp", POST, "/", input)
  override def setUserSettings(input: models.SetUserSettingsRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.SetUserSettingsRequest](client, awsData, ServiceType, ServiceAndPrefix, "SetUserSettings", POST, "/", input)
  override def createUserPoolClient(input: models.CreateUserPoolClientRequest): F[models.CreateUserPoolClientResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateUserPoolClientResponse, models.CreateUserPoolClientRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateUserPoolClient", POST, "/", input)
  override def listGroups(input: models.ListGroupsRequest): F[models.ListGroupsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListGroupsResponse, models.ListGroupsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListGroups", POST, "/", input)
  override def signUp(input: models.SignUpRequest): F[models.SignUpResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.SignUpResponse, models.SignUpRequest](client, awsData, ServiceType, ServiceAndPrefix, "SignUp", POST, "/", input)
  override def forgetDevice(input: models.ForgetDeviceRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.ForgetDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "ForgetDevice", POST, "/", input)
}