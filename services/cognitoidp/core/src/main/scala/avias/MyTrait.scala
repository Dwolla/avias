package avias.cognitoidp
trait Amazoncognitoidp[F[_]] {
  def listResourceServers(input: avias.cognitoidp.models.ListResourceServersRequest): F[avias.cognitoidp.models.ListResourceServersResponse]
  def listUserImportJobs(input: avias.cognitoidp.models.ListUserImportJobsRequest): F[avias.cognitoidp.models.ListUserImportJobsResponse]
  def adminUserGlobalSignOut(input: avias.cognitoidp.models.AdminUserGlobalSignOutRequest): F[scala.Unit]
  def adminEnableUser(input: avias.cognitoidp.models.AdminEnableUserRequest): F[scala.Unit]
  def adminGetDevice(input: avias.cognitoidp.models.AdminGetDeviceRequest): F[avias.cognitoidp.models.AdminGetDeviceResponse]
  def changePassword(input: avias.cognitoidp.models.ChangePasswordRequest): F[scala.Unit]
  def getDevice(input: avias.cognitoidp.models.GetDeviceRequest): F[avias.cognitoidp.models.GetDeviceResponse]
  def adminListDevices(input: avias.cognitoidp.models.AdminListDevicesRequest): F[avias.cognitoidp.models.AdminListDevicesResponse]
  def adminSetUserSettings(input: avias.cognitoidp.models.AdminSetUserSettingsRequest): F[scala.Unit]
  def createUserImportJob(input: avias.cognitoidp.models.CreateUserImportJobRequest): F[avias.cognitoidp.models.CreateUserImportJobResponse]
  def getUserAttributeVerificationCode(input: avias.cognitoidp.models.GetUserAttributeVerificationCodeRequest): F[avias.cognitoidp.models.GetUserAttributeVerificationCodeResponse]
  def initiateAuth(input: avias.cognitoidp.models.InitiateAuthRequest): F[avias.cognitoidp.models.InitiateAuthResponse]
  def getUser(input: avias.cognitoidp.models.GetUserRequest): F[avias.cognitoidp.models.GetUserResponse]
  def adminRespondToAuthChallenge(input: avias.cognitoidp.models.AdminRespondToAuthChallengeRequest): F[avias.cognitoidp.models.AdminRespondToAuthChallengeResponse]
  def updateUserPool(input: avias.cognitoidp.models.UpdateUserPoolRequest): F[scala.Unit]
  def listUserPools(input: avias.cognitoidp.models.ListUserPoolsRequest): F[avias.cognitoidp.models.ListUserPoolsResponse]
  def deleteUser(input: avias.cognitoidp.models.DeleteUserRequest): F[scala.Unit]
  def adminUpdateDeviceStatus(input: avias.cognitoidp.models.AdminUpdateDeviceStatusRequest): F[scala.Unit]
  def getUICustomization(input: avias.cognitoidp.models.GetUICustomizationRequest): F[avias.cognitoidp.models.GetUICustomizationResponse]
  def respondToAuthChallenge(input: avias.cognitoidp.models.RespondToAuthChallengeRequest): F[avias.cognitoidp.models.RespondToAuthChallengeResponse]
  def deleteUserPoolDomain(input: avias.cognitoidp.models.DeleteUserPoolDomainRequest): F[scala.Unit]
  def adminGetUser(input: avias.cognitoidp.models.AdminGetUserRequest): F[avias.cognitoidp.models.AdminGetUserResponse]
  def deleteUserPoolClient(input: avias.cognitoidp.models.DeleteUserPoolClientRequest): F[scala.Unit]
  def deleteIdentityProvider(input: avias.cognitoidp.models.DeleteIdentityProviderRequest): F[scala.Unit]
  def deleteResourceServer(input: avias.cognitoidp.models.DeleteResourceServerRequest): F[scala.Unit]
  def createGroup(input: avias.cognitoidp.models.CreateGroupRequest): F[avias.cognitoidp.models.CreateGroupResponse]
  def listUsersInGroup(input: avias.cognitoidp.models.ListUsersInGroupRequest): F[avias.cognitoidp.models.ListUsersInGroupResponse]
  def createUserPool(input: avias.cognitoidp.models.CreateUserPoolRequest): F[avias.cognitoidp.models.CreateUserPoolResponse]
  def adminDisableProviderForUser(input: avias.cognitoidp.models.AdminDisableProviderForUserRequest): F[scala.Unit]
  def updateDeviceStatus(input: avias.cognitoidp.models.UpdateDeviceStatusRequest): F[scala.Unit]
  def adminDisableUser(input: avias.cognitoidp.models.AdminDisableUserRequest): F[scala.Unit]
  def addCustomAttributes(input: avias.cognitoidp.models.AddCustomAttributesRequest): F[scala.Unit]
  def adminLinkProviderForUser(input: avias.cognitoidp.models.AdminLinkProviderForUserRequest): F[scala.Unit]
  def listIdentityProviders(input: avias.cognitoidp.models.ListIdentityProvidersRequest): F[avias.cognitoidp.models.ListIdentityProvidersResponse]
  def getIdentityProviderByIdentifier(input: avias.cognitoidp.models.GetIdentityProviderByIdentifierRequest): F[avias.cognitoidp.models.GetIdentityProviderByIdentifierResponse]
  def getGroup(input: avias.cognitoidp.models.GetGroupRequest): F[avias.cognitoidp.models.GetGroupResponse]
  def updateUserPoolClient(input: avias.cognitoidp.models.UpdateUserPoolClientRequest): F[avias.cognitoidp.models.UpdateUserPoolClientResponse]
  def updateUserAttributes(input: avias.cognitoidp.models.UpdateUserAttributesRequest): F[avias.cognitoidp.models.UpdateUserAttributesResponse]
  def describeUserPoolClient(input: avias.cognitoidp.models.DescribeUserPoolClientRequest): F[avias.cognitoidp.models.DescribeUserPoolClientResponse]
  def deleteUserAttributes(input: avias.cognitoidp.models.DeleteUserAttributesRequest): F[scala.Unit]
  def resendConfirmationCode(input: avias.cognitoidp.models.ResendConfirmationCodeRequest): F[avias.cognitoidp.models.ResendConfirmationCodeResponse]
  def describeUserPoolDomain(input: avias.cognitoidp.models.DescribeUserPoolDomainRequest): F[avias.cognitoidp.models.DescribeUserPoolDomainResponse]
  def createResourceServer(input: avias.cognitoidp.models.CreateResourceServerRequest): F[avias.cognitoidp.models.CreateResourceServerResponse]
  def describeUserImportJob(input: avias.cognitoidp.models.DescribeUserImportJobRequest): F[avias.cognitoidp.models.DescribeUserImportJobResponse]
  def setUICustomization(input: avias.cognitoidp.models.SetUICustomizationRequest): F[avias.cognitoidp.models.SetUICustomizationResponse]
  def describeResourceServer(input: avias.cognitoidp.models.DescribeResourceServerRequest): F[avias.cognitoidp.models.DescribeResourceServerResponse]
  def listUserPoolClients(input: avias.cognitoidp.models.ListUserPoolClientsRequest): F[avias.cognitoidp.models.ListUserPoolClientsResponse]
  def confirmForgotPassword(input: avias.cognitoidp.models.ConfirmForgotPasswordRequest): F[scala.Unit]
  def listUsers(input: avias.cognitoidp.models.ListUsersRequest): F[avias.cognitoidp.models.ListUsersResponse]
  def adminForgetDevice(input: avias.cognitoidp.models.AdminForgetDeviceRequest): F[scala.Unit]
  def updateIdentityProvider(input: avias.cognitoidp.models.UpdateIdentityProviderRequest): F[avias.cognitoidp.models.UpdateIdentityProviderResponse]
  def listDevices(input: avias.cognitoidp.models.ListDevicesRequest): F[avias.cognitoidp.models.ListDevicesResponse]
  def updateResourceServer(input: avias.cognitoidp.models.UpdateResourceServerRequest): F[avias.cognitoidp.models.UpdateResourceServerResponse]
  def adminListGroupsForUser(input: avias.cognitoidp.models.AdminListGroupsForUserRequest): F[avias.cognitoidp.models.AdminListGroupsForUserResponse]
  def startUserImportJob(input: avias.cognitoidp.models.StartUserImportJobRequest): F[avias.cognitoidp.models.StartUserImportJobResponse]
  def createIdentityProvider(input: avias.cognitoidp.models.CreateIdentityProviderRequest): F[avias.cognitoidp.models.CreateIdentityProviderResponse]
  def forgotPassword(input: avias.cognitoidp.models.ForgotPasswordRequest): F[avias.cognitoidp.models.ForgotPasswordResponse]
  def deleteUserPool(input: avias.cognitoidp.models.DeleteUserPoolRequest): F[scala.Unit]
  def adminCreateUser(input: avias.cognitoidp.models.AdminCreateUserRequest): F[avias.cognitoidp.models.AdminCreateUserResponse]
  def deleteGroup(input: avias.cognitoidp.models.DeleteGroupRequest): F[scala.Unit]
  def createUserPoolDomain(input: avias.cognitoidp.models.CreateUserPoolDomainRequest): F[scala.Unit]
  def adminDeleteUserAttributes(input: avias.cognitoidp.models.AdminDeleteUserAttributesRequest): F[scala.Unit]
  def confirmSignUp(input: avias.cognitoidp.models.ConfirmSignUpRequest): F[scala.Unit]
  def globalSignOut(input: avias.cognitoidp.models.GlobalSignOutRequest): F[scala.Unit]
  def adminAddUserToGroup(input: avias.cognitoidp.models.AdminAddUserToGroupRequest): F[scala.Unit]
  def adminRemoveUserFromGroup(input: avias.cognitoidp.models.AdminRemoveUserFromGroupRequest): F[scala.Unit]
  def confirmDevice(input: avias.cognitoidp.models.ConfirmDeviceRequest): F[avias.cognitoidp.models.ConfirmDeviceResponse]
  def getCSVHeader(input: avias.cognitoidp.models.GetCSVHeaderRequest): F[avias.cognitoidp.models.GetCSVHeaderResponse]
  def verifyUserAttribute(input: avias.cognitoidp.models.VerifyUserAttributeRequest): F[scala.Unit]
  def adminDeleteUser(input: avias.cognitoidp.models.AdminDeleteUserRequest): F[scala.Unit]
  def describeIdentityProvider(input: avias.cognitoidp.models.DescribeIdentityProviderRequest): F[avias.cognitoidp.models.DescribeIdentityProviderResponse]
  def updateGroup(input: avias.cognitoidp.models.UpdateGroupRequest): F[avias.cognitoidp.models.UpdateGroupResponse]
  def describeUserPool(input: avias.cognitoidp.models.DescribeUserPoolRequest): F[avias.cognitoidp.models.DescribeUserPoolResponse]
  def adminUpdateUserAttributes(input: avias.cognitoidp.models.AdminUpdateUserAttributesRequest): F[scala.Unit]
  def adminResetUserPassword(input: avias.cognitoidp.models.AdminResetUserPasswordRequest): F[scala.Unit]
  def stopUserImportJob(input: avias.cognitoidp.models.StopUserImportJobRequest): F[avias.cognitoidp.models.StopUserImportJobResponse]
  def adminInitiateAuth(input: avias.cognitoidp.models.AdminInitiateAuthRequest): F[avias.cognitoidp.models.AdminInitiateAuthResponse]
  def adminConfirmSignUp(input: avias.cognitoidp.models.AdminConfirmSignUpRequest): F[scala.Unit]
  def setUserSettings(input: avias.cognitoidp.models.SetUserSettingsRequest): F[scala.Unit]
  def createUserPoolClient(input: avias.cognitoidp.models.CreateUserPoolClientRequest): F[avias.cognitoidp.models.CreateUserPoolClientResponse]
  def listGroups(input: avias.cognitoidp.models.ListGroupsRequest): F[avias.cognitoidp.models.ListGroupsResponse]
  def signUp(input: avias.cognitoidp.models.SignUpRequest): F[avias.cognitoidp.models.SignUpResponse]
  def forgetDevice(input: avias.cognitoidp.models.ForgetDeviceRequest): F[scala.Unit]
}