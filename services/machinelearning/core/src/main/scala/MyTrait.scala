package org.lyranthe.araethura.machinelearning
trait Amazonmachinelearning[F[_]] {
  def describeTags(input: models.DescribeTagsInput): F[models.DescribeTagsOutput]
  def createEvaluation(input: models.CreateEvaluationInput): F[models.CreateEvaluationOutput]
  def createDataSourceFromRedshift(input: models.CreateDataSourceFromRedshiftInput): F[models.CreateDataSourceFromRedshiftOutput]
  def describeBatchPredictions(input: models.DescribeBatchPredictionsInput): F[models.DescribeBatchPredictionsOutput]
  def createDataSourceFromRDS(input: models.CreateDataSourceFromRDSInput): F[models.CreateDataSourceFromRDSOutput]
  def createBatchPrediction(input: models.CreateBatchPredictionInput): F[models.CreateBatchPredictionOutput]
  def addTags(input: models.AddTagsInput): F[models.AddTagsOutput]
  def updateDataSource(input: models.UpdateDataSourceInput): F[models.UpdateDataSourceOutput]
  def deleteMLModel(input: models.DeleteMLModelInput): F[models.DeleteMLModelOutput]
  def deleteEvaluation(input: models.DeleteEvaluationInput): F[models.DeleteEvaluationOutput]
  def describeEvaluations(input: models.DescribeEvaluationsInput): F[models.DescribeEvaluationsOutput]
  def predict(input: models.PredictInput): F[models.PredictOutput]
  def describeDataSources(input: models.DescribeDataSourcesInput): F[models.DescribeDataSourcesOutput]
  def createDataSourceFromS3(input: models.CreateDataSourceFromS3Input): F[models.CreateDataSourceFromS3Output]
  def deleteDataSource(input: models.DeleteDataSourceInput): F[models.DeleteDataSourceOutput]
  def getBatchPrediction(input: models.GetBatchPredictionInput): F[models.GetBatchPredictionOutput]
  def deleteRealtimeEndpoint(input: models.DeleteRealtimeEndpointInput): F[models.DeleteRealtimeEndpointOutput]
  def describeMLModels(input: models.DescribeMLModelsInput): F[models.DescribeMLModelsOutput]
  def deleteBatchPrediction(input: models.DeleteBatchPredictionInput): F[models.DeleteBatchPredictionOutput]
  def createMLModel(input: models.CreateMLModelInput): F[models.CreateMLModelOutput]
  def updateBatchPrediction(input: models.UpdateBatchPredictionInput): F[models.UpdateBatchPredictionOutput]
  def getMLModel(input: models.GetMLModelInput): F[models.GetMLModelOutput]
  def updateMLModel(input: models.UpdateMLModelInput): F[models.UpdateMLModelOutput]
  def getEvaluation(input: models.GetEvaluationInput): F[models.GetEvaluationOutput]
  def createRealtimeEndpoint(input: models.CreateRealtimeEndpointInput): F[models.CreateRealtimeEndpointOutput]
  def updateEvaluation(input: models.UpdateEvaluationInput): F[models.UpdateEvaluationOutput]
  def deleteTags(input: models.DeleteTagsInput): F[models.DeleteTagsOutput]
  def getDataSource(input: models.GetDataSourceInput): F[models.GetDataSourceOutput]
}