package org.lyranthe.araethura.machinelearning.http4s
import org.http4s.Method._
import org.lyranthe.araethura.machinelearning.circe._
import org.lyranthe.araethura.machinelearning.models
class AmazonmachinelearningClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.machinelearning.Amazonmachinelearning[F] {
  private[this] final val ServiceType: String = "machinelearning"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AmazonML_20141212")
  override def describeTags(input: models.DescribeTagsInput): F[models.DescribeTagsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeTagsOutput, models.DescribeTagsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTags", POST, "/", input)
  override def createEvaluation(input: models.CreateEvaluationInput): F[models.CreateEvaluationOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateEvaluationOutput, models.CreateEvaluationInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateEvaluation", POST, "/", input)
  override def createDataSourceFromRedshift(input: models.CreateDataSourceFromRedshiftInput): F[models.CreateDataSourceFromRedshiftOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDataSourceFromRedshiftOutput, models.CreateDataSourceFromRedshiftInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateDataSourceFromRedshift", POST, "/", input)
  override def describeBatchPredictions(input: models.DescribeBatchPredictionsInput): F[models.DescribeBatchPredictionsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeBatchPredictionsOutput, models.DescribeBatchPredictionsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeBatchPredictions", POST, "/", input)
  override def createDataSourceFromRDS(input: models.CreateDataSourceFromRDSInput): F[models.CreateDataSourceFromRDSOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDataSourceFromRDSOutput, models.CreateDataSourceFromRDSInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateDataSourceFromRDS", POST, "/", input)
  override def createBatchPrediction(input: models.CreateBatchPredictionInput): F[models.CreateBatchPredictionOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateBatchPredictionOutput, models.CreateBatchPredictionInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateBatchPrediction", POST, "/", input)
  override def addTags(input: models.AddTagsInput): F[models.AddTagsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AddTagsOutput, models.AddTagsInput](client, awsData, ServiceType, ServiceAndPrefix, "AddTags", POST, "/", input)
  override def updateDataSource(input: models.UpdateDataSourceInput): F[models.UpdateDataSourceOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateDataSourceOutput, models.UpdateDataSourceInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDataSource", POST, "/", input)
  override def deleteMLModel(input: models.DeleteMLModelInput): F[models.DeleteMLModelOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteMLModelOutput, models.DeleteMLModelInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteMLModel", POST, "/", input)
  override def deleteEvaluation(input: models.DeleteEvaluationInput): F[models.DeleteEvaluationOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteEvaluationOutput, models.DeleteEvaluationInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteEvaluation", POST, "/", input)
  override def describeEvaluations(input: models.DescribeEvaluationsInput): F[models.DescribeEvaluationsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeEvaluationsOutput, models.DescribeEvaluationsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEvaluations", POST, "/", input)
  override def predict(input: models.PredictInput): F[models.PredictOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PredictOutput, models.PredictInput](client, awsData, ServiceType, ServiceAndPrefix, "Predict", POST, "/", input)
  override def describeDataSources(input: models.DescribeDataSourcesInput): F[models.DescribeDataSourcesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeDataSourcesOutput, models.DescribeDataSourcesInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDataSources", POST, "/", input)
  override def createDataSourceFromS3(input: models.CreateDataSourceFromS3Input): F[models.CreateDataSourceFromS3Output] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDataSourceFromS3Output, models.CreateDataSourceFromS3Input](client, awsData, ServiceType, ServiceAndPrefix, "CreateDataSourceFromS3", POST, "/", input)
  override def deleteDataSource(input: models.DeleteDataSourceInput): F[models.DeleteDataSourceOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteDataSourceOutput, models.DeleteDataSourceInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDataSource", POST, "/", input)
  override def getBatchPrediction(input: models.GetBatchPredictionInput): F[models.GetBatchPredictionOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetBatchPredictionOutput, models.GetBatchPredictionInput](client, awsData, ServiceType, ServiceAndPrefix, "GetBatchPrediction", POST, "/", input)
  override def deleteRealtimeEndpoint(input: models.DeleteRealtimeEndpointInput): F[models.DeleteRealtimeEndpointOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteRealtimeEndpointOutput, models.DeleteRealtimeEndpointInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteRealtimeEndpoint", POST, "/", input)
  override def describeMLModels(input: models.DescribeMLModelsInput): F[models.DescribeMLModelsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeMLModelsOutput, models.DescribeMLModelsInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMLModels", POST, "/", input)
  override def deleteBatchPrediction(input: models.DeleteBatchPredictionInput): F[models.DeleteBatchPredictionOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteBatchPredictionOutput, models.DeleteBatchPredictionInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteBatchPrediction", POST, "/", input)
  override def createMLModel(input: models.CreateMLModelInput): F[models.CreateMLModelOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateMLModelOutput, models.CreateMLModelInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateMLModel", POST, "/", input)
  override def updateBatchPrediction(input: models.UpdateBatchPredictionInput): F[models.UpdateBatchPredictionOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateBatchPredictionOutput, models.UpdateBatchPredictionInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateBatchPrediction", POST, "/", input)
  override def getMLModel(input: models.GetMLModelInput): F[models.GetMLModelOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetMLModelOutput, models.GetMLModelInput](client, awsData, ServiceType, ServiceAndPrefix, "GetMLModel", POST, "/", input)
  override def updateMLModel(input: models.UpdateMLModelInput): F[models.UpdateMLModelOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateMLModelOutput, models.UpdateMLModelInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateMLModel", POST, "/", input)
  override def getEvaluation(input: models.GetEvaluationInput): F[models.GetEvaluationOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetEvaluationOutput, models.GetEvaluationInput](client, awsData, ServiceType, ServiceAndPrefix, "GetEvaluation", POST, "/", input)
  override def createRealtimeEndpoint(input: models.CreateRealtimeEndpointInput): F[models.CreateRealtimeEndpointOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateRealtimeEndpointOutput, models.CreateRealtimeEndpointInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateRealtimeEndpoint", POST, "/", input)
  override def updateEvaluation(input: models.UpdateEvaluationInput): F[models.UpdateEvaluationOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateEvaluationOutput, models.UpdateEvaluationInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateEvaluation", POST, "/", input)
  override def deleteTags(input: models.DeleteTagsInput): F[models.DeleteTagsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteTagsOutput, models.DeleteTagsInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteTags", POST, "/", input)
  override def getDataSource(input: models.GetDataSourceInput): F[models.GetDataSourceOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDataSourceOutput, models.GetDataSourceInput](client, awsData, ServiceType, ServiceAndPrefix, "GetDataSource", POST, "/", input)
}