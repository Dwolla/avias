package org.lyranthe.araethura.stepfunctions.models
import org.lyranthe.araethura.stepfunctions.models
final case class DeleteActivityInput(activityArn: java.lang.String)
final case class DescribeActivityInput(activityArn: java.lang.String)
final case class InvalidArn(message: scala.Option[java.lang.String] = None)
final case class DeleteStateMachineInput(stateMachineArn: java.lang.String)
final case class SendTaskHeartbeatInput(taskToken: java.lang.String)
final case class ExecutionLimitExceeded(message: scala.Option[java.lang.String] = None)
final case class SendTaskFailureInput(taskToken: java.lang.String, error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class InvalidName(message: scala.Option[java.lang.String] = None)
final case class CreateActivityOutput(activityArn: java.lang.String, creationDate: java.time.Instant)
case object SendTaskSuccessOutput
final case class TaskTimedOut(message: scala.Option[java.lang.String] = None)
final case class StopExecutionInput(executionArn: java.lang.String, error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class LambdaFunctionTimedOutEventDetails(error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class StateMachineLimitExceeded(message: scala.Option[java.lang.String] = None)
final case class ExecutionStartedEventDetails(input: scala.Option[java.lang.String] = None, roleArn: scala.Option[java.lang.String] = None)
final case class ExecutionFailedEventDetails(error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class ExecutionTimedOutEventDetails(error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class StartExecutionOutput(executionArn: java.lang.String, startDate: java.time.Instant)
final case class LambdaFunctionScheduleFailedEventDetails(error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class DescribeStateMachineOutput(stateMachineArn: java.lang.String, roleArn: java.lang.String, creationDate: java.time.Instant, name: java.lang.String, definition: java.lang.String, status: scala.Option[java.lang.String] = None)
final case class InvalidToken(message: scala.Option[java.lang.String] = None)
final case class DescribeExecutionOutput(executionArn: java.lang.String, stateMachineArn: java.lang.String, startDate: java.time.Instant, status: java.lang.String, input: java.lang.String, stopDate: scala.Option[java.time.Instant] = None, name: scala.Option[java.lang.String] = None, output: scala.Option[java.lang.String] = None)
final case class ActivityListItem(activityArn: java.lang.String, name: java.lang.String, creationDate: java.time.Instant)
final case class DescribeStateMachineForExecutionInput(executionArn: java.lang.String)
final case class LambdaFunctionStartFailedEventDetails(error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class GetExecutionHistoryOutput(events: scala.List[models.HistoryEvent], nextToken: scala.Option[java.lang.String] = None)
final case class InvalidDefinition(message: scala.Option[java.lang.String] = None)
final case class ExecutionAbortedEventDetails(error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class TaskDoesNotExist(message: scala.Option[java.lang.String] = None)
final case class StateMachineDoesNotExist(message: scala.Option[java.lang.String] = None)
final case class StateMachineDeleting(message: scala.Option[java.lang.String] = None)
final case class UpdateStateMachineOutput(updateDate: java.time.Instant)
final case class ExecutionDoesNotExist(message: scala.Option[java.lang.String] = None)
final case class InvalidExecutionInput(message: scala.Option[java.lang.String] = None)
final case class ActivityScheduledEventDetails(resource: java.lang.String, input: scala.Option[java.lang.String] = None, timeoutInSeconds: scala.Option[scala.Long] = None, heartbeatInSeconds: scala.Option[scala.Long] = None)
final case class CreateStateMachineOutput(stateMachineArn: java.lang.String, creationDate: java.time.Instant)
final case class ListActivitiesOutput(activities: scala.List[models.ActivityListItem], nextToken: scala.Option[java.lang.String] = None)
final case class ActivityWorkerLimitExceeded(message: scala.Option[java.lang.String] = None)
final case class UpdateStateMachineInput(stateMachineArn: java.lang.String, roleArn: scala.Option[java.lang.String] = None, definition: scala.Option[java.lang.String] = None)
final case class ActivityFailedEventDetails(error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class ListStateMachinesInput(maxResults: scala.Option[scala.Int] = None, nextToken: scala.Option[java.lang.String] = None)
final case class CreateStateMachineInput(name: java.lang.String, definition: java.lang.String, roleArn: java.lang.String)
final case class ExecutionAlreadyExists(message: scala.Option[java.lang.String] = None)
final case class MissingRequiredParameter(message: scala.Option[java.lang.String] = None)
case object SendTaskFailureOutput
final case class LambdaFunctionFailedEventDetails(error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class ActivityScheduleFailedEventDetails(error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class StartExecutionInput(stateMachineArn: java.lang.String, name: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None)
case object DeleteActivityOutput
final case class GetActivityTaskInput(activityArn: java.lang.String, workerName: scala.Option[java.lang.String] = None)
final case class ActivityLimitExceeded(message: scala.Option[java.lang.String] = None)
final case class DescribeActivityOutput(activityArn: java.lang.String, name: java.lang.String, creationDate: java.time.Instant)
final case class StopExecutionOutput(stopDate: java.time.Instant)
final case class InvalidOutput(message: scala.Option[java.lang.String] = None)
final case class ActivitySucceededEventDetails(output: scala.Option[java.lang.String] = None)
final case class ActivityTimedOutEventDetails(error: scala.Option[java.lang.String] = None, cause: scala.Option[java.lang.String] = None)
final case class StateMachineAlreadyExists(message: scala.Option[java.lang.String] = None)
final case class CreateActivityInput(name: java.lang.String)
final case class SendTaskSuccessInput(taskToken: java.lang.String, output: java.lang.String)
final case class ActivityDoesNotExist(message: scala.Option[java.lang.String] = None)
final case class ListExecutionsOutput(executions: scala.List[models.ExecutionListItem], nextToken: scala.Option[java.lang.String] = None)
final case class StateExitedEventDetails(name: java.lang.String, output: scala.Option[java.lang.String] = None)
final case class DescribeStateMachineForExecutionOutput(stateMachineArn: java.lang.String, roleArn: java.lang.String, name: java.lang.String, definition: java.lang.String, updateDate: java.time.Instant)
case object DeleteStateMachineOutput
final case class ListExecutionsInput(stateMachineArn: java.lang.String, statusFilter: scala.Option[java.lang.String] = None, maxResults: scala.Option[scala.Int] = None, nextToken: scala.Option[java.lang.String] = None)
final case class ListActivitiesInput(maxResults: scala.Option[scala.Int] = None, nextToken: scala.Option[java.lang.String] = None)
final case class GetActivityTaskOutput(taskToken: scala.Option[java.lang.String] = None, input: scala.Option[java.lang.String] = None)
final case class LambdaFunctionScheduledEventDetails(resource: java.lang.String, input: scala.Option[java.lang.String] = None, timeoutInSeconds: scala.Option[scala.Long] = None)
final case class HistoryEvent(timestamp: java.time.Instant, id: scala.Long, `type`: java.lang.String, lambdaFunctionTimedOutEventDetails: scala.Option[models.LambdaFunctionTimedOutEventDetails] = None, executionStartedEventDetails: scala.Option[models.ExecutionStartedEventDetails] = None, executionFailedEventDetails: scala.Option[models.ExecutionFailedEventDetails] = None, executionTimedOutEventDetails: scala.Option[models.ExecutionTimedOutEventDetails] = None, lambdaFunctionScheduleFailedEventDetails: scala.Option[models.LambdaFunctionScheduleFailedEventDetails] = None, lambdaFunctionStartFailedEventDetails: scala.Option[models.LambdaFunctionStartFailedEventDetails] = None, executionAbortedEventDetails: scala.Option[models.ExecutionAbortedEventDetails] = None, previousEventId: scala.Option[scala.Long] = None, activityScheduledEventDetails: scala.Option[models.ActivityScheduledEventDetails] = None, activityFailedEventDetails: scala.Option[models.ActivityFailedEventDetails] = None, lambdaFunctionFailedEventDetails: scala.Option[models.LambdaFunctionFailedEventDetails] = None, activityScheduleFailedEventDetails: scala.Option[models.ActivityScheduleFailedEventDetails] = None, activitySucceededEventDetails: scala.Option[models.ActivitySucceededEventDetails] = None, activityTimedOutEventDetails: scala.Option[models.ActivityTimedOutEventDetails] = None, stateExitedEventDetails: scala.Option[models.StateExitedEventDetails] = None, lambdaFunctionScheduledEventDetails: scala.Option[models.LambdaFunctionScheduledEventDetails] = None, executionSucceededEventDetails: scala.Option[models.ExecutionSucceededEventDetails] = None, lambdaFunctionSucceededEventDetails: scala.Option[models.LambdaFunctionSucceededEventDetails] = None, stateEnteredEventDetails: scala.Option[models.StateEnteredEventDetails] = None, activityStartedEventDetails: scala.Option[models.ActivityStartedEventDetails] = None)
final case class DescribeStateMachineInput(stateMachineArn: java.lang.String)
final case class DescribeExecutionInput(executionArn: java.lang.String)
final case class ExecutionSucceededEventDetails(output: scala.Option[java.lang.String] = None)
case object SendTaskHeartbeatOutput
final case class LambdaFunctionSucceededEventDetails(output: scala.Option[java.lang.String] = None)
final case class StateEnteredEventDetails(name: java.lang.String, input: scala.Option[java.lang.String] = None)
final case class StateMachineListItem(stateMachineArn: java.lang.String, name: java.lang.String, creationDate: java.time.Instant)
final case class ListStateMachinesOutput(stateMachines: scala.List[models.StateMachineListItem], nextToken: scala.Option[java.lang.String] = None)
final case class ActivityStartedEventDetails(workerName: scala.Option[java.lang.String] = None)
final case class GetExecutionHistoryInput(executionArn: java.lang.String, maxResults: scala.Option[scala.Int] = None, reverseOrder: scala.Option[scala.Boolean] = None, nextToken: scala.Option[java.lang.String] = None)
final case class ExecutionListItem(executionArn: java.lang.String, stateMachineArn: java.lang.String, name: java.lang.String, status: java.lang.String, startDate: java.time.Instant, stopDate: scala.Option[java.time.Instant] = None)