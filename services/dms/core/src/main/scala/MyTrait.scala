package org.lyranthe.araethura.dms
trait Amazondms[F[_]] {
  def describeTableStatistics(input: models.DescribeTableStatisticsMessage): F[models.DescribeTableStatisticsResponse]
  def modifyEventSubscription(input: models.ModifyEventSubscriptionMessage): F[models.ModifyEventSubscriptionResponse]
  def describeReplicationInstances(input: models.DescribeReplicationInstancesMessage): F[models.DescribeReplicationInstancesResponse]
  def describeCertificates(input: models.DescribeCertificatesMessage): F[models.DescribeCertificatesResponse]
  def deleteCertificate(input: models.DeleteCertificateMessage): F[models.DeleteCertificateResponse]
  def stopReplicationTask(input: models.StopReplicationTaskMessage): F[models.StopReplicationTaskResponse]
  def describeEndpointTypes(input: models.DescribeEndpointTypesMessage): F[models.DescribeEndpointTypesResponse]
  def startReplicationTaskAssessment(input: models.StartReplicationTaskAssessmentMessage): F[models.StartReplicationTaskAssessmentResponse]
  def modifyReplicationTask(input: models.ModifyReplicationTaskMessage): F[models.ModifyReplicationTaskResponse]
  def deleteReplicationTask(input: models.DeleteReplicationTaskMessage): F[models.DeleteReplicationTaskResponse]
  def startReplicationTask(input: models.StartReplicationTaskMessage): F[models.StartReplicationTaskResponse]
  def createReplicationInstance(input: models.CreateReplicationInstanceMessage): F[models.CreateReplicationInstanceResponse]
  def describeEventCategories(input: models.DescribeEventCategoriesMessage): F[models.DescribeEventCategoriesResponse]
  def deleteEventSubscription(input: models.DeleteEventSubscriptionMessage): F[models.DeleteEventSubscriptionResponse]
  def testConnection(input: models.TestConnectionMessage): F[models.TestConnectionResponse]
  def describeConnections(input: models.DescribeConnectionsMessage): F[models.DescribeConnectionsResponse]
  def listTagsForResource(input: models.ListTagsForResourceMessage): F[models.ListTagsForResourceResponse]
  def createEventSubscription(input: models.CreateEventSubscriptionMessage): F[models.CreateEventSubscriptionResponse]
  def describeOrderableReplicationInstances(input: models.DescribeOrderableReplicationInstancesMessage): F[models.DescribeOrderableReplicationInstancesResponse]
  def describeReplicationTasks(input: models.DescribeReplicationTasksMessage): F[models.DescribeReplicationTasksResponse]
  def modifyReplicationSubnetGroup(input: models.ModifyReplicationSubnetGroupMessage): F[models.ModifyReplicationSubnetGroupResponse]
  def describeReplicationTaskAssessmentResults(input: models.DescribeReplicationTaskAssessmentResultsMessage): F[models.DescribeReplicationTaskAssessmentResultsResponse]
  def describeReplicationSubnetGroups(input: models.DescribeReplicationSubnetGroupsMessage): F[models.DescribeReplicationSubnetGroupsResponse]
  def deleteReplicationInstance(input: models.DeleteReplicationInstanceMessage): F[models.DeleteReplicationInstanceResponse]
  def createReplicationSubnetGroup(input: models.CreateReplicationSubnetGroupMessage): F[models.CreateReplicationSubnetGroupResponse]
  def createReplicationTask(input: models.CreateReplicationTaskMessage): F[models.CreateReplicationTaskResponse]
  def addTagsToResource(input: models.AddTagsToResourceMessage): F[scala.Unit]
  def describeEndpoints(input: models.DescribeEndpointsMessage): F[models.DescribeEndpointsResponse]
  def removeTagsFromResource(input: models.RemoveTagsFromResourceMessage): F[scala.Unit]
  def importCertificate(input: models.ImportCertificateMessage): F[models.ImportCertificateResponse]
  def modifyEndpoint(input: models.ModifyEndpointMessage): F[models.ModifyEndpointResponse]
  def describeEventSubscriptions(input: models.DescribeEventSubscriptionsMessage): F[models.DescribeEventSubscriptionsResponse]
  def deleteReplicationSubnetGroup(input: models.DeleteReplicationSubnetGroupMessage): F[scala.Unit]
  def describeEvents(input: models.DescribeEventsMessage): F[models.DescribeEventsResponse]
  def describeRefreshSchemasStatus(input: models.DescribeRefreshSchemasStatusMessage): F[models.DescribeRefreshSchemasStatusResponse]
  def describeAccountAttributes: F[models.DescribeAccountAttributesResponse]
  def refreshSchemas(input: models.RefreshSchemasMessage): F[models.RefreshSchemasResponse]
  def reloadTables(input: models.ReloadTablesMessage): F[models.ReloadTablesResponse]
  def deleteEndpoint(input: models.DeleteEndpointMessage): F[models.DeleteEndpointResponse]
  def createEndpoint(input: models.CreateEndpointMessage): F[models.CreateEndpointResponse]
  def modifyReplicationInstance(input: models.ModifyReplicationInstanceMessage): F[models.ModifyReplicationInstanceResponse]
  def describeSchemas(input: models.DescribeSchemasMessage): F[models.DescribeSchemasResponse]
}