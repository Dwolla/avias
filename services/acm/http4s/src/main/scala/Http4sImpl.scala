package org.lyranthe.araethura.acm.http4s
import org.http4s.Method._
import org.lyranthe.araethura.acm.circe._
import org.lyranthe.araethura.acm.models
class AmazonacmClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.acm.Amazonacm[F] {
  private[this] final val ServiceType: String = "acm"
  private[this] final val ServiceAndPrefix: Option[String] = Some("CertificateManager")
  override def deleteCertificate(input: models.DeleteCertificateRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.DeleteCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteCertificate", POST, "/", input)
  override def addTagsToCertificate(input: models.AddTagsToCertificateRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.AddTagsToCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "AddTagsToCertificate", POST, "/", input)
  override def listTagsForCertificate(input: models.ListTagsForCertificateRequest): F[models.ListTagsForCertificateResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTagsForCertificateResponse, models.ListTagsForCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForCertificate", POST, "/", input)
  override def removeTagsFromCertificate(input: models.RemoveTagsFromCertificateRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.RemoveTagsFromCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTagsFromCertificate", POST, "/", input)
  override def importCertificate(input: models.ImportCertificateRequest): F[models.ImportCertificateResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ImportCertificateResponse, models.ImportCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "ImportCertificate", POST, "/", input)
  override def listCertificates(input: models.ListCertificatesRequest): F[models.ListCertificatesResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListCertificatesResponse, models.ListCertificatesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListCertificates", POST, "/", input)
  override def describeCertificate(input: models.DescribeCertificateRequest): F[models.DescribeCertificateResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeCertificateResponse, models.DescribeCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeCertificate", POST, "/", input)
  override def getCertificate(input: models.GetCertificateRequest): F[models.GetCertificateResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetCertificateResponse, models.GetCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetCertificate", POST, "/", input)
  override def requestCertificate(input: models.RequestCertificateRequest): F[models.RequestCertificateResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RequestCertificateResponse, models.RequestCertificateRequest](client, awsData, ServiceType, ServiceAndPrefix, "RequestCertificate", POST, "/", input)
  override def resendValidationEmail(input: models.ResendValidationEmailRequest): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.ResendValidationEmailRequest](client, awsData, ServiceType, ServiceAndPrefix, "ResendValidationEmail", POST, "/", input)
}