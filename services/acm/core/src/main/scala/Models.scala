package org.lyranthe.araethura.acm.models
final case class DescribeCertificateResponse(certificate: scala.Option[org.lyranthe.araethura.acm.models.CertificateDetail] = scala.None)
final case class RemoveTagsFromCertificateRequest(certificateArn: java.lang.String, tags: scala.List[org.lyranthe.araethura.acm.models.Tag])
final case class ListTagsForCertificateResponse(tags: scala.Option[scala.List[org.lyranthe.araethura.acm.models.Tag]] = scala.None)
final case class InvalidTagException(message: scala.Option[java.lang.String] = scala.None)
final case class DescribeCertificateRequest(certificateArn: java.lang.String)
final case class ResendValidationEmailRequest(certificateArn: java.lang.String, domain: java.lang.String, validationDomain: java.lang.String)
final case class ListCertificatesResponse(nextToken: scala.Option[java.lang.String] = scala.None, certificateSummaryList: scala.Option[scala.List[org.lyranthe.araethura.acm.models.CertificateSummary]] = scala.None)
final case class RequestCertificateRequest(domainName: java.lang.String, subjectAlternativeNames: scala.Option[scala.List[java.lang.String]] = scala.None, idempotencyToken: scala.Option[java.lang.String] = scala.None, domainValidationOptions: scala.Option[scala.List[org.lyranthe.araethura.acm.models.DomainValidationOption]] = scala.None)
final case class ListCertificatesRequest(certificateStatuses: scala.Option[scala.List[java.lang.String]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None, maxItems: scala.Option[scala.Int] = scala.None)
final case class DomainValidationOption(domainName: java.lang.String, validationDomain: java.lang.String)
final case class AddTagsToCertificateRequest(certificateArn: java.lang.String, tags: scala.List[org.lyranthe.araethura.acm.models.Tag])
final case class Tag(key: java.lang.String, value: scala.Option[java.lang.String] = scala.None)
final case class ResourceNotFoundException(message: scala.Option[java.lang.String] = scala.None)
final case class LimitExceededException(message: scala.Option[java.lang.String] = scala.None)
final case class GetCertificateResponse(certificate: scala.Option[java.lang.String] = scala.None, certificateChain: scala.Option[java.lang.String] = scala.None)
final case class InvalidArnException(message: scala.Option[java.lang.String] = scala.None)
final case class TooManyTagsException(message: scala.Option[java.lang.String] = scala.None)
final case class RequestInProgressException(message: scala.Option[java.lang.String] = scala.None)
final case class GetCertificateRequest(certificateArn: java.lang.String)
final case class InvalidStateException(message: scala.Option[java.lang.String] = scala.None)
final case class InvalidDomainValidationOptionsException(message: scala.Option[java.lang.String] = scala.None)
final case class RequestCertificateResponse(certificateArn: scala.Option[java.lang.String] = scala.None)
final case class ImportCertificateRequest(certificate: scala.Array[scala.Byte], privateKey: scala.Array[scala.Byte], certificateArn: scala.Option[java.lang.String] = scala.None, certificateChain: scala.Option[scala.Array[scala.Byte]] = scala.None)
final case class CertificateDetail(`type`: scala.Option[java.lang.String] = scala.None, keyAlgorithm: scala.Option[java.lang.String] = scala.None, revocationReason: scala.Option[java.lang.String] = scala.None, certificateArn: scala.Option[java.lang.String] = scala.None, serial: scala.Option[java.lang.String] = scala.None, subject: scala.Option[java.lang.String] = scala.None, issuer: scala.Option[java.lang.String] = scala.None, signatureAlgorithm: scala.Option[java.lang.String] = scala.None, domainValidationOptions: scala.Option[scala.List[org.lyranthe.araethura.acm.models.DomainValidation]] = scala.None, domainName: scala.Option[java.lang.String] = scala.None, inUseBy: scala.Option[scala.List[java.lang.String]] = scala.None, subjectAlternativeNames: scala.Option[scala.List[java.lang.String]] = scala.None, failureReason: scala.Option[java.lang.String] = scala.None, status: scala.Option[java.lang.String] = scala.None, notBefore: scala.Option[java.time.Instant] = scala.None, revokedAt: scala.Option[java.time.Instant] = scala.None, issuedAt: scala.Option[java.time.Instant] = scala.None, createdAt: scala.Option[java.time.Instant] = scala.None, importedAt: scala.Option[java.time.Instant] = scala.None, notAfter: scala.Option[java.time.Instant] = scala.None, renewalSummary: scala.Option[org.lyranthe.araethura.acm.models.RenewalSummary] = scala.None)
final case class DeleteCertificateRequest(certificateArn: java.lang.String)
final case class ResourceInUseException(message: scala.Option[java.lang.String] = scala.None)
final case class ListTagsForCertificateRequest(certificateArn: java.lang.String)
final case class DomainValidation(domainName: java.lang.String, validationDomain: scala.Option[java.lang.String] = scala.None, validationEmails: scala.Option[scala.List[java.lang.String]] = scala.None, validationStatus: scala.Option[java.lang.String] = scala.None)
final case class ImportCertificateResponse(certificateArn: scala.Option[java.lang.String] = scala.None)
final case class CertificateSummary(certificateArn: scala.Option[java.lang.String] = scala.None, domainName: scala.Option[java.lang.String] = scala.None)
final case class RenewalSummary(renewalStatus: java.lang.String, domainValidationOptions: scala.List[org.lyranthe.araethura.acm.models.DomainValidation])