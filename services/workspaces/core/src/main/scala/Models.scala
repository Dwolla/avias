package org.lyranthe.araethura.workspaces.models
import org.lyranthe.araethura.workspaces.models
case object DeleteTagsResult
final case class RebootWorkspacesResult(failedRequests: scala.Option[scala.List[models.FailedWorkspaceChangeRequest]] = None)
final case class DescribeWorkspacesRequest(userName: scala.Option[java.lang.String] = None, nextToken: scala.Option[java.lang.String] = None, limit: scala.Option[scala.Int] = None, workspaceIds: scala.Option[scala.List[java.lang.String]] = None, bundleId: scala.Option[java.lang.String] = None, directoryId: scala.Option[java.lang.String] = None)
final case class WorkspaceDirectory(customerUserName: scala.Option[java.lang.String] = None, directoryName: scala.Option[java.lang.String] = None, dnsIpAddresses: scala.Option[scala.List[java.lang.String]] = None, subnetIds: scala.Option[scala.List[java.lang.String]] = None, state: scala.Option[java.lang.String] = None, workspaceCreationProperties: scala.Option[models.DefaultWorkspaceCreationProperties] = None, workspaceSecurityGroupId: scala.Option[java.lang.String] = None, alias: scala.Option[java.lang.String] = None, iamRoleId: scala.Option[java.lang.String] = None, registrationCode: scala.Option[java.lang.String] = None, directoryType: scala.Option[java.lang.String] = None, directoryId: scala.Option[java.lang.String] = None)
final case class TerminateWorkspacesRequest(terminateWorkspaceRequests: scala.List[models.TerminateRequest])
final case class WorkspaceBundle(name: scala.Option[java.lang.String] = None, computeType: scala.Option[models.ComputeType] = None, userStorage: scala.Option[models.UserStorage] = None, owner: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None, bundleId: scala.Option[java.lang.String] = None)
final case class RebootWorkspacesRequest(rebootWorkspaceRequests: scala.List[models.RebootRequest])
final case class ModifyWorkspacePropertiesRequest(workspaceId: java.lang.String, workspaceProperties: models.WorkspaceProperties)
final case class Workspace(computerName: scala.Option[java.lang.String] = None, workspaceId: scala.Option[java.lang.String] = None, userName: scala.Option[java.lang.String] = None, subnetId: scala.Option[java.lang.String] = None, volumeEncryptionKey: scala.Option[java.lang.String] = None, userVolumeEncryptionEnabled: scala.Option[scala.Boolean] = None, rootVolumeEncryptionEnabled: scala.Option[scala.Boolean] = None, state: scala.Option[java.lang.String] = None, errorMessage: scala.Option[java.lang.String] = None, errorCode: scala.Option[java.lang.String] = None, bundleId: scala.Option[java.lang.String] = None, workspaceProperties: scala.Option[models.WorkspaceProperties] = None, directoryId: scala.Option[java.lang.String] = None, ipAddress: scala.Option[java.lang.String] = None)
final case class FailedCreateWorkspaceRequest(workspaceRequest: scala.Option[models.WorkspaceRequest] = None, errorCode: scala.Option[java.lang.String] = None, errorMessage: scala.Option[java.lang.String] = None)
final case class DescribeTagsResult(tagList: scala.Option[scala.List[models.Tag]] = None)
final case class StartWorkspacesRequest(startWorkspaceRequests: scala.List[models.StartRequest])
final case class ComputeType(name: scala.Option[java.lang.String] = None)
final case class UserStorage(capacity: scala.Option[java.lang.String] = None)
final case class CreateWorkspacesResult(failedRequests: scala.Option[scala.List[models.FailedCreateWorkspaceRequest]] = None, pendingRequests: scala.Option[scala.List[models.Workspace]] = None)
final case class UnsupportedWorkspaceConfigurationException(message: scala.Option[java.lang.String] = None)
final case class AccessDeniedException(message: scala.Option[java.lang.String] = None)
final case class DescribeWorkspaceBundlesRequest(bundleIds: scala.Option[scala.List[java.lang.String]] = None, owner: scala.Option[java.lang.String] = None, nextToken: scala.Option[java.lang.String] = None)
final case class DescribeWorkspacesConnectionStatusResult(workspacesConnectionStatus: scala.Option[scala.List[models.WorkspaceConnectionStatus]] = None, nextToken: scala.Option[java.lang.String] = None)
final case class RebootRequest(workspaceId: java.lang.String)
final case class DescribeTagsRequest(resourceId: java.lang.String)
final case class Tag(key: java.lang.String, value: scala.Option[java.lang.String] = None)
final case class TerminateRequest(workspaceId: java.lang.String)
final case class RebuildWorkspacesRequest(rebuildWorkspaceRequests: scala.List[models.RebuildRequest])
final case class CreateTagsRequest(resourceId: java.lang.String, tags: scala.List[models.Tag])
final case class DescribeWorkspaceDirectoriesResult(directories: scala.Option[scala.List[models.WorkspaceDirectory]] = None, nextToken: scala.Option[java.lang.String] = None)
final case class ResourceNotFoundException(message: scala.Option[java.lang.String] = None, resourceId: scala.Option[java.lang.String] = None)
final case class StartWorkspacesResult(failedRequests: scala.Option[scala.List[models.FailedWorkspaceChangeRequest]] = None)
case object ModifyWorkspacePropertiesResult
final case class DescribeWorkspacesResult(workspaces: scala.Option[scala.List[models.Workspace]] = None, nextToken: scala.Option[java.lang.String] = None)
final case class InvalidResourceStateException(message: scala.Option[java.lang.String] = None)
final case class RebuildWorkspacesResult(failedRequests: scala.Option[scala.List[models.FailedWorkspaceChangeRequest]] = None)
final case class DefaultWorkspaceCreationProperties(enableWorkDocs: scala.Option[scala.Boolean] = None, enableInternetAccess: scala.Option[scala.Boolean] = None, userEnabledAsLocalAdministrator: scala.Option[scala.Boolean] = None, defaultOu: scala.Option[java.lang.String] = None, customSecurityGroupId: scala.Option[java.lang.String] = None)
final case class FailedWorkspaceChangeRequest(workspaceId: scala.Option[java.lang.String] = None, errorCode: scala.Option[java.lang.String] = None, errorMessage: scala.Option[java.lang.String] = None)
final case class WorkspaceConnectionStatus(workspaceId: scala.Option[java.lang.String] = None, connectionState: scala.Option[java.lang.String] = None, connectionStateCheckTimestamp: scala.Option[java.time.Instant] = None, lastKnownUserConnectionTimestamp: scala.Option[java.time.Instant] = None)
final case class ResourceUnavailableException(message: scala.Option[java.lang.String] = None, resourceId: scala.Option[java.lang.String] = None)
final case class StopRequest(workspaceId: scala.Option[java.lang.String] = None)
final case class OperationInProgressException(message: scala.Option[java.lang.String] = None)
final case class StopWorkspacesResult(failedRequests: scala.Option[scala.List[models.FailedWorkspaceChangeRequest]] = None)
final case class TerminateWorkspacesResult(failedRequests: scala.Option[scala.List[models.FailedWorkspaceChangeRequest]] = None)
final case class StopWorkspacesRequest(stopWorkspaceRequests: scala.List[models.StopRequest])
final case class RebuildRequest(workspaceId: java.lang.String)
final case class DescribeWorkspaceBundlesResult(bundles: scala.Option[scala.List[models.WorkspaceBundle]] = None, nextToken: scala.Option[java.lang.String] = None)
final case class CreateWorkspacesRequest(workspaces: scala.List[models.WorkspaceRequest])
final case class ResourceLimitExceededException(message: scala.Option[java.lang.String] = None)
final case class InvalidParameterValuesException(message: scala.Option[java.lang.String] = None)
final case class DescribeWorkspaceDirectoriesRequest(directoryIds: scala.Option[scala.List[java.lang.String]] = None, nextToken: scala.Option[java.lang.String] = None)
case object CreateTagsResult
final case class WorkspaceProperties(runningMode: scala.Option[java.lang.String] = None, runningModeAutoStopTimeoutInMinutes: scala.Option[scala.Int] = None)
final case class WorkspaceRequest(userName: java.lang.String, bundleId: java.lang.String, directoryId: java.lang.String, volumeEncryptionKey: scala.Option[java.lang.String] = None, tags: scala.Option[scala.List[models.Tag]] = None, userVolumeEncryptionEnabled: scala.Option[scala.Boolean] = None, rootVolumeEncryptionEnabled: scala.Option[scala.Boolean] = None, workspaceProperties: scala.Option[models.WorkspaceProperties] = None)
final case class DeleteTagsRequest(resourceId: java.lang.String, tagKeys: scala.List[java.lang.String])
final case class StartRequest(workspaceId: scala.Option[java.lang.String] = None)
final case class DescribeWorkspacesConnectionStatusRequest(workspaceIds: scala.Option[scala.List[java.lang.String]] = None, nextToken: scala.Option[java.lang.String] = None)