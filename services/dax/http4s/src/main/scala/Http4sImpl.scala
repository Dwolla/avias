package org.lyranthe.araethura.dax.http4s
import org.http4s.Method._
import org.lyranthe.araethura.dax.circe._
import org.lyranthe.araethura.dax.models
class AmazondaxClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.dax.Amazondax[F] {
  private[this] final val ServiceType: String = "dax"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AmazonDAXV3")
  override def describeClusters(input: models.DescribeClustersRequest): F[models.DescribeClustersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeClustersResponse, models.DescribeClustersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeClusters", POST, "/", input)
  override def describeEvents(input: models.DescribeEventsRequest): F[models.DescribeEventsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeEventsResponse, models.DescribeEventsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEvents", POST, "/", input)
  override def rebootNode(input: models.RebootNodeRequest): F[models.RebootNodeResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RebootNodeResponse, models.RebootNodeRequest](client, awsData, ServiceType, ServiceAndPrefix, "RebootNode", POST, "/", input)
  override def tagResource(input: models.TagResourceRequest): F[models.TagResourceResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.TagResourceResponse, models.TagResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "TagResource", POST, "/", input)
  override def createSubnetGroup(input: models.CreateSubnetGroupRequest): F[models.CreateSubnetGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateSubnetGroupResponse, models.CreateSubnetGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateSubnetGroup", POST, "/", input)
  override def describeParameterGroups(input: models.DescribeParameterGroupsRequest): F[models.DescribeParameterGroupsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeParameterGroupsResponse, models.DescribeParameterGroupsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeParameterGroups", POST, "/", input)
  override def untagResource(input: models.UntagResourceRequest): F[models.UntagResourceResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UntagResourceResponse, models.UntagResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "UntagResource", POST, "/", input)
  override def deleteCluster(input: models.DeleteClusterRequest): F[models.DeleteClusterResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteClusterResponse, models.DeleteClusterRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteCluster", POST, "/", input)
  override def deleteParameterGroup(input: models.DeleteParameterGroupRequest): F[models.DeleteParameterGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteParameterGroupResponse, models.DeleteParameterGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteParameterGroup", POST, "/", input)
  override def increaseReplicationFactor(input: models.IncreaseReplicationFactorRequest): F[models.IncreaseReplicationFactorResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.IncreaseReplicationFactorResponse, models.IncreaseReplicationFactorRequest](client, awsData, ServiceType, ServiceAndPrefix, "IncreaseReplicationFactor", POST, "/", input)
  override def updateCluster(input: models.UpdateClusterRequest): F[models.UpdateClusterResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateClusterResponse, models.UpdateClusterRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateCluster", POST, "/", input)
  override def listTags(input: models.ListTagsRequest): F[models.ListTagsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTagsResponse, models.ListTagsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTags", POST, "/", input)
  override def describeParameters(input: models.DescribeParametersRequest): F[models.DescribeParametersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeParametersResponse, models.DescribeParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeParameters", POST, "/", input)
  override def deleteSubnetGroup(input: models.DeleteSubnetGroupRequest): F[models.DeleteSubnetGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteSubnetGroupResponse, models.DeleteSubnetGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteSubnetGroup", POST, "/", input)
  override def describeSubnetGroups(input: models.DescribeSubnetGroupsRequest): F[models.DescribeSubnetGroupsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeSubnetGroupsResponse, models.DescribeSubnetGroupsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeSubnetGroups", POST, "/", input)
  override def updateParameterGroup(input: models.UpdateParameterGroupRequest): F[models.UpdateParameterGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateParameterGroupResponse, models.UpdateParameterGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateParameterGroup", POST, "/", input)
  override def describeDefaultParameters(input: models.DescribeDefaultParametersRequest): F[models.DescribeDefaultParametersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeDefaultParametersResponse, models.DescribeDefaultParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDefaultParameters", POST, "/", input)
  override def createParameterGroup(input: models.CreateParameterGroupRequest): F[models.CreateParameterGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateParameterGroupResponse, models.CreateParameterGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateParameterGroup", POST, "/", input)
  override def createCluster(input: models.CreateClusterRequest): F[models.CreateClusterResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateClusterResponse, models.CreateClusterRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateCluster", POST, "/", input)
  override def decreaseReplicationFactor(input: models.DecreaseReplicationFactorRequest): F[models.DecreaseReplicationFactorResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DecreaseReplicationFactorResponse, models.DecreaseReplicationFactorRequest](client, awsData, ServiceType, ServiceAndPrefix, "DecreaseReplicationFactor", POST, "/", input)
  override def updateSubnetGroup(input: models.UpdateSubnetGroupRequest): F[models.UpdateSubnetGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateSubnetGroupResponse, models.UpdateSubnetGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateSubnetGroup", POST, "/", input)
}