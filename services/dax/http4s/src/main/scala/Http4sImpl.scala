package org.lyranthe.araethura.dax.http4s
import org.http4s.Method._
import org.lyranthe.araethura.dax.circe._
import org.lyranthe.araethura.dax.models
class AmazondaxClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.dax.Amazondax[F] {
  private[this] final val ServiceType: String = "dax"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AmazonDAXV3")
  override def describeClusters(input: org.lyranthe.araethura.dax.models.DescribeClustersRequest): F[org.lyranthe.araethura.dax.models.DescribeClustersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.DescribeClustersResponse, org.lyranthe.araethura.dax.models.DescribeClustersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeClusters", POST, "/", input)
  override def describeEvents(input: org.lyranthe.araethura.dax.models.DescribeEventsRequest): F[org.lyranthe.araethura.dax.models.DescribeEventsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.DescribeEventsResponse, org.lyranthe.araethura.dax.models.DescribeEventsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEvents", POST, "/", input)
  override def rebootNode(input: org.lyranthe.araethura.dax.models.RebootNodeRequest): F[org.lyranthe.araethura.dax.models.RebootNodeResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.RebootNodeResponse, org.lyranthe.araethura.dax.models.RebootNodeRequest](client, awsData, ServiceType, ServiceAndPrefix, "RebootNode", POST, "/", input)
  override def tagResource(input: org.lyranthe.araethura.dax.models.TagResourceRequest): F[org.lyranthe.araethura.dax.models.TagResourceResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.TagResourceResponse, org.lyranthe.araethura.dax.models.TagResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "TagResource", POST, "/", input)
  override def createSubnetGroup(input: org.lyranthe.araethura.dax.models.CreateSubnetGroupRequest): F[org.lyranthe.araethura.dax.models.CreateSubnetGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.CreateSubnetGroupResponse, org.lyranthe.araethura.dax.models.CreateSubnetGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateSubnetGroup", POST, "/", input)
  override def describeParameterGroups(input: org.lyranthe.araethura.dax.models.DescribeParameterGroupsRequest): F[org.lyranthe.araethura.dax.models.DescribeParameterGroupsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.DescribeParameterGroupsResponse, org.lyranthe.araethura.dax.models.DescribeParameterGroupsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeParameterGroups", POST, "/", input)
  override def untagResource(input: org.lyranthe.araethura.dax.models.UntagResourceRequest): F[org.lyranthe.araethura.dax.models.UntagResourceResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.UntagResourceResponse, org.lyranthe.araethura.dax.models.UntagResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "UntagResource", POST, "/", input)
  override def deleteCluster(input: org.lyranthe.araethura.dax.models.DeleteClusterRequest): F[org.lyranthe.araethura.dax.models.DeleteClusterResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.DeleteClusterResponse, org.lyranthe.araethura.dax.models.DeleteClusterRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteCluster", POST, "/", input)
  override def deleteParameterGroup(input: org.lyranthe.araethura.dax.models.DeleteParameterGroupRequest): F[org.lyranthe.araethura.dax.models.DeleteParameterGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.DeleteParameterGroupResponse, org.lyranthe.araethura.dax.models.DeleteParameterGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteParameterGroup", POST, "/", input)
  override def increaseReplicationFactor(input: org.lyranthe.araethura.dax.models.IncreaseReplicationFactorRequest): F[org.lyranthe.araethura.dax.models.IncreaseReplicationFactorResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.IncreaseReplicationFactorResponse, org.lyranthe.araethura.dax.models.IncreaseReplicationFactorRequest](client, awsData, ServiceType, ServiceAndPrefix, "IncreaseReplicationFactor", POST, "/", input)
  override def updateCluster(input: org.lyranthe.araethura.dax.models.UpdateClusterRequest): F[org.lyranthe.araethura.dax.models.UpdateClusterResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.UpdateClusterResponse, org.lyranthe.araethura.dax.models.UpdateClusterRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateCluster", POST, "/", input)
  override def listTags(input: org.lyranthe.araethura.dax.models.ListTagsRequest): F[org.lyranthe.araethura.dax.models.ListTagsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.ListTagsResponse, org.lyranthe.araethura.dax.models.ListTagsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTags", POST, "/", input)
  override def describeParameters(input: org.lyranthe.araethura.dax.models.DescribeParametersRequest): F[org.lyranthe.araethura.dax.models.DescribeParametersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.DescribeParametersResponse, org.lyranthe.araethura.dax.models.DescribeParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeParameters", POST, "/", input)
  override def deleteSubnetGroup(input: org.lyranthe.araethura.dax.models.DeleteSubnetGroupRequest): F[org.lyranthe.araethura.dax.models.DeleteSubnetGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.DeleteSubnetGroupResponse, org.lyranthe.araethura.dax.models.DeleteSubnetGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteSubnetGroup", POST, "/", input)
  override def describeSubnetGroups(input: org.lyranthe.araethura.dax.models.DescribeSubnetGroupsRequest): F[org.lyranthe.araethura.dax.models.DescribeSubnetGroupsResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.DescribeSubnetGroupsResponse, org.lyranthe.araethura.dax.models.DescribeSubnetGroupsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeSubnetGroups", POST, "/", input)
  override def updateParameterGroup(input: org.lyranthe.araethura.dax.models.UpdateParameterGroupRequest): F[org.lyranthe.araethura.dax.models.UpdateParameterGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.UpdateParameterGroupResponse, org.lyranthe.araethura.dax.models.UpdateParameterGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateParameterGroup", POST, "/", input)
  override def describeDefaultParameters(input: org.lyranthe.araethura.dax.models.DescribeDefaultParametersRequest): F[org.lyranthe.araethura.dax.models.DescribeDefaultParametersResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.DescribeDefaultParametersResponse, org.lyranthe.araethura.dax.models.DescribeDefaultParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDefaultParameters", POST, "/", input)
  override def createParameterGroup(input: org.lyranthe.araethura.dax.models.CreateParameterGroupRequest): F[org.lyranthe.araethura.dax.models.CreateParameterGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.CreateParameterGroupResponse, org.lyranthe.araethura.dax.models.CreateParameterGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateParameterGroup", POST, "/", input)
  override def createCluster(input: org.lyranthe.araethura.dax.models.CreateClusterRequest): F[org.lyranthe.araethura.dax.models.CreateClusterResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.CreateClusterResponse, org.lyranthe.araethura.dax.models.CreateClusterRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateCluster", POST, "/", input)
  override def decreaseReplicationFactor(input: org.lyranthe.araethura.dax.models.DecreaseReplicationFactorRequest): F[org.lyranthe.araethura.dax.models.DecreaseReplicationFactorResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.DecreaseReplicationFactorResponse, org.lyranthe.araethura.dax.models.DecreaseReplicationFactorRequest](client, awsData, ServiceType, ServiceAndPrefix, "DecreaseReplicationFactor", POST, "/", input)
  override def updateSubnetGroup(input: org.lyranthe.araethura.dax.models.UpdateSubnetGroupRequest): F[org.lyranthe.araethura.dax.models.UpdateSubnetGroupResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, org.lyranthe.araethura.dax.models.UpdateSubnetGroupResponse, org.lyranthe.araethura.dax.models.UpdateSubnetGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateSubnetGroup", POST, "/", input)
}