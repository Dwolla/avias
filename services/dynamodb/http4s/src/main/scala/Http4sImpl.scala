package org.lyranthe.araethura.dynamodb.http4s
import org.http4s.Method._
import org.lyranthe.araethura.dynamodb.circe._
import org.lyranthe.araethura.dynamodb.models
class AmazondynamodbClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.dynamodb.Amazondynamodb[F] {
  private[this] final val ServiceType: String = "dynamodb"
  private[this] final val ServiceAndPrefix: Option[String] = Some("DynamoDB_20120810")
  override def listTables(input: models.ListTablesInput): F[models.ListTablesOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTablesOutput, models.ListTablesInput](client, awsData, ServiceType, ServiceAndPrefix, "ListTables", POST, "/", input)
  override def scan(input: models.ScanInput): F[models.ScanOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ScanOutput, models.ScanInput](client, awsData, ServiceType, ServiceAndPrefix, "Scan", POST, "/", input)
  override def batchWriteItem(input: models.BatchWriteItemInput): F[models.BatchWriteItemOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchWriteItemOutput, models.BatchWriteItemInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchWriteItem", POST, "/", input)
  override def putItem(input: models.PutItemInput): F[models.PutItemOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutItemOutput, models.PutItemInput](client, awsData, ServiceType, ServiceAndPrefix, "PutItem", POST, "/", input)
  override def deleteItem(input: models.DeleteItemInput): F[models.DeleteItemOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteItemOutput, models.DeleteItemInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteItem", POST, "/", input)
  override def untagResource(input: models.UntagResourceInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.UntagResourceInput](client, awsData, ServiceType, ServiceAndPrefix, "UntagResource", POST, "/", input)
  override def createTable(input: models.CreateTableInput): F[models.CreateTableOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateTableOutput, models.CreateTableInput](client, awsData, ServiceType, ServiceAndPrefix, "CreateTable", POST, "/", input)
  override def describeTimeToLive(input: models.DescribeTimeToLiveInput): F[models.DescribeTimeToLiveOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeTimeToLiveOutput, models.DescribeTimeToLiveInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTimeToLive", POST, "/", input)
  override def deleteTable(input: models.DeleteTableInput): F[models.DeleteTableOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteTableOutput, models.DeleteTableInput](client, awsData, ServiceType, ServiceAndPrefix, "DeleteTable", POST, "/", input)
  override def getItem(input: models.GetItemInput): F[models.GetItemOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetItemOutput, models.GetItemInput](client, awsData, ServiceType, ServiceAndPrefix, "GetItem", POST, "/", input)
  override def updateItem(input: models.UpdateItemInput): F[models.UpdateItemOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateItemOutput, models.UpdateItemInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateItem", POST, "/", input)
  override def tagResource(input: models.TagResourceInput): F[Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, Unit, models.TagResourceInput](client, awsData, ServiceType, ServiceAndPrefix, "TagResource", POST, "/", input)
  override def describeLimits: F[models.DescribeLimitsOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeLimitsOutput, scala.Unit](client, awsData, ServiceType, ServiceAndPrefix, "DescribeLimits", POST, "/", ())
  override def updateTable(input: models.UpdateTableInput): F[models.UpdateTableOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateTableOutput, models.UpdateTableInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateTable", POST, "/", input)
  override def query(input: models.QueryInput): F[models.QueryOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.QueryOutput, models.QueryInput](client, awsData, ServiceType, ServiceAndPrefix, "Query", POST, "/", input)
  override def listTagsOfResource(input: models.ListTagsOfResourceInput): F[models.ListTagsOfResourceOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTagsOfResourceOutput, models.ListTagsOfResourceInput](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsOfResource", POST, "/", input)
  override def describeTable(input: models.DescribeTableInput): F[models.DescribeTableOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeTableOutput, models.DescribeTableInput](client, awsData, ServiceType, ServiceAndPrefix, "DescribeTable", POST, "/", input)
  override def updateTimeToLive(input: models.UpdateTimeToLiveInput): F[models.UpdateTimeToLiveOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateTimeToLiveOutput, models.UpdateTimeToLiveInput](client, awsData, ServiceType, ServiceAndPrefix, "UpdateTimeToLive", POST, "/", input)
  override def batchGetItem(input: models.BatchGetItemInput): F[models.BatchGetItemOutput] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.BatchGetItemOutput, models.BatchGetItemInput](client, awsData, ServiceType, ServiceAndPrefix, "BatchGetItem", POST, "/", input)
}