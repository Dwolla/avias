package avias.dynamodb.models
final case class TableDescription(tableName: scala.Option[java.lang.String] = scala.None, tableSizeBytes: scala.Option[scala.Long] = scala.None, itemCount: scala.Option[scala.Long] = scala.None, tableArn: scala.Option[java.lang.String] = scala.None, latestStreamLabel: scala.Option[java.lang.String] = scala.None, localSecondaryIndexes: scala.Option[scala.List[avias.dynamodb.models.LocalSecondaryIndexDescription]] = scala.None, globalSecondaryIndexes: scala.Option[scala.List[avias.dynamodb.models.GlobalSecondaryIndexDescription]] = scala.None, latestStreamArn: scala.Option[java.lang.String] = scala.None, provisionedThroughput: scala.Option[avias.dynamodb.models.ProvisionedThroughputDescription] = scala.None, tableStatus: scala.Option[java.lang.String] = scala.None, attributeDefinitions: scala.Option[scala.List[avias.dynamodb.models.AttributeDefinition]] = scala.None, keySchema: scala.Option[scala.List[avias.dynamodb.models.KeySchemaElement]] = scala.None, creationDateTime: scala.Option[java.time.Instant] = scala.None, streamSpecification: scala.Option[avias.dynamodb.models.StreamSpecification] = scala.None)
final case class ListTagsOfResourceInput(resourceArn: java.lang.String, nextToken: scala.Option[java.lang.String] = scala.None)
final case class ProvisionedThroughput(readCapacityUnits: scala.Long, writeCapacityUnits: scala.Long)
final case class GlobalSecondaryIndex(indexName: java.lang.String, keySchema: scala.List[avias.dynamodb.models.KeySchemaElement], projection: avias.dynamodb.models.Projection, provisionedThroughput: avias.dynamodb.models.ProvisionedThroughput)
final case class ScanInput(tableName: java.lang.String, limit: scala.Option[scala.Int] = scala.None, projectionExpression: scala.Option[java.lang.String] = scala.None, expressionAttributeValues: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, consistentRead: scala.Option[scala.Boolean] = scala.None, filterExpression: scala.Option[java.lang.String] = scala.None, returnConsumedCapacity: scala.Option[java.lang.String] = scala.None, select: scala.Option[java.lang.String] = scala.None, totalSegments: scala.Option[scala.Int] = scala.None, indexName: scala.Option[java.lang.String] = scala.None, exclusiveStartKey: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, scanFilter: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.Condition]] = scala.None, attributesToGet: scala.Option[scala.List[java.lang.String]] = scala.None, segment: scala.Option[scala.Int] = scala.None, expressionAttributeNames: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, conditionalOperator: scala.Option[java.lang.String] = scala.None)
final case class TagResourceInput(resourceArn: java.lang.String, tags: scala.List[avias.dynamodb.models.Tag])
final case class DeleteTableOutput(tableDescription: scala.Option[avias.dynamodb.models.TableDescription] = scala.None)
final case class QueryInput(tableName: java.lang.String, keyConditionExpression: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None, projectionExpression: scala.Option[java.lang.String] = scala.None, expressionAttributeValues: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, consistentRead: scala.Option[scala.Boolean] = scala.None, filterExpression: scala.Option[java.lang.String] = scala.None, returnConsumedCapacity: scala.Option[java.lang.String] = scala.None, select: scala.Option[java.lang.String] = scala.None, indexName: scala.Option[java.lang.String] = scala.None, exclusiveStartKey: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, scanIndexForward: scala.Option[scala.Boolean] = scala.None, queryFilter: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.Condition]] = scala.None, keyConditions: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.Condition]] = scala.None, attributesToGet: scala.Option[scala.List[java.lang.String]] = scala.None, expressionAttributeNames: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, conditionalOperator: scala.Option[java.lang.String] = scala.None)
final case class ExpectedAttributeValue(value: scala.Option[avias.dynamodb.models.AttributeValue] = scala.None, exists: scala.Option[scala.Boolean] = scala.None, comparisonOperator: scala.Option[java.lang.String] = scala.None, attributeValueList: scala.Option[scala.List[avias.dynamodb.models.AttributeValue]] = scala.None)
final case class ListTagsOfResourceOutput(tags: scala.Option[scala.List[avias.dynamodb.models.Tag]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class DescribeTableInput(tableName: java.lang.String)
final case class ListTablesInput(exclusiveStartTableName: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None)
final case class DescribeTimeToLiveInput(tableName: java.lang.String)
final case class ItemCollectionMetrics(itemCollectionKey: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, sizeEstimateRangeGB: scala.Option[scala.List[scala.Double]] = scala.None)
final case class ResourceInUseException(message: scala.Option[java.lang.String] = scala.None)
final case class LocalSecondaryIndexDescription(indexSizeBytes: scala.Option[scala.Long] = scala.None, itemCount: scala.Option[scala.Long] = scala.None, indexArn: scala.Option[java.lang.String] = scala.None, indexName: scala.Option[java.lang.String] = scala.None, keySchema: scala.Option[scala.List[avias.dynamodb.models.KeySchemaElement]] = scala.None, projection: scala.Option[avias.dynamodb.models.Projection] = scala.None)
final case class WriteRequest(putRequest: scala.Option[avias.dynamodb.models.PutRequest] = scala.None, deleteRequest: scala.Option[avias.dynamodb.models.DeleteRequest] = scala.None)
final case class KeySchemaElement(attributeName: java.lang.String, keyType: java.lang.String)
final case class DeleteItemInput(tableName: java.lang.String, key: scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue], expected: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.ExpectedAttributeValue]] = scala.None, expressionAttributeValues: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, conditionExpression: scala.Option[java.lang.String] = scala.None, returnConsumedCapacity: scala.Option[java.lang.String] = scala.None, returnItemCollectionMetrics: scala.Option[java.lang.String] = scala.None, returnValues: scala.Option[java.lang.String] = scala.None, expressionAttributeNames: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, conditionalOperator: scala.Option[java.lang.String] = scala.None)
final case class CreateGlobalSecondaryIndexAction(indexName: java.lang.String, keySchema: scala.List[avias.dynamodb.models.KeySchemaElement], projection: avias.dynamodb.models.Projection, provisionedThroughput: avias.dynamodb.models.ProvisionedThroughput)
final case class ProvisionedThroughputDescription(lastIncreaseDateTime: scala.Option[java.time.Instant] = scala.None, lastDecreaseDateTime: scala.Option[java.time.Instant] = scala.None, numberOfDecreasesToday: scala.Option[scala.Long] = scala.None, readCapacityUnits: scala.Option[scala.Long] = scala.None, writeCapacityUnits: scala.Option[scala.Long] = scala.None)
final case class AttributeDefinition(attributeName: java.lang.String, attributeType: java.lang.String)
final case class ConditionalCheckFailedException(message: scala.Option[java.lang.String] = scala.None)
final case class DescribeLimitsOutput(accountMaxReadCapacityUnits: scala.Option[scala.Long] = scala.None, accountMaxWriteCapacityUnits: scala.Option[scala.Long] = scala.None, tableMaxReadCapacityUnits: scala.Option[scala.Long] = scala.None, tableMaxWriteCapacityUnits: scala.Option[scala.Long] = scala.None)
final case class ListTablesOutput(tableNames: scala.Option[scala.List[java.lang.String]] = scala.None, lastEvaluatedTableName: scala.Option[java.lang.String] = scala.None)
final case class LocalSecondaryIndex(indexName: java.lang.String, keySchema: scala.List[avias.dynamodb.models.KeySchemaElement], projection: avias.dynamodb.models.Projection)
final case class UpdateItemOutput(attributes: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, consumedCapacity: scala.Option[avias.dynamodb.models.ConsumedCapacity] = scala.None, itemCollectionMetrics: scala.Option[avias.dynamodb.models.ItemCollectionMetrics] = scala.None)
final case class DeleteRequest(key: scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue])
final case class BatchGetItemInput(requestItems: scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.KeysAndAttributes], returnConsumedCapacity: scala.Option[java.lang.String] = scala.None)
final case class UpdateTimeToLiveOutput(timeToLiveSpecification: scala.Option[avias.dynamodb.models.TimeToLiveSpecification] = scala.None)
final case class QueryOutput(items: scala.Option[scala.List[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]]] = scala.None, count: scala.Option[scala.Int] = scala.None, scannedCount: scala.Option[scala.Int] = scala.None, lastEvaluatedKey: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, consumedCapacity: scala.Option[avias.dynamodb.models.ConsumedCapacity] = scala.None)
final case class PutRequest(item: scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue])
final case class CreateTableInput(provisionedThroughput: avias.dynamodb.models.ProvisionedThroughput, tableName: java.lang.String, attributeDefinitions: scala.List[avias.dynamodb.models.AttributeDefinition], keySchema: scala.List[avias.dynamodb.models.KeySchemaElement], globalSecondaryIndexes: scala.Option[scala.List[avias.dynamodb.models.GlobalSecondaryIndex]] = scala.None, localSecondaryIndexes: scala.Option[scala.List[avias.dynamodb.models.LocalSecondaryIndex]] = scala.None, streamSpecification: scala.Option[avias.dynamodb.models.StreamSpecification] = scala.None)
case object DescribeLimitsInput
final case class GlobalSecondaryIndexUpdate(update: scala.Option[avias.dynamodb.models.UpdateGlobalSecondaryIndexAction] = scala.None, create: scala.Option[avias.dynamodb.models.CreateGlobalSecondaryIndexAction] = scala.None, delete: scala.Option[avias.dynamodb.models.DeleteGlobalSecondaryIndexAction] = scala.None)
final case class KeysAndAttributes(keys: scala.List[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]], projectionExpression: scala.Option[java.lang.String] = scala.None, consistentRead: scala.Option[scala.Boolean] = scala.None, attributesToGet: scala.Option[scala.List[java.lang.String]] = scala.None, expressionAttributeNames: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None)
final case class Condition(comparisonOperator: java.lang.String, attributeValueList: scala.Option[scala.List[avias.dynamodb.models.AttributeValue]] = scala.None)
final case class PutItemInput(item: scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue], tableName: java.lang.String, expected: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.ExpectedAttributeValue]] = scala.None, expressionAttributeValues: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, conditionExpression: scala.Option[java.lang.String] = scala.None, returnConsumedCapacity: scala.Option[java.lang.String] = scala.None, returnItemCollectionMetrics: scala.Option[java.lang.String] = scala.None, returnValues: scala.Option[java.lang.String] = scala.None, expressionAttributeNames: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, conditionalOperator: scala.Option[java.lang.String] = scala.None)
final case class ProvisionedThroughputExceededException(message: scala.Option[java.lang.String] = scala.None)
final case class UpdateTableOutput(tableDescription: scala.Option[avias.dynamodb.models.TableDescription] = scala.None)
final case class BatchWriteItemOutput(unprocessedItems: scala.Option[scala.collection.immutable.Map[java.lang.String, scala.List[avias.dynamodb.models.WriteRequest]]] = scala.None, itemCollectionMetrics: scala.Option[scala.collection.immutable.Map[java.lang.String, scala.List[avias.dynamodb.models.ItemCollectionMetrics]]] = scala.None, consumedCapacity: scala.Option[scala.List[avias.dynamodb.models.ConsumedCapacity]] = scala.None)
final case class DescribeTimeToLiveOutput(timeToLiveDescription: scala.Option[avias.dynamodb.models.TimeToLiveDescription] = scala.None)
final case class DeleteItemOutput(attributes: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, consumedCapacity: scala.Option[avias.dynamodb.models.ConsumedCapacity] = scala.None, itemCollectionMetrics: scala.Option[avias.dynamodb.models.ItemCollectionMetrics] = scala.None)
final case class GlobalSecondaryIndexDescription(indexSizeBytes: scala.Option[scala.Long] = scala.None, itemCount: scala.Option[scala.Long] = scala.None, indexArn: scala.Option[java.lang.String] = scala.None, provisionedThroughput: scala.Option[avias.dynamodb.models.ProvisionedThroughputDescription] = scala.None, indexName: scala.Option[java.lang.String] = scala.None, backfilling: scala.Option[scala.Boolean] = scala.None, indexStatus: scala.Option[java.lang.String] = scala.None, keySchema: scala.Option[scala.List[avias.dynamodb.models.KeySchemaElement]] = scala.None, projection: scala.Option[avias.dynamodb.models.Projection] = scala.None)
final case class UpdateTableInput(tableName: java.lang.String, globalSecondaryIndexUpdates: scala.Option[scala.List[avias.dynamodb.models.GlobalSecondaryIndexUpdate]] = scala.None, provisionedThroughput: scala.Option[avias.dynamodb.models.ProvisionedThroughput] = scala.None, attributeDefinitions: scala.Option[scala.List[avias.dynamodb.models.AttributeDefinition]] = scala.None, streamSpecification: scala.Option[avias.dynamodb.models.StreamSpecification] = scala.None)
final case class TimeToLiveSpecification(enabled: scala.Boolean, attributeName: java.lang.String)
final case class Projection(projectionType: scala.Option[java.lang.String] = scala.None, nonKeyAttributes: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class UpdateGlobalSecondaryIndexAction(indexName: java.lang.String, provisionedThroughput: avias.dynamodb.models.ProvisionedThroughput)
final case class PutItemOutput(attributes: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, consumedCapacity: scala.Option[avias.dynamodb.models.ConsumedCapacity] = scala.None, itemCollectionMetrics: scala.Option[avias.dynamodb.models.ItemCollectionMetrics] = scala.None)
final case class DeleteTableInput(tableName: java.lang.String)
final case class ScanOutput(items: scala.Option[scala.List[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]]] = scala.None, count: scala.Option[scala.Int] = scala.None, scannedCount: scala.Option[scala.Int] = scala.None, lastEvaluatedKey: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, consumedCapacity: scala.Option[avias.dynamodb.models.ConsumedCapacity] = scala.None)
final case class CreateTableOutput(tableDescription: scala.Option[avias.dynamodb.models.TableDescription] = scala.None)
final case class ResourceNotFoundException(message: scala.Option[java.lang.String] = scala.None)
final case class BatchWriteItemInput(requestItems: scala.collection.immutable.Map[java.lang.String, scala.List[avias.dynamodb.models.WriteRequest]], returnConsumedCapacity: scala.Option[java.lang.String] = scala.None, returnItemCollectionMetrics: scala.Option[java.lang.String] = scala.None)
final case class UpdateTimeToLiveInput(tableName: java.lang.String, timeToLiveSpecification: avias.dynamodb.models.TimeToLiveSpecification)
final case class GetItemInput(tableName: java.lang.String, key: scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue], projectionExpression: scala.Option[java.lang.String] = scala.None, consistentRead: scala.Option[scala.Boolean] = scala.None, returnConsumedCapacity: scala.Option[java.lang.String] = scala.None, attributesToGet: scala.Option[scala.List[java.lang.String]] = scala.None, expressionAttributeNames: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None)
final case class Tag(key: java.lang.String, value: java.lang.String)
final case class ConsumedCapacity(tableName: scala.Option[java.lang.String] = scala.None, capacityUnits: scala.Option[scala.Double] = scala.None, table: scala.Option[avias.dynamodb.models.Capacity] = scala.None, localSecondaryIndexes: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.Capacity]] = scala.None, globalSecondaryIndexes: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.Capacity]] = scala.None)
final case class DescribeTableOutput(table: scala.Option[avias.dynamodb.models.TableDescription] = scala.None)
final case class LimitExceededException(message: scala.Option[java.lang.String] = scala.None)
final case class AttributeValueUpdate(value: scala.Option[avias.dynamodb.models.AttributeValue] = scala.None, action: scala.Option[java.lang.String] = scala.None)
final case class DeleteGlobalSecondaryIndexAction(indexName: java.lang.String)
final case class InternalServerError(message: scala.Option[java.lang.String] = scala.None)
final case class TimeToLiveDescription(timeToLiveStatus: scala.Option[java.lang.String] = scala.None, attributeName: scala.Option[java.lang.String] = scala.None)
final case class UpdateItemInput(tableName: java.lang.String, key: scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue], expected: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.ExpectedAttributeValue]] = scala.None, expressionAttributeValues: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, conditionExpression: scala.Option[java.lang.String] = scala.None, returnConsumedCapacity: scala.Option[java.lang.String] = scala.None, updateExpression: scala.Option[java.lang.String] = scala.None, returnItemCollectionMetrics: scala.Option[java.lang.String] = scala.None, returnValues: scala.Option[java.lang.String] = scala.None, attributeUpdates: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValueUpdate]] = scala.None, expressionAttributeNames: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None, conditionalOperator: scala.Option[java.lang.String] = scala.None)
final case class StreamSpecification(streamEnabled: scala.Option[scala.Boolean] = scala.None, streamViewType: scala.Option[java.lang.String] = scala.None)
final case class GetItemOutput(item: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, consumedCapacity: scala.Option[avias.dynamodb.models.ConsumedCapacity] = scala.None)
final case class ItemCollectionSizeLimitExceededException(message: scala.Option[java.lang.String] = scala.None)
final case class Capacity(capacityUnits: scala.Option[scala.Double] = scala.None)
final case class BatchGetItemOutput(responses: scala.Option[scala.collection.immutable.Map[java.lang.String, scala.List[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]]]] = scala.None, unprocessedKeys: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.KeysAndAttributes]] = scala.None, consumedCapacity: scala.Option[scala.List[avias.dynamodb.models.ConsumedCapacity]] = scala.None)
final case class UntagResourceInput(resourceArn: java.lang.String, tagKeys: scala.List[java.lang.String])
final case class AttributeValue(bs: scala.Option[scala.List[scala.Array[scala.Byte]]] = scala.None, ss: scala.Option[scala.List[java.lang.String]] = scala.None, m: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodb.models.AttributeValue]] = scala.None, `null`: scala.Option[scala.Boolean] = scala.None, b: scala.Option[scala.Array[scala.Byte]] = scala.None, s: scala.Option[java.lang.String] = scala.None, n: scala.Option[java.lang.String] = scala.None, ns: scala.Option[scala.List[java.lang.String]] = scala.None, bool: scala.Option[scala.Boolean] = scala.None, l: scala.Option[scala.List[avias.dynamodb.models.AttributeValue]] = scala.None)