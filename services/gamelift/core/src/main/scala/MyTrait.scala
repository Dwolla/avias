package org.lyranthe.araethura.gamelift
trait Amazongamelift[F[_]] {
  def describeVpcPeeringAuthorizations: F[org.lyranthe.araethura.gamelift.models.DescribeVpcPeeringAuthorizationsOutput]
  def createPlayerSession(input: org.lyranthe.araethura.gamelift.models.CreatePlayerSessionInput): F[org.lyranthe.araethura.gamelift.models.CreatePlayerSessionOutput]
  def updateGameSession(input: org.lyranthe.araethura.gamelift.models.UpdateGameSessionInput): F[org.lyranthe.araethura.gamelift.models.UpdateGameSessionOutput]
  def describeGameSessionDetails(input: org.lyranthe.araethura.gamelift.models.DescribeGameSessionDetailsInput): F[org.lyranthe.araethura.gamelift.models.DescribeGameSessionDetailsOutput]
  def stopGameSessionPlacement(input: org.lyranthe.araethura.gamelift.models.StopGameSessionPlacementInput): F[org.lyranthe.araethura.gamelift.models.StopGameSessionPlacementOutput]
  def validateMatchmakingRuleSet(input: org.lyranthe.araethura.gamelift.models.ValidateMatchmakingRuleSetInput): F[org.lyranthe.araethura.gamelift.models.ValidateMatchmakingRuleSetOutput]
  def listAliases(input: org.lyranthe.araethura.gamelift.models.ListAliasesInput): F[org.lyranthe.araethura.gamelift.models.ListAliasesOutput]
  def getGameSessionLogUrl(input: org.lyranthe.araethura.gamelift.models.GetGameSessionLogUrlInput): F[org.lyranthe.araethura.gamelift.models.GetGameSessionLogUrlOutput]
  def describeMatchmaking(input: org.lyranthe.araethura.gamelift.models.DescribeMatchmakingInput): F[org.lyranthe.araethura.gamelift.models.DescribeMatchmakingOutput]
  def searchGameSessions(input: org.lyranthe.araethura.gamelift.models.SearchGameSessionsInput): F[org.lyranthe.araethura.gamelift.models.SearchGameSessionsOutput]
  def describeRuntimeConfiguration(input: org.lyranthe.araethura.gamelift.models.DescribeRuntimeConfigurationInput): F[org.lyranthe.araethura.gamelift.models.DescribeRuntimeConfigurationOutput]
  def stopMatchmaking(input: org.lyranthe.araethura.gamelift.models.StopMatchmakingInput): F[scala.Unit]
  def updateFleetCapacity(input: org.lyranthe.araethura.gamelift.models.UpdateFleetCapacityInput): F[org.lyranthe.araethura.gamelift.models.UpdateFleetCapacityOutput]
  def describeMatchmakingRuleSets(input: org.lyranthe.araethura.gamelift.models.DescribeMatchmakingRuleSetsInput): F[org.lyranthe.araethura.gamelift.models.DescribeMatchmakingRuleSetsOutput]
  def describeScalingPolicies(input: org.lyranthe.araethura.gamelift.models.DescribeScalingPoliciesInput): F[org.lyranthe.araethura.gamelift.models.DescribeScalingPoliciesOutput]
  def createAlias(input: org.lyranthe.araethura.gamelift.models.CreateAliasInput): F[org.lyranthe.araethura.gamelift.models.CreateAliasOutput]
  def createBuild(input: org.lyranthe.araethura.gamelift.models.CreateBuildInput): F[org.lyranthe.araethura.gamelift.models.CreateBuildOutput]
  def createVpcPeeringConnection(input: org.lyranthe.araethura.gamelift.models.CreateVpcPeeringConnectionInput): F[scala.Unit]
  def describeBuild(input: org.lyranthe.araethura.gamelift.models.DescribeBuildInput): F[org.lyranthe.araethura.gamelift.models.DescribeBuildOutput]
  def createGameSession(input: org.lyranthe.araethura.gamelift.models.CreateGameSessionInput): F[org.lyranthe.araethura.gamelift.models.CreateGameSessionOutput]
  def createVpcPeeringAuthorization(input: org.lyranthe.araethura.gamelift.models.CreateVpcPeeringAuthorizationInput): F[org.lyranthe.araethura.gamelift.models.CreateVpcPeeringAuthorizationOutput]
  def describeFleetPortSettings(input: org.lyranthe.araethura.gamelift.models.DescribeFleetPortSettingsInput): F[org.lyranthe.araethura.gamelift.models.DescribeFleetPortSettingsOutput]
  def deleteMatchmakingConfiguration(input: org.lyranthe.araethura.gamelift.models.DeleteMatchmakingConfigurationInput): F[scala.Unit]
  def createMatchmakingRuleSet(input: org.lyranthe.araethura.gamelift.models.CreateMatchmakingRuleSetInput): F[org.lyranthe.araethura.gamelift.models.CreateMatchmakingRuleSetOutput]
  def describeAlias(input: org.lyranthe.araethura.gamelift.models.DescribeAliasInput): F[org.lyranthe.araethura.gamelift.models.DescribeAliasOutput]
  def deleteVpcPeeringAuthorization(input: org.lyranthe.araethura.gamelift.models.DeleteVpcPeeringAuthorizationInput): F[scala.Unit]
  def updateBuild(input: org.lyranthe.araethura.gamelift.models.UpdateBuildInput): F[org.lyranthe.araethura.gamelift.models.UpdateBuildOutput]
  def describeMatchmakingConfigurations(input: org.lyranthe.araethura.gamelift.models.DescribeMatchmakingConfigurationsInput): F[org.lyranthe.araethura.gamelift.models.DescribeMatchmakingConfigurationsOutput]
  def describeFleetAttributes(input: org.lyranthe.araethura.gamelift.models.DescribeFleetAttributesInput): F[org.lyranthe.araethura.gamelift.models.DescribeFleetAttributesOutput]
  def deleteAlias(input: org.lyranthe.araethura.gamelift.models.DeleteAliasInput): F[scala.Unit]
  def createPlayerSessions(input: org.lyranthe.araethura.gamelift.models.CreatePlayerSessionsInput): F[org.lyranthe.araethura.gamelift.models.CreatePlayerSessionsOutput]
  def updateFleetPortSettings(input: org.lyranthe.araethura.gamelift.models.UpdateFleetPortSettingsInput): F[org.lyranthe.araethura.gamelift.models.UpdateFleetPortSettingsOutput]
  def describeGameSessionQueues(input: org.lyranthe.araethura.gamelift.models.DescribeGameSessionQueuesInput): F[org.lyranthe.araethura.gamelift.models.DescribeGameSessionQueuesOutput]
  def updateMatchmakingConfiguration(input: org.lyranthe.araethura.gamelift.models.UpdateMatchmakingConfigurationInput): F[org.lyranthe.araethura.gamelift.models.UpdateMatchmakingConfigurationOutput]
  def describeEC2InstanceLimits(input: org.lyranthe.araethura.gamelift.models.DescribeEC2InstanceLimitsInput): F[org.lyranthe.araethura.gamelift.models.DescribeEC2InstanceLimitsOutput]
  def updateGameSessionQueue(input: org.lyranthe.araethura.gamelift.models.UpdateGameSessionQueueInput): F[org.lyranthe.araethura.gamelift.models.UpdateGameSessionQueueOutput]
  def describeInstances(input: org.lyranthe.araethura.gamelift.models.DescribeInstancesInput): F[org.lyranthe.araethura.gamelift.models.DescribeInstancesOutput]
  def resolveAlias(input: org.lyranthe.araethura.gamelift.models.ResolveAliasInput): F[org.lyranthe.araethura.gamelift.models.ResolveAliasOutput]
  def updateFleetAttributes(input: org.lyranthe.araethura.gamelift.models.UpdateFleetAttributesInput): F[org.lyranthe.araethura.gamelift.models.UpdateFleetAttributesOutput]
  def getInstanceAccess(input: org.lyranthe.araethura.gamelift.models.GetInstanceAccessInput): F[org.lyranthe.araethura.gamelift.models.GetInstanceAccessOutput]
  def updateAlias(input: org.lyranthe.araethura.gamelift.models.UpdateAliasInput): F[org.lyranthe.araethura.gamelift.models.UpdateAliasOutput]
  def listBuilds(input: org.lyranthe.araethura.gamelift.models.ListBuildsInput): F[org.lyranthe.araethura.gamelift.models.ListBuildsOutput]
  def describeGameSessionPlacement(input: org.lyranthe.araethura.gamelift.models.DescribeGameSessionPlacementInput): F[org.lyranthe.araethura.gamelift.models.DescribeGameSessionPlacementOutput]
  def updateRuntimeConfiguration(input: org.lyranthe.araethura.gamelift.models.UpdateRuntimeConfigurationInput): F[org.lyranthe.araethura.gamelift.models.UpdateRuntimeConfigurationOutput]
  def deleteScalingPolicy(input: org.lyranthe.araethura.gamelift.models.DeleteScalingPolicyInput): F[scala.Unit]
  def describePlayerSessions(input: org.lyranthe.araethura.gamelift.models.DescribePlayerSessionsInput): F[org.lyranthe.araethura.gamelift.models.DescribePlayerSessionsOutput]
  def deleteVpcPeeringConnection(input: org.lyranthe.araethura.gamelift.models.DeleteVpcPeeringConnectionInput): F[scala.Unit]
  def deleteGameSessionQueue(input: org.lyranthe.araethura.gamelift.models.DeleteGameSessionQueueInput): F[scala.Unit]
  def describeVpcPeeringConnections(input: org.lyranthe.araethura.gamelift.models.DescribeVpcPeeringConnectionsInput): F[org.lyranthe.araethura.gamelift.models.DescribeVpcPeeringConnectionsOutput]
  def createMatchmakingConfiguration(input: org.lyranthe.araethura.gamelift.models.CreateMatchmakingConfigurationInput): F[org.lyranthe.araethura.gamelift.models.CreateMatchmakingConfigurationOutput]
  def acceptMatch(input: org.lyranthe.araethura.gamelift.models.AcceptMatchInput): F[scala.Unit]
  def putScalingPolicy(input: org.lyranthe.araethura.gamelift.models.PutScalingPolicyInput): F[org.lyranthe.araethura.gamelift.models.PutScalingPolicyOutput]
  def describeFleetEvents(input: org.lyranthe.araethura.gamelift.models.DescribeFleetEventsInput): F[org.lyranthe.araethura.gamelift.models.DescribeFleetEventsOutput]
  def listFleets(input: org.lyranthe.araethura.gamelift.models.ListFleetsInput): F[org.lyranthe.araethura.gamelift.models.ListFleetsOutput]
  def describeFleetCapacity(input: org.lyranthe.araethura.gamelift.models.DescribeFleetCapacityInput): F[org.lyranthe.araethura.gamelift.models.DescribeFleetCapacityOutput]
  def describeFleetUtilization(input: org.lyranthe.araethura.gamelift.models.DescribeFleetUtilizationInput): F[org.lyranthe.araethura.gamelift.models.DescribeFleetUtilizationOutput]
  def deleteBuild(input: org.lyranthe.araethura.gamelift.models.DeleteBuildInput): F[scala.Unit]
  def deleteFleet(input: org.lyranthe.araethura.gamelift.models.DeleteFleetInput): F[scala.Unit]
  def createGameSessionQueue(input: org.lyranthe.araethura.gamelift.models.CreateGameSessionQueueInput): F[org.lyranthe.araethura.gamelift.models.CreateGameSessionQueueOutput]
  def requestUploadCredentials(input: org.lyranthe.araethura.gamelift.models.RequestUploadCredentialsInput): F[org.lyranthe.araethura.gamelift.models.RequestUploadCredentialsOutput]
  def describeGameSessions(input: org.lyranthe.araethura.gamelift.models.DescribeGameSessionsInput): F[org.lyranthe.araethura.gamelift.models.DescribeGameSessionsOutput]
  def startMatchmaking(input: org.lyranthe.araethura.gamelift.models.StartMatchmakingInput): F[org.lyranthe.araethura.gamelift.models.StartMatchmakingOutput]
  def startGameSessionPlacement(input: org.lyranthe.araethura.gamelift.models.StartGameSessionPlacementInput): F[org.lyranthe.araethura.gamelift.models.StartGameSessionPlacementOutput]
  def createFleet(input: org.lyranthe.araethura.gamelift.models.CreateFleetInput): F[org.lyranthe.araethura.gamelift.models.CreateFleetOutput]
}