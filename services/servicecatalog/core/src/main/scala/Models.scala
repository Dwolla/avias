package org.lyranthe.araethura.servicecatalog.models
import org.lyranthe.araethura.servicecatalog.models
final case class CreateProductOutput(productViewDetail: scala.Option[models.ProductViewDetail] = None, provisioningArtifactDetail: scala.Option[models.ProvisioningArtifactDetail] = None, tags: scala.Option[scala.List[models.Tag]] = None)
final case class UsageInstruction(`type`: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None)
final case class DescribeCopyProductStatusOutput(copyProductStatus: scala.Option[java.lang.String] = None, targetProductId: scala.Option[java.lang.String] = None, statusDetail: scala.Option[java.lang.String] = None)
case object DeletePortfolioOutput
final case class UpdateProvisionedProductOutput(recordDetail: scala.Option[models.RecordDetail] = None)
final case class DescribeTagOptionOutput(tagOptionDetail: scala.Option[models.TagOptionDetail] = None)
final case class DescribeCopyProductStatusInput(copyProductToken: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class DescribeProvisionedProductOutput(provisionedProductDetail: scala.Option[models.ProvisionedProductDetail] = None)
final case class CreateTagOptionInput(key: java.lang.String, value: java.lang.String)
final case class RecordOutput(outputKey: scala.Option[java.lang.String] = None, outputValue: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None)
final case class TagOptionDetail(key: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None, active: scala.Option[scala.Boolean] = None, id: scala.Option[java.lang.String] = None)
final case class ProvisioningParameter(key: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None)
final case class UpdateTagOptionOutput(tagOptionDetail: scala.Option[models.TagOptionDetail] = None)
final case class RecordError(code: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None)
final case class UpdateProvisioningArtifactInput(productId: java.lang.String, provisioningArtifactId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None)
final case class CopyProductOutput(copyProductToken: scala.Option[java.lang.String] = None)
final case class DescribeProductAsAdminInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class ListAcceptedPortfolioSharesOutput(portfolioDetails: scala.Option[scala.List[models.PortfolioDetail]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class ConstraintDetail(constraintId: scala.Option[java.lang.String] = None, `type`: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None, owner: scala.Option[java.lang.String] = None)
final case class DescribePortfolioInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class DescribeProductAsAdminOutput(productViewDetail: scala.Option[models.ProductViewDetail] = None, provisioningArtifactSummaries: scala.Option[scala.List[models.ProvisioningArtifactSummary]] = None, tags: scala.Option[scala.List[models.Tag]] = None, tagOptions: scala.Option[scala.List[models.TagOptionDetail]] = None)
final case class ListPortfoliosOutput(portfolioDetails: scala.Option[scala.List[models.PortfolioDetail]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class UpdateProductOutput(productViewDetail: scala.Option[models.ProductViewDetail] = None, tags: scala.Option[scala.List[models.Tag]] = None)
final case class ProvisioningArtifactProperties(info: scala.collection.immutable.Map[java.lang.String, java.lang.String], name: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None, `type`: scala.Option[java.lang.String] = None)
final case class ListTagOptionsOutput(tagOptionDetails: scala.Option[scala.List[models.TagOptionDetail]] = None, pageToken: scala.Option[java.lang.String] = None)
final case class UpdateProductInput(id: java.lang.String, supportUrl: scala.Option[java.lang.String] = None, supportDescription: scala.Option[java.lang.String] = None, owner: scala.Option[java.lang.String] = None, distributor: scala.Option[java.lang.String] = None, addTags: scala.Option[scala.List[models.Tag]] = None, removeTags: scala.Option[scala.List[java.lang.String]] = None, name: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None, supportEmail: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None)
final case class ListPortfoliosForProductOutput(portfolioDetails: scala.Option[scala.List[models.PortfolioDetail]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class SearchProductsAsAdminInput(productSource: scala.Option[java.lang.String] = None, portfolioId: scala.Option[java.lang.String] = None, sortOrder: scala.Option[java.lang.String] = None, pageSize: scala.Option[scala.Int] = None, filters: scala.Option[scala.collection.immutable.Map[java.lang.String, scala.List[java.lang.String]]] = None, pageToken: scala.Option[java.lang.String] = None, sortBy: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None)
final case class DisassociateTagOptionFromResourceInput(resourceId: java.lang.String, tagOptionId: java.lang.String)
final case class CreatePortfolioOutput(portfolioDetail: scala.Option[models.PortfolioDetail] = None, tags: scala.Option[scala.List[models.Tag]] = None)
final case class AssociateProductWithPortfolioInput(productId: java.lang.String, portfolioId: java.lang.String, sourcePortfolioId: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None)
final case class ListRecordHistoryInput(searchFilter: scala.Option[models.ListRecordHistorySearchFilter] = None, pageSize: scala.Option[scala.Int] = None, pageToken: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None, accessLevelFilter: scala.Option[models.AccessLevelFilter] = None)
final case class ProvisioningArtifactParameter(isNoEcho: scala.Option[scala.Boolean] = None, parameterConstraints: scala.Option[models.ParameterConstraints] = None, parameterKey: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None, parameterType: scala.Option[java.lang.String] = None, defaultValue: scala.Option[java.lang.String] = None)
final case class ListConstraintsForPortfolioOutput(constraintDetails: scala.Option[scala.List[models.ConstraintDetail]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class DeleteProductInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class RecordTag(key: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None)
final case class ListPortfoliosForProductInput(productId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None, pageToken: scala.Option[java.lang.String] = None, pageSize: scala.Option[scala.Int] = None)
final case class DescribeProvisioningArtifactOutput(provisioningArtifactDetail: scala.Option[models.ProvisioningArtifactDetail] = None, info: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = None, status: scala.Option[java.lang.String] = None)
case object DisassociateTagOptionFromResourceOutput
final case class AssociateTagOptionWithResourceInput(resourceId: java.lang.String, tagOptionId: java.lang.String)
final case class ListResourcesForTagOptionInput(tagOptionId: java.lang.String, resourceType: scala.Option[java.lang.String] = None, pageSize: scala.Option[scala.Int] = None, pageToken: scala.Option[java.lang.String] = None)
final case class ListProvisioningArtifactsInput(productId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class UpdateConstraintOutput(constraintDetail: scala.Option[models.ConstraintDetail] = None, constraintParameters: scala.Option[java.lang.String] = None, status: scala.Option[java.lang.String] = None)
case object DeleteConstraintOutput
final case class ProductViewAggregationValue(value: scala.Option[java.lang.String] = None, approximateCount: scala.Option[scala.Int] = None)
final case class CreateTagOptionOutput(tagOptionDetail: scala.Option[models.TagOptionDetail] = None)
final case class ProductViewDetail(productViewSummary: scala.Option[models.ProductViewSummary] = None, status: scala.Option[java.lang.String] = None, productARN: scala.Option[java.lang.String] = None, createdTime: scala.Option[java.time.Instant] = None)
final case class ListResourcesForTagOptionOutput(resourceDetails: scala.Option[scala.List[models.ResourceDetail]] = None, pageToken: scala.Option[java.lang.String] = None)
case object ResourceInUseException
case object DeleteProvisioningArtifactOutput
final case class CreateProductInput(idempotencyToken: java.lang.String, provisioningArtifactParameters: models.ProvisioningArtifactProperties, owner: java.lang.String, productType: java.lang.String, name: java.lang.String, supportUrl: scala.Option[java.lang.String] = None, supportDescription: scala.Option[java.lang.String] = None, distributor: scala.Option[java.lang.String] = None, tags: scala.Option[scala.List[models.Tag]] = None, description: scala.Option[java.lang.String] = None, supportEmail: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None)
final case class DescribeProductViewInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
case object ResourceNotFoundException
final case class PortfolioDetail(providerName: scala.Option[java.lang.String] = None, displayName: scala.Option[java.lang.String] = None, arn: scala.Option[java.lang.String] = None, id: scala.Option[java.lang.String] = None, createdTime: scala.Option[java.time.Instant] = None, description: scala.Option[java.lang.String] = None)
final case class ProvisionedProductDetail(idempotencyToken: scala.Option[java.lang.String] = None, statusMessage: scala.Option[java.lang.String] = None, `type`: scala.Option[java.lang.String] = None, id: scala.Option[java.lang.String] = None, status: scala.Option[java.lang.String] = None, lastRecordId: scala.Option[java.lang.String] = None, createdTime: scala.Option[java.time.Instant] = None, name: scala.Option[java.lang.String] = None, arn: scala.Option[java.lang.String] = None)
case object DisassociateProductFromPortfolioOutput
case object LimitExceededException
final case class DeletePortfolioInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
case object CreatePortfolioShareOutput
final case class ProvisioningArtifactSummary(provisioningArtifactMetadata: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = None, id: scala.Option[java.lang.String] = None, createdTime: scala.Option[java.time.Instant] = None, name: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None)
final case class ParameterConstraints(allowedValues: scala.Option[scala.List[java.lang.String]] = None)
final case class AssociatePrincipalWithPortfolioInput(portfolioId: java.lang.String, principalARN: java.lang.String, principalType: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class UpdatePortfolioInput(id: java.lang.String, providerName: scala.Option[java.lang.String] = None, displayName: scala.Option[java.lang.String] = None, addTags: scala.Option[scala.List[models.Tag]] = None, removeTags: scala.Option[scala.List[java.lang.String]] = None, description: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None)
final case class DescribeProductOutput(productViewSummary: scala.Option[models.ProductViewSummary] = None, provisioningArtifacts: scala.Option[scala.List[models.ProvisioningArtifact]] = None)
final case class DescribePortfolioOutput(portfolioDetail: scala.Option[models.PortfolioDetail] = None, tags: scala.Option[scala.List[models.Tag]] = None, tagOptions: scala.Option[scala.List[models.TagOptionDetail]] = None)
final case class ListTagOptionsFilters(key: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None, active: scala.Option[scala.Boolean] = None)
case object InvalidParametersException
case object DuplicateResourceException
case object InvalidStateException
final case class ProvisioningArtifactDetail(id: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None, `type`: scala.Option[java.lang.String] = None, createdTime: scala.Option[java.time.Instant] = None)
final case class ListLaunchPathsInput(productId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None, pageSize: scala.Option[scala.Int] = None, pageToken: scala.Option[java.lang.String] = None)
final case class DescribeProductViewOutput(productViewSummary: scala.Option[models.ProductViewSummary] = None, provisioningArtifacts: scala.Option[scala.List[models.ProvisioningArtifact]] = None)
final case class DescribeProvisioningArtifactInput(provisioningArtifactId: java.lang.String, productId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None, verbose: scala.Option[scala.Boolean] = None)
final case class DescribeRecordOutput(recordDetail: scala.Option[models.RecordDetail] = None, recordOutputs: scala.Option[scala.List[models.RecordOutput]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class ProvisionProductInput(provisionToken: java.lang.String, provisionedProductName: java.lang.String, productId: java.lang.String, provisioningArtifactId: java.lang.String, provisioningParameters: scala.Option[scala.List[models.ProvisioningParameter]] = None, notificationArns: scala.Option[scala.List[java.lang.String]] = None, pathId: scala.Option[java.lang.String] = None, tags: scala.Option[scala.List[models.Tag]] = None, acceptLanguage: scala.Option[java.lang.String] = None)
case object TagOptionNotMigratedException
final case class UpdateProvisioningArtifactOutput(provisioningArtifactDetail: scala.Option[models.ProvisioningArtifactDetail] = None, info: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = None, status: scala.Option[java.lang.String] = None)
final case class CreateConstraintInput(idempotencyToken: java.lang.String, `type`: java.lang.String, portfolioId: java.lang.String, productId: java.lang.String, parameters: java.lang.String, description: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None)
final case class ListConstraintsForPortfolioInput(portfolioId: java.lang.String, productId: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None, pageSize: scala.Option[scala.Int] = None, pageToken: scala.Option[java.lang.String] = None)
final case class Tag(key: java.lang.String, value: java.lang.String)
final case class DescribeConstraintOutput(constraintDetail: scala.Option[models.ConstraintDetail] = None, constraintParameters: scala.Option[java.lang.String] = None, status: scala.Option[java.lang.String] = None)
final case class ProductViewSummary(distributor: scala.Option[java.lang.String] = None, supportUrl: scala.Option[java.lang.String] = None, supportDescription: scala.Option[java.lang.String] = None, owner: scala.Option[java.lang.String] = None, hasDefaultPath: scala.Option[scala.Boolean] = None, id: scala.Option[java.lang.String] = None, productId: scala.Option[java.lang.String] = None, `type`: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, shortDescription: scala.Option[java.lang.String] = None, supportEmail: scala.Option[java.lang.String] = None)
final case class SearchProductsInput(sortOrder: scala.Option[java.lang.String] = None, pageSize: scala.Option[scala.Int] = None, filters: scala.Option[scala.collection.immutable.Map[java.lang.String, scala.List[java.lang.String]]] = None, pageToken: scala.Option[java.lang.String] = None, sortBy: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None)
case object AssociatePrincipalWithPortfolioOutput
final case class TagOptionSummary(key: scala.Option[java.lang.String] = None, values: scala.Option[scala.List[java.lang.String]] = None)
final case class ListRecordHistorySearchFilter(key: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None)
final case class DescribeProductInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class ProvisionProductOutput(recordDetail: scala.Option[models.RecordDetail] = None)
final case class CreateProvisioningArtifactOutput(provisioningArtifactDetail: scala.Option[models.ProvisioningArtifactDetail] = None, info: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = None, status: scala.Option[java.lang.String] = None)
final case class SearchProductsOutput(productViewSummaries: scala.Option[scala.List[models.ProductViewSummary]] = None, productViewAggregations: scala.Option[scala.collection.immutable.Map[java.lang.String, scala.List[models.ProductViewAggregationValue]]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class ListPortfolioAccessInput(portfolioId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class CopyProductInput(sourceProductArn: java.lang.String, idempotencyToken: java.lang.String, targetProductId: scala.Option[java.lang.String] = None, targetProductName: scala.Option[java.lang.String] = None, sourceProvisioningArtifactIdentifiers: scala.Option[scala.List[scala.collection.immutable.Map[java.lang.String, java.lang.String]]] = None, copyOptions: scala.Option[scala.List[java.lang.String]] = None, acceptLanguage: scala.Option[java.lang.String] = None)
final case class DisassociatePrincipalFromPortfolioInput(portfolioId: java.lang.String, principalARN: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class AcceptPortfolioShareInput(portfolioId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class SearchProductsAsAdminOutput(productViewDetails: scala.Option[scala.List[models.ProductViewDetail]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class DescribeConstraintInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class UpdateProvisionedProductInput(updateToken: java.lang.String, provisioningParameters: scala.Option[scala.List[models.UpdateProvisioningParameter]] = None, provisionedProductId: scala.Option[java.lang.String] = None, productId: scala.Option[java.lang.String] = None, provisioningArtifactId: scala.Option[java.lang.String] = None, pathId: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None, provisionedProductName: scala.Option[java.lang.String] = None)
final case class UpdatePortfolioOutput(portfolioDetail: scala.Option[models.PortfolioDetail] = None, tags: scala.Option[scala.List[models.Tag]] = None)
final case class TerminateProvisionedProductInput(terminateToken: java.lang.String, provisionedProductId: scala.Option[java.lang.String] = None, ignoreErrors: scala.Option[scala.Boolean] = None, acceptLanguage: scala.Option[java.lang.String] = None, provisionedProductName: scala.Option[java.lang.String] = None)
final case class ScanProvisionedProductsInput(acceptLanguage: scala.Option[java.lang.String] = None, accessLevelFilter: scala.Option[models.AccessLevelFilter] = None, pageSize: scala.Option[scala.Int] = None, pageToken: scala.Option[java.lang.String] = None)
final case class ResourceDetail(name: scala.Option[java.lang.String] = None, id: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None, createdTime: scala.Option[java.time.Instant] = None, arn: scala.Option[java.lang.String] = None)
final case class DescribeProvisioningParametersOutput(provisioningArtifactParameters: scala.Option[scala.List[models.ProvisioningArtifactParameter]] = None, constraintSummaries: scala.Option[scala.List[models.ConstraintSummary]] = None, usageInstructions: scala.Option[scala.List[models.UsageInstruction]] = None, tagOptions: scala.Option[scala.List[models.TagOptionSummary]] = None)
final case class ScanProvisionedProductsOutput(provisionedProducts: scala.Option[scala.List[models.ProvisionedProductDetail]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class LaunchPathSummary(id: scala.Option[java.lang.String] = None, constraintSummaries: scala.Option[scala.List[models.ConstraintSummary]] = None, tags: scala.Option[scala.List[models.Tag]] = None, name: scala.Option[java.lang.String] = None)
final case class DescribeTagOptionInput(id: java.lang.String)
final case class CreateConstraintOutput(constraintDetail: scala.Option[models.ConstraintDetail] = None, constraintParameters: scala.Option[java.lang.String] = None, status: scala.Option[java.lang.String] = None)
final case class UpdateConstraintInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None)
case object AssociateTagOptionWithResourceOutput
final case class ListPrincipalsForPortfolioOutput(principals: scala.Option[scala.List[models.Principal]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class ListProvisioningArtifactsOutput(provisioningArtifactDetails: scala.Option[scala.List[models.ProvisioningArtifactDetail]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class UpdateProvisioningParameter(key: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None, usePreviousValue: scala.Option[scala.Boolean] = None)
final case class ProvisioningArtifact(id: scala.Option[java.lang.String] = None, name: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None, createdTime: scala.Option[java.time.Instant] = None)
final case class ListPortfoliosInput(acceptLanguage: scala.Option[java.lang.String] = None, pageToken: scala.Option[java.lang.String] = None, pageSize: scala.Option[scala.Int] = None)
final case class CreatePortfolioShareInput(portfolioId: java.lang.String, accountId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class Principal(principalARN: scala.Option[java.lang.String] = None, principalType: scala.Option[java.lang.String] = None)
final case class ListTagOptionsInput(filters: scala.Option[models.ListTagOptionsFilters] = None, pageSize: scala.Option[scala.Int] = None, pageToken: scala.Option[java.lang.String] = None)
final case class TerminateProvisionedProductOutput(recordDetail: scala.Option[models.RecordDetail] = None)
final case class RejectPortfolioShareInput(portfolioId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
case object DeleteProductOutput
final case class RecordDetail(recordType: scala.Option[java.lang.String] = None, provisionedProductType: scala.Option[java.lang.String] = None, provisionedProductName: scala.Option[java.lang.String] = None, status: scala.Option[java.lang.String] = None, productId: scala.Option[java.lang.String] = None, provisionedProductId: scala.Option[java.lang.String] = None, provisioningArtifactId: scala.Option[java.lang.String] = None, pathId: scala.Option[java.lang.String] = None, recordId: scala.Option[java.lang.String] = None, recordTags: scala.Option[scala.List[models.RecordTag]] = None, updatedTime: scala.Option[java.time.Instant] = None, createdTime: scala.Option[java.time.Instant] = None, recordErrors: scala.Option[scala.List[models.RecordError]] = None)
final case class DescribeProvisioningParametersInput(productId: java.lang.String, provisioningArtifactId: java.lang.String, pathId: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None)
final case class CreatePortfolioInput(idempotencyToken: java.lang.String, providerName: java.lang.String, displayName: java.lang.String, tags: scala.Option[scala.List[models.Tag]] = None, description: scala.Option[java.lang.String] = None, acceptLanguage: scala.Option[java.lang.String] = None)
final case class CreateProvisioningArtifactInput(productId: java.lang.String, parameters: models.ProvisioningArtifactProperties, idempotencyToken: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
case object AssociateProductWithPortfolioOutput
final case class ListRecordHistoryOutput(recordDetails: scala.Option[scala.List[models.RecordDetail]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class DisassociateProductFromPortfolioInput(productId: java.lang.String, portfolioId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class ListPortfolioAccessOutput(accountIds: scala.Option[scala.List[java.lang.String]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class DescribeRecordInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None, pageToken: scala.Option[java.lang.String] = None, pageSize: scala.Option[scala.Int] = None)
case object DeletePortfolioShareOutput
final case class ListPrincipalsForPortfolioInput(portfolioId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None, pageSize: scala.Option[scala.Int] = None, pageToken: scala.Option[java.lang.String] = None)
case object AcceptPortfolioShareOutput
case object RejectPortfolioShareOutput
final case class ListAcceptedPortfolioSharesInput(acceptLanguage: scala.Option[java.lang.String] = None, pageToken: scala.Option[java.lang.String] = None, pageSize: scala.Option[scala.Int] = None)
case object DisassociatePrincipalFromPortfolioOutput
final case class AccessLevelFilter(key: scala.Option[java.lang.String] = None, value: scala.Option[java.lang.String] = None)
final case class DeleteConstraintInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class ConstraintSummary(`type`: scala.Option[java.lang.String] = None, description: scala.Option[java.lang.String] = None)
final case class DescribeProvisionedProductInput(id: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class DeletePortfolioShareInput(portfolioId: java.lang.String, accountId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)
final case class ListLaunchPathsOutput(launchPathSummaries: scala.Option[scala.List[models.LaunchPathSummary]] = None, nextPageToken: scala.Option[java.lang.String] = None)
final case class UpdateTagOptionInput(id: java.lang.String, value: scala.Option[java.lang.String] = None, active: scala.Option[scala.Boolean] = None)
final case class DeleteProvisioningArtifactInput(productId: java.lang.String, provisioningArtifactId: java.lang.String, acceptLanguage: scala.Option[java.lang.String] = None)