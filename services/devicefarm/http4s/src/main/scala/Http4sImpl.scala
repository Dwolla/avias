package org.lyranthe.araethura.devicefarm.http4s
import org.http4s.Method._
import org.lyranthe.araethura.devicefarm.circe._
import org.lyranthe.araethura.devicefarm.models
class AmazondevicefarmClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.devicefarm.Amazondevicefarm[F] {
  private[this] final val ServiceType: String = "devicefarm"
  private[this] final val ServiceAndPrefix: Option[String] = Some("DeviceFarm_20150623")
  override def listProjects(input: models.ListProjectsRequest): F[models.ListProjectsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListProjectsResult, models.ListProjectsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListProjects", POST, "/", input)
  override def deleteRemoteAccessSession(input: models.DeleteRemoteAccessSessionRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteRemoteAccessSessionRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteRemoteAccessSession", POST, "/", input)
  override def listOfferingTransactions(input: models.ListOfferingTransactionsRequest): F[models.ListOfferingTransactionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListOfferingTransactionsResult, models.ListOfferingTransactionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListOfferingTransactions", POST, "/", input)
  override def getOfferingStatus(input: models.GetOfferingStatusRequest): F[models.GetOfferingStatusResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetOfferingStatusResult, models.GetOfferingStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetOfferingStatus", POST, "/", input)
  override def getUpload(input: models.GetUploadRequest): F[models.GetUploadResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetUploadResult, models.GetUploadRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetUpload", POST, "/", input)
  override def listNetworkProfiles(input: models.ListNetworkProfilesRequest): F[models.ListNetworkProfilesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListNetworkProfilesResult, models.ListNetworkProfilesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListNetworkProfiles", POST, "/", input)
  override def listSuites(input: models.ListSuitesRequest): F[models.ListSuitesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListSuitesResult, models.ListSuitesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListSuites", POST, "/", input)
  override def installToRemoteAccessSession(input: models.InstallToRemoteAccessSessionRequest): F[models.InstallToRemoteAccessSessionResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.InstallToRemoteAccessSessionResult, models.InstallToRemoteAccessSessionRequest](client, awsData, ServiceType, ServiceAndPrefix, "InstallToRemoteAccessSession", POST, "/", input)
  override def createRemoteAccessSession(input: models.CreateRemoteAccessSessionRequest): F[models.CreateRemoteAccessSessionResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateRemoteAccessSessionResult, models.CreateRemoteAccessSessionRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateRemoteAccessSession", POST, "/", input)
  override def deleteDevicePool(input: models.DeleteDevicePoolRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteDevicePoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDevicePool", POST, "/", input)
  override def updateNetworkProfile(input: models.UpdateNetworkProfileRequest): F[models.UpdateNetworkProfileResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateNetworkProfileResult, models.UpdateNetworkProfileRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateNetworkProfile", POST, "/", input)
  override def getAccountSettings: F[models.GetAccountSettingsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetAccountSettingsResult, scala.Unit](client, awsData, ServiceType, ServiceAndPrefix, "GetAccountSettings", POST, "/", ())
  override def deleteProject(input: models.DeleteProjectRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteProjectRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteProject", POST, "/", input)
  override def listOfferings(input: models.ListOfferingsRequest): F[models.ListOfferingsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListOfferingsResult, models.ListOfferingsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListOfferings", POST, "/", input)
  override def listDevicePools(input: models.ListDevicePoolsRequest): F[models.ListDevicePoolsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListDevicePoolsResult, models.ListDevicePoolsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListDevicePools", POST, "/", input)
  override def deleteUpload(input: models.DeleteUploadRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteUploadRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteUpload", POST, "/", input)
  override def listUniqueProblems(input: models.ListUniqueProblemsRequest): F[models.ListUniqueProblemsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListUniqueProblemsResult, models.ListUniqueProblemsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUniqueProblems", POST, "/", input)
  override def createDevicePool(input: models.CreateDevicePoolRequest): F[models.CreateDevicePoolResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDevicePoolResult, models.CreateDevicePoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDevicePool", POST, "/", input)
  override def getNetworkProfile(input: models.GetNetworkProfileRequest): F[models.GetNetworkProfileResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetNetworkProfileResult, models.GetNetworkProfileRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetNetworkProfile", POST, "/", input)
  override def scheduleRun(input: models.ScheduleRunRequest): F[models.ScheduleRunResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ScheduleRunResult, models.ScheduleRunRequest](client, awsData, ServiceType, ServiceAndPrefix, "ScheduleRun", POST, "/", input)
  override def stopRemoteAccessSession(input: models.StopRemoteAccessSessionRequest): F[models.StopRemoteAccessSessionResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StopRemoteAccessSessionResult, models.StopRemoteAccessSessionRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopRemoteAccessSession", POST, "/", input)
  override def createNetworkProfile(input: models.CreateNetworkProfileRequest): F[models.CreateNetworkProfileResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateNetworkProfileResult, models.CreateNetworkProfileRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateNetworkProfile", POST, "/", input)
  override def createUpload(input: models.CreateUploadRequest): F[models.CreateUploadResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateUploadResult, models.CreateUploadRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateUpload", POST, "/", input)
  override def renewOffering(input: models.RenewOfferingRequest): F[models.RenewOfferingResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RenewOfferingResult, models.RenewOfferingRequest](client, awsData, ServiceType, ServiceAndPrefix, "RenewOffering", POST, "/", input)
  override def listDevices(input: models.ListDevicesRequest): F[models.ListDevicesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListDevicesResult, models.ListDevicesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListDevices", POST, "/", input)
  override def stopRun(input: models.StopRunRequest): F[models.StopRunResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StopRunResult, models.StopRunRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopRun", POST, "/", input)
  override def getTest(input: models.GetTestRequest): F[models.GetTestResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetTestResult, models.GetTestRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetTest", POST, "/", input)
  override def listRemoteAccessSessions(input: models.ListRemoteAccessSessionsRequest): F[models.ListRemoteAccessSessionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListRemoteAccessSessionsResult, models.ListRemoteAccessSessionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListRemoteAccessSessions", POST, "/", input)
  override def deleteNetworkProfile(input: models.DeleteNetworkProfileRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteNetworkProfileRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteNetworkProfile", POST, "/", input)
  override def getRemoteAccessSession(input: models.GetRemoteAccessSessionRequest): F[models.GetRemoteAccessSessionResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetRemoteAccessSessionResult, models.GetRemoteAccessSessionRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetRemoteAccessSession", POST, "/", input)
  override def listArtifacts(input: models.ListArtifactsRequest): F[models.ListArtifactsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListArtifactsResult, models.ListArtifactsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListArtifacts", POST, "/", input)
  override def listRuns(input: models.ListRunsRequest): F[models.ListRunsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListRunsResult, models.ListRunsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListRuns", POST, "/", input)
  override def updateDevicePool(input: models.UpdateDevicePoolRequest): F[models.UpdateDevicePoolResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateDevicePoolResult, models.UpdateDevicePoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDevicePool", POST, "/", input)
  override def getJob(input: models.GetJobRequest): F[models.GetJobResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetJobResult, models.GetJobRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetJob", POST, "/", input)
  override def getSuite(input: models.GetSuiteRequest): F[models.GetSuiteResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetSuiteResult, models.GetSuiteRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetSuite", POST, "/", input)
  override def listSamples(input: models.ListSamplesRequest): F[models.ListSamplesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListSamplesResult, models.ListSamplesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListSamples", POST, "/", input)
  override def createProject(input: models.CreateProjectRequest): F[models.CreateProjectResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateProjectResult, models.CreateProjectRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateProject", POST, "/", input)
  override def getDevicePool(input: models.GetDevicePoolRequest): F[models.GetDevicePoolResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDevicePoolResult, models.GetDevicePoolRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDevicePool", POST, "/", input)
  override def listUploads(input: models.ListUploadsRequest): F[models.ListUploadsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListUploadsResult, models.ListUploadsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListUploads", POST, "/", input)
  override def listJobs(input: models.ListJobsRequest): F[models.ListJobsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListJobsResult, models.ListJobsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListJobs", POST, "/", input)
  override def listOfferingPromotions(input: models.ListOfferingPromotionsRequest): F[models.ListOfferingPromotionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListOfferingPromotionsResult, models.ListOfferingPromotionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListOfferingPromotions", POST, "/", input)
  override def listTests(input: models.ListTestsRequest): F[models.ListTestsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTestsResult, models.ListTestsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTests", POST, "/", input)
  override def getDevicePoolCompatibility(input: models.GetDevicePoolCompatibilityRequest): F[models.GetDevicePoolCompatibilityResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDevicePoolCompatibilityResult, models.GetDevicePoolCompatibilityRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDevicePoolCompatibility", POST, "/", input)
  override def purchaseOffering(input: models.PurchaseOfferingRequest): F[models.PurchaseOfferingResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PurchaseOfferingResult, models.PurchaseOfferingRequest](client, awsData, ServiceType, ServiceAndPrefix, "PurchaseOffering", POST, "/", input)
  override def getRun(input: models.GetRunRequest): F[models.GetRunResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetRunResult, models.GetRunRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetRun", POST, "/", input)
  override def updateProject(input: models.UpdateProjectRequest): F[models.UpdateProjectResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateProjectResult, models.UpdateProjectRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateProject", POST, "/", input)
  override def getDevice(input: models.GetDeviceRequest): F[models.GetDeviceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDeviceResult, models.GetDeviceRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDevice", POST, "/", input)
  override def getProject(input: models.GetProjectRequest): F[models.GetProjectResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetProjectResult, models.GetProjectRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetProject", POST, "/", input)
  override def deleteRun(input: models.DeleteRunRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteRunRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteRun", POST, "/", input)
}