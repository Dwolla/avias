package avias.dynamodbstreams.models
final case class KeySchemaElement(attributeName: java.lang.String, keyType: java.lang.String)
final case class ListStreamsInput(tableName: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None, exclusiveStartStreamArn: scala.Option[java.lang.String] = scala.None)
final case class GetRecordsInput(shardIterator: java.lang.String, limit: scala.Option[scala.Int] = scala.None)
final case class LimitExceededException(message: scala.Option[java.lang.String] = scala.None)
final case class AttributeValue(bs: scala.Option[scala.List[scala.Array[scala.Byte]]] = scala.None, ss: scala.Option[scala.List[java.lang.String]] = scala.None, m: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodbstreams.models.AttributeValue]] = scala.None, `null`: scala.Option[scala.Boolean] = scala.None, b: scala.Option[scala.Array[scala.Byte]] = scala.None, s: scala.Option[java.lang.String] = scala.None, n: scala.Option[java.lang.String] = scala.None, ns: scala.Option[scala.List[java.lang.String]] = scala.None, bool: scala.Option[scala.Boolean] = scala.None, l: scala.Option[scala.List[avias.dynamodbstreams.models.AttributeValue]] = scala.None)
final case class SequenceNumberRange(startingSequenceNumber: scala.Option[java.lang.String] = scala.None, endingSequenceNumber: scala.Option[java.lang.String] = scala.None)
final case class Stream(streamArn: scala.Option[java.lang.String] = scala.None, tableName: scala.Option[java.lang.String] = scala.None, streamLabel: scala.Option[java.lang.String] = scala.None)
final case class Record(eventID: scala.Option[java.lang.String] = scala.None, eventVersion: scala.Option[java.lang.String] = scala.None, eventSource: scala.Option[java.lang.String] = scala.None, awsRegion: scala.Option[java.lang.String] = scala.None, eventName: scala.Option[java.lang.String] = scala.None, dynamodb: scala.Option[avias.dynamodbstreams.models.StreamRecord] = scala.None, userIdentity: scala.Option[avias.dynamodbstreams.models.Identity] = scala.None)
final case class GetShardIteratorOutput(shardIterator: scala.Option[java.lang.String] = scala.None)
final case class StreamRecord(keys: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodbstreams.models.AttributeValue]] = scala.None, newImage: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodbstreams.models.AttributeValue]] = scala.None, oldImage: scala.Option[scala.collection.immutable.Map[java.lang.String, avias.dynamodbstreams.models.AttributeValue]] = scala.None, sequenceNumber: scala.Option[java.lang.String] = scala.None, streamViewType: scala.Option[java.lang.String] = scala.None, sizeBytes: scala.Option[scala.Long] = scala.None, approximateCreationDateTime: scala.Option[java.time.Instant] = scala.None)
final case class Identity(principalId: scala.Option[java.lang.String] = scala.None, `type`: scala.Option[java.lang.String] = scala.None)
final case class DescribeStreamInput(streamArn: java.lang.String, limit: scala.Option[scala.Int] = scala.None, exclusiveStartShardId: scala.Option[java.lang.String] = scala.None)
final case class Shard(shardId: scala.Option[java.lang.String] = scala.None, parentShardId: scala.Option[java.lang.String] = scala.None, sequenceNumberRange: scala.Option[avias.dynamodbstreams.models.SequenceNumberRange] = scala.None)
final case class StreamDescription(streamStatus: scala.Option[java.lang.String] = scala.None, tableName: scala.Option[java.lang.String] = scala.None, streamLabel: scala.Option[java.lang.String] = scala.None, streamArn: scala.Option[java.lang.String] = scala.None, streamViewType: scala.Option[java.lang.String] = scala.None, lastEvaluatedShardId: scala.Option[java.lang.String] = scala.None, keySchema: scala.Option[scala.List[avias.dynamodbstreams.models.KeySchemaElement]] = scala.None, shards: scala.Option[scala.List[avias.dynamodbstreams.models.Shard]] = scala.None, creationRequestDateTime: scala.Option[java.time.Instant] = scala.None)
final case class TrimmedDataAccessException(message: scala.Option[java.lang.String] = scala.None)
final case class GetRecordsOutput(records: scala.Option[scala.List[avias.dynamodbstreams.models.Record]] = scala.None, nextShardIterator: scala.Option[java.lang.String] = scala.None)
final case class ResourceNotFoundException(message: scala.Option[java.lang.String] = scala.None)
final case class DescribeStreamOutput(streamDescription: scala.Option[avias.dynamodbstreams.models.StreamDescription] = scala.None)
final case class GetShardIteratorInput(streamArn: java.lang.String, shardId: java.lang.String, shardIteratorType: java.lang.String, sequenceNumber: scala.Option[java.lang.String] = scala.None)
final case class ListStreamsOutput(streams: scala.Option[scala.List[avias.dynamodbstreams.models.Stream]] = scala.None, lastEvaluatedStreamArn: scala.Option[java.lang.String] = scala.None)
final case class InternalServerError(message: scala.Option[java.lang.String] = scala.None)
final case class ExpiredIteratorException(message: scala.Option[java.lang.String] = scala.None)