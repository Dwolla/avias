package org.lyranthe.araethura.ssm.http4s
import org.http4s.Method._
import org.lyranthe.araethura.ssm.circe._
import org.lyranthe.araethura.ssm.models
class AmazonssmClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.ssm.Amazonssm[F] {
  private[this] final val ServiceType: String = "ssm"
  private[this] final val ServiceAndPrefix: Option[String] = Some("AmazonSSM")
  override def getDeployablePatchSnapshotForInstance(input: models.GetDeployablePatchSnapshotForInstanceRequest): F[models.GetDeployablePatchSnapshotForInstanceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDeployablePatchSnapshotForInstanceResult, models.GetDeployablePatchSnapshotForInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDeployablePatchSnapshotForInstance", POST, "/", input)
  override def deleteParameters(input: models.DeleteParametersRequest): F[models.DeleteParametersResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteParametersResult, models.DeleteParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteParameters", POST, "/", input)
  override def listDocuments(input: models.ListDocumentsRequest): F[models.ListDocumentsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListDocumentsResult, models.ListDocumentsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListDocuments", POST, "/", input)
  override def listResourceDataSync(input: models.ListResourceDataSyncRequest): F[models.ListResourceDataSyncResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListResourceDataSyncResult, models.ListResourceDataSyncRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListResourceDataSync", POST, "/", input)
  override def describeInstancePatches(input: models.DescribeInstancePatchesRequest): F[models.DescribeInstancePatchesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeInstancePatchesResult, models.DescribeInstancePatchesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstancePatches", POST, "/", input)
  override def describePatchBaselines(input: models.DescribePatchBaselinesRequest): F[models.DescribePatchBaselinesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribePatchBaselinesResult, models.DescribePatchBaselinesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribePatchBaselines", POST, "/", input)
  override def describeEffectiveInstanceAssociations(input: models.DescribeEffectiveInstanceAssociationsRequest): F[models.DescribeEffectiveInstanceAssociationsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeEffectiveInstanceAssociationsResult, models.DescribeEffectiveInstanceAssociationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEffectiveInstanceAssociations", POST, "/", input)
  override def describeInstancePatchStatesForPatchGroup(input: models.DescribeInstancePatchStatesForPatchGroupRequest): F[models.DescribeInstancePatchStatesForPatchGroupResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeInstancePatchStatesForPatchGroupResult, models.DescribeInstancePatchStatesForPatchGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstancePatchStatesForPatchGroup", POST, "/", input)
  override def describeMaintenanceWindowExecutions(input: models.DescribeMaintenanceWindowExecutionsRequest): F[models.DescribeMaintenanceWindowExecutionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeMaintenanceWindowExecutionsResult, models.DescribeMaintenanceWindowExecutionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindowExecutions", POST, "/", input)
  override def updateAssociation(input: models.UpdateAssociationRequest): F[models.UpdateAssociationResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateAssociationResult, models.UpdateAssociationRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateAssociation", POST, "/", input)
  override def describeInstanceAssociationsStatus(input: models.DescribeInstanceAssociationsStatusRequest): F[models.DescribeInstanceAssociationsStatusResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeInstanceAssociationsStatusResult, models.DescribeInstanceAssociationsStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstanceAssociationsStatus", POST, "/", input)
  override def describeEffectivePatchesForPatchBaseline(input: models.DescribeEffectivePatchesForPatchBaselineRequest): F[models.DescribeEffectivePatchesForPatchBaselineResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeEffectivePatchesForPatchBaselineResult, models.DescribeEffectivePatchesForPatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeEffectivePatchesForPatchBaseline", POST, "/", input)
  override def createAssociation(input: models.CreateAssociationRequest): F[models.CreateAssociationResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateAssociationResult, models.CreateAssociationRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateAssociation", POST, "/", input)
  override def createPatchBaseline(input: models.CreatePatchBaselineRequest): F[models.CreatePatchBaselineResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreatePatchBaselineResult, models.CreatePatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreatePatchBaseline", POST, "/", input)
  override def createDocument(input: models.CreateDocumentRequest): F[models.CreateDocumentResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDocumentResult, models.CreateDocumentRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDocument", POST, "/", input)
  override def registerPatchBaselineForPatchGroup(input: models.RegisterPatchBaselineForPatchGroupRequest): F[models.RegisterPatchBaselineForPatchGroupResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RegisterPatchBaselineForPatchGroupResult, models.RegisterPatchBaselineForPatchGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterPatchBaselineForPatchGroup", POST, "/", input)
  override def createAssociationBatch(input: models.CreateAssociationBatchRequest): F[models.CreateAssociationBatchResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateAssociationBatchResult, models.CreateAssociationBatchRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateAssociationBatch", POST, "/", input)
  override def deleteResourceDataSync(input: models.DeleteResourceDataSyncRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteResourceDataSyncRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteResourceDataSync", POST, "/", input)
  override def getCommandInvocation(input: models.GetCommandInvocationRequest): F[models.GetCommandInvocationResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetCommandInvocationResult, models.GetCommandInvocationRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetCommandInvocation", POST, "/", input)
  override def modifyDocumentPermission(input: models.ModifyDocumentPermissionRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.ModifyDocumentPermissionRequest](client, awsData, ServiceType, ServiceAndPrefix, "ModifyDocumentPermission", POST, "/", input)
  override def updateMaintenanceWindowTask(input: models.UpdateMaintenanceWindowTaskRequest): F[models.UpdateMaintenanceWindowTaskResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateMaintenanceWindowTaskResult, models.UpdateMaintenanceWindowTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateMaintenanceWindowTask", POST, "/", input)
  override def describeMaintenanceWindowExecutionTasks(input: models.DescribeMaintenanceWindowExecutionTasksRequest): F[models.DescribeMaintenanceWindowExecutionTasksResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeMaintenanceWindowExecutionTasksResult, models.DescribeMaintenanceWindowExecutionTasksRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindowExecutionTasks", POST, "/", input)
  override def describePatchGroupState(input: models.DescribePatchGroupStateRequest): F[models.DescribePatchGroupStateResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribePatchGroupStateResult, models.DescribePatchGroupStateRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribePatchGroupState", POST, "/", input)
  override def getMaintenanceWindowExecutionTask(input: models.GetMaintenanceWindowExecutionTaskRequest): F[models.GetMaintenanceWindowExecutionTaskResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetMaintenanceWindowExecutionTaskResult, models.GetMaintenanceWindowExecutionTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetMaintenanceWindowExecutionTask", POST, "/", input)
  override def getParametersByPath(input: models.GetParametersByPathRequest): F[models.GetParametersByPathResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetParametersByPathResult, models.GetParametersByPathRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetParametersByPath", POST, "/", input)
  override def registerTaskWithMaintenanceWindow(input: models.RegisterTaskWithMaintenanceWindowRequest): F[models.RegisterTaskWithMaintenanceWindowResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RegisterTaskWithMaintenanceWindowResult, models.RegisterTaskWithMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterTaskWithMaintenanceWindow", POST, "/", input)
  override def sendAutomationSignal(input: models.SendAutomationSignalRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.SendAutomationSignalRequest](client, awsData, ServiceType, ServiceAndPrefix, "SendAutomationSignal", POST, "/", input)
  override def listDocumentVersions(input: models.ListDocumentVersionsRequest): F[models.ListDocumentVersionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListDocumentVersionsResult, models.ListDocumentVersionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListDocumentVersions", POST, "/", input)
  override def updateManagedInstanceRole(input: models.UpdateManagedInstanceRoleRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.UpdateManagedInstanceRoleRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateManagedInstanceRole", POST, "/", input)
  override def getInventorySchema(input: models.GetInventorySchemaRequest): F[models.GetInventorySchemaResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetInventorySchemaResult, models.GetInventorySchemaRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInventorySchema", POST, "/", input)
  override def describeMaintenanceWindows(input: models.DescribeMaintenanceWindowsRequest): F[models.DescribeMaintenanceWindowsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeMaintenanceWindowsResult, models.DescribeMaintenanceWindowsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindows", POST, "/", input)
  override def describeAvailablePatches(input: models.DescribeAvailablePatchesRequest): F[models.DescribeAvailablePatchesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeAvailablePatchesResult, models.DescribeAvailablePatchesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAvailablePatches", POST, "/", input)
  override def getInventory(input: models.GetInventoryRequest): F[models.GetInventoryResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetInventoryResult, models.GetInventoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInventory", POST, "/", input)
  override def updatePatchBaseline(input: models.UpdatePatchBaselineRequest): F[models.UpdatePatchBaselineResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdatePatchBaselineResult, models.UpdatePatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdatePatchBaseline", POST, "/", input)
  override def listTagsForResource(input: models.ListTagsForResourceRequest): F[models.ListTagsForResourceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListTagsForResourceResult, models.ListTagsForResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListTagsForResource", POST, "/", input)
  override def describeMaintenanceWindowExecutionTaskInvocations(input: models.DescribeMaintenanceWindowExecutionTaskInvocationsRequest): F[models.DescribeMaintenanceWindowExecutionTaskInvocationsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeMaintenanceWindowExecutionTaskInvocationsResult, models.DescribeMaintenanceWindowExecutionTaskInvocationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindowExecutionTaskInvocations", POST, "/", input)
  override def registerDefaultPatchBaseline(input: models.RegisterDefaultPatchBaselineRequest): F[models.RegisterDefaultPatchBaselineResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RegisterDefaultPatchBaselineResult, models.RegisterDefaultPatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterDefaultPatchBaseline", POST, "/", input)
  override def describeParameters(input: models.DescribeParametersRequest): F[models.DescribeParametersResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeParametersResult, models.DescribeParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeParameters", POST, "/", input)
  override def sendCommand(input: models.SendCommandRequest): F[models.SendCommandResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.SendCommandResult, models.SendCommandRequest](client, awsData, ServiceType, ServiceAndPrefix, "SendCommand", POST, "/", input)
  override def describeMaintenanceWindowTasks(input: models.DescribeMaintenanceWindowTasksRequest): F[models.DescribeMaintenanceWindowTasksResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeMaintenanceWindowTasksResult, models.DescribeMaintenanceWindowTasksRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindowTasks", POST, "/", input)
  override def listAssociationVersions(input: models.ListAssociationVersionsRequest): F[models.ListAssociationVersionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListAssociationVersionsResult, models.ListAssociationVersionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAssociationVersions", POST, "/", input)
  override def deregisterTaskFromMaintenanceWindow(input: models.DeregisterTaskFromMaintenanceWindowRequest): F[models.DeregisterTaskFromMaintenanceWindowResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeregisterTaskFromMaintenanceWindowResult, models.DeregisterTaskFromMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterTaskFromMaintenanceWindow", POST, "/", input)
  override def updateDocument(input: models.UpdateDocumentRequest): F[models.UpdateDocumentResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateDocumentResult, models.UpdateDocumentRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDocument", POST, "/", input)
  override def updateAssociationStatus(input: models.UpdateAssociationStatusRequest): F[models.UpdateAssociationStatusResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateAssociationStatusResult, models.UpdateAssociationStatusRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateAssociationStatus", POST, "/", input)
  override def getPatchBaselineForPatchGroup(input: models.GetPatchBaselineForPatchGroupRequest): F[models.GetPatchBaselineForPatchGroupResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetPatchBaselineForPatchGroupResult, models.GetPatchBaselineForPatchGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetPatchBaselineForPatchGroup", POST, "/", input)
  override def listInventoryEntries(input: models.ListInventoryEntriesRequest): F[models.ListInventoryEntriesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListInventoryEntriesResult, models.ListInventoryEntriesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListInventoryEntries", POST, "/", input)
  override def putInventory(input: models.PutInventoryRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.PutInventoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutInventory", POST, "/", input)
  override def getParameterHistory(input: models.GetParameterHistoryRequest): F[models.GetParameterHistoryResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetParameterHistoryResult, models.GetParameterHistoryRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetParameterHistory", POST, "/", input)
  override def listCommands(input: models.ListCommandsRequest): F[models.ListCommandsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListCommandsResult, models.ListCommandsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListCommands", POST, "/", input)
  override def getMaintenanceWindowTask(input: models.GetMaintenanceWindowTaskRequest): F[models.GetMaintenanceWindowTaskResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetMaintenanceWindowTaskResult, models.GetMaintenanceWindowTaskRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetMaintenanceWindowTask", POST, "/", input)
  override def createActivation(input: models.CreateActivationRequest): F[models.CreateActivationResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateActivationResult, models.CreateActivationRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateActivation", POST, "/", input)
  override def stopAutomationExecution(input: models.StopAutomationExecutionRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.StopAutomationExecutionRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopAutomationExecution", POST, "/", input)
  override def getPatchBaseline(input: models.GetPatchBaselineRequest): F[models.GetPatchBaselineResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetPatchBaselineResult, models.GetPatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetPatchBaseline", POST, "/", input)
  override def listResourceComplianceSummaries(input: models.ListResourceComplianceSummariesRequest): F[models.ListResourceComplianceSummariesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListResourceComplianceSummariesResult, models.ListResourceComplianceSummariesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListResourceComplianceSummaries", POST, "/", input)
  override def addTagsToResource(input: models.AddTagsToResourceRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AddTagsToResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "AddTagsToResource", POST, "/", input)
  override def deleteActivation(input: models.DeleteActivationRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteActivationRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteActivation", POST, "/", input)
  override def describeInstancePatchStates(input: models.DescribeInstancePatchStatesRequest): F[models.DescribeInstancePatchStatesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeInstancePatchStatesResult, models.DescribeInstancePatchStatesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstancePatchStates", POST, "/", input)
  override def getAutomationExecution(input: models.GetAutomationExecutionRequest): F[models.GetAutomationExecutionResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetAutomationExecutionResult, models.GetAutomationExecutionRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetAutomationExecution", POST, "/", input)
  override def createResourceDataSync(input: models.CreateResourceDataSyncRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.CreateResourceDataSyncRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateResourceDataSync", POST, "/", input)
  override def cancelCommand(input: models.CancelCommandRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.CancelCommandRequest](client, awsData, ServiceType, ServiceAndPrefix, "CancelCommand", POST, "/", input)
  override def updateMaintenanceWindow(input: models.UpdateMaintenanceWindowRequest): F[models.UpdateMaintenanceWindowResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateMaintenanceWindowResult, models.UpdateMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateMaintenanceWindow", POST, "/", input)
  override def getMaintenanceWindowExecution(input: models.GetMaintenanceWindowExecutionRequest): F[models.GetMaintenanceWindowExecutionResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetMaintenanceWindowExecutionResult, models.GetMaintenanceWindowExecutionRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetMaintenanceWindowExecution", POST, "/", input)
  override def getParameter(input: models.GetParameterRequest): F[models.GetParameterResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetParameterResult, models.GetParameterRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetParameter", POST, "/", input)
  override def startAutomationExecution(input: models.StartAutomationExecutionRequest): F[models.StartAutomationExecutionResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StartAutomationExecutionResult, models.StartAutomationExecutionRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartAutomationExecution", POST, "/", input)
  override def createMaintenanceWindow(input: models.CreateMaintenanceWindowRequest): F[models.CreateMaintenanceWindowResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateMaintenanceWindowResult, models.CreateMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateMaintenanceWindow", POST, "/", input)
  override def describeInstanceInformation(input: models.DescribeInstanceInformationRequest): F[models.DescribeInstanceInformationResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeInstanceInformationResult, models.DescribeInstanceInformationRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeInstanceInformation", POST, "/", input)
  override def putComplianceItems(input: models.PutComplianceItemsRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.PutComplianceItemsRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutComplianceItems", POST, "/", input)
  override def putParameter(input: models.PutParameterRequest): F[models.PutParameterResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutParameterResult, models.PutParameterRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutParameter", POST, "/", input)
  override def describeDocumentPermission(input: models.DescribeDocumentPermissionRequest): F[models.DescribeDocumentPermissionResponse] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeDocumentPermissionResponse, models.DescribeDocumentPermissionRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDocumentPermission", POST, "/", input)
  override def updateDocumentDefaultVersion(input: models.UpdateDocumentDefaultVersionRequest): F[models.UpdateDocumentDefaultVersionResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateDocumentDefaultVersionResult, models.UpdateDocumentDefaultVersionRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDocumentDefaultVersion", POST, "/", input)
  override def describeDocument(input: models.DescribeDocumentRequest): F[models.DescribeDocumentResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeDocumentResult, models.DescribeDocumentRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDocument", POST, "/", input)
  override def registerTargetWithMaintenanceWindow(input: models.RegisterTargetWithMaintenanceWindowRequest): F[models.RegisterTargetWithMaintenanceWindowResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RegisterTargetWithMaintenanceWindowResult, models.RegisterTargetWithMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "RegisterTargetWithMaintenanceWindow", POST, "/", input)
  override def listComplianceItems(input: models.ListComplianceItemsRequest): F[models.ListComplianceItemsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListComplianceItemsResult, models.ListComplianceItemsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListComplianceItems", POST, "/", input)
  override def deleteDocument(input: models.DeleteDocumentRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteDocumentRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDocument", POST, "/", input)
  override def deregisterManagedInstance(input: models.DeregisterManagedInstanceRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeregisterManagedInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterManagedInstance", POST, "/", input)
  override def deregisterPatchBaselineForPatchGroup(input: models.DeregisterPatchBaselineForPatchGroupRequest): F[models.DeregisterPatchBaselineForPatchGroupResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeregisterPatchBaselineForPatchGroupResult, models.DeregisterPatchBaselineForPatchGroupRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterPatchBaselineForPatchGroup", POST, "/", input)
  override def describeActivations(input: models.DescribeActivationsRequest): F[models.DescribeActivationsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeActivationsResult, models.DescribeActivationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeActivations", POST, "/", input)
  override def getDocument(input: models.GetDocumentRequest): F[models.GetDocumentResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDocumentResult, models.GetDocumentRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDocument", POST, "/", input)
  override def removeTagsFromResource(input: models.RemoveTagsFromResourceRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.RemoveTagsFromResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "RemoveTagsFromResource", POST, "/", input)
  override def getMaintenanceWindow(input: models.GetMaintenanceWindowRequest): F[models.GetMaintenanceWindowResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetMaintenanceWindowResult, models.GetMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetMaintenanceWindow", POST, "/", input)
  override def updateMaintenanceWindowTarget(input: models.UpdateMaintenanceWindowTargetRequest): F[models.UpdateMaintenanceWindowTargetResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateMaintenanceWindowTargetResult, models.UpdateMaintenanceWindowTargetRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateMaintenanceWindowTarget", POST, "/", input)
  override def deleteAssociation(input: models.DeleteAssociationRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteAssociationRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteAssociation", POST, "/", input)
  override def deleteMaintenanceWindow(input: models.DeleteMaintenanceWindowRequest): F[models.DeleteMaintenanceWindowResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteMaintenanceWindowResult, models.DeleteMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteMaintenanceWindow", POST, "/", input)
  override def getDefaultPatchBaseline(input: models.GetDefaultPatchBaselineRequest): F[models.GetDefaultPatchBaselineResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDefaultPatchBaselineResult, models.GetDefaultPatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDefaultPatchBaseline", POST, "/", input)
  override def listComplianceSummaries(input: models.ListComplianceSummariesRequest): F[models.ListComplianceSummariesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListComplianceSummariesResult, models.ListComplianceSummariesRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListComplianceSummaries", POST, "/", input)
  override def deletePatchBaseline(input: models.DeletePatchBaselineRequest): F[models.DeletePatchBaselineResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeletePatchBaselineResult, models.DeletePatchBaselineRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeletePatchBaseline", POST, "/", input)
  override def listCommandInvocations(input: models.ListCommandInvocationsRequest): F[models.ListCommandInvocationsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListCommandInvocationsResult, models.ListCommandInvocationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListCommandInvocations", POST, "/", input)
  override def getParameters(input: models.GetParametersRequest): F[models.GetParametersResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetParametersResult, models.GetParametersRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetParameters", POST, "/", input)
  override def listAssociations(input: models.ListAssociationsRequest): F[models.ListAssociationsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListAssociationsResult, models.ListAssociationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAssociations", POST, "/", input)
  override def deleteParameter(input: models.DeleteParameterRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteParameterRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteParameter", POST, "/", input)
  override def describeMaintenanceWindowTargets(input: models.DescribeMaintenanceWindowTargetsRequest): F[models.DescribeMaintenanceWindowTargetsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeMaintenanceWindowTargetsResult, models.DescribeMaintenanceWindowTargetsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeMaintenanceWindowTargets", POST, "/", input)
  override def getMaintenanceWindowExecutionTaskInvocation(input: models.GetMaintenanceWindowExecutionTaskInvocationRequest): F[models.GetMaintenanceWindowExecutionTaskInvocationResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetMaintenanceWindowExecutionTaskInvocationResult, models.GetMaintenanceWindowExecutionTaskInvocationRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetMaintenanceWindowExecutionTaskInvocation", POST, "/", input)
  override def describePatchGroups(input: models.DescribePatchGroupsRequest): F[models.DescribePatchGroupsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribePatchGroupsResult, models.DescribePatchGroupsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribePatchGroups", POST, "/", input)
  override def deregisterTargetFromMaintenanceWindow(input: models.DeregisterTargetFromMaintenanceWindowRequest): F[models.DeregisterTargetFromMaintenanceWindowResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeregisterTargetFromMaintenanceWindowResult, models.DeregisterTargetFromMaintenanceWindowRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeregisterTargetFromMaintenanceWindow", POST, "/", input)
  override def describeAssociation(input: models.DescribeAssociationRequest): F[models.DescribeAssociationResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeAssociationResult, models.DescribeAssociationRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAssociation", POST, "/", input)
  override def describeAutomationExecutions(input: models.DescribeAutomationExecutionsRequest): F[models.DescribeAutomationExecutionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeAutomationExecutionsResult, models.DescribeAutomationExecutionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeAutomationExecutions", POST, "/", input)
}