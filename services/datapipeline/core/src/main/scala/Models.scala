package org.lyranthe.araethura.datapipeline.models
final case class PutPipelineDefinitionOutput(errored: scala.Boolean, validationErrors: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ValidationError]] = scala.None, validationWarnings: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ValidationWarning]] = scala.None)
final case class QueryObjectsOutput(ids: scala.Option[scala.List[java.lang.String]] = scala.None, marker: scala.Option[java.lang.String] = scala.None, hasMoreResults: scala.Option[scala.Boolean] = scala.None)
final case class DescribePipelinesInput(pipelineIds: scala.List[java.lang.String])
final case class ReportTaskRunnerHeartbeatOutput(terminate: scala.Boolean)
final case class Field(key: java.lang.String, refValue: scala.Option[java.lang.String] = scala.None, stringValue: scala.Option[java.lang.String] = scala.None)
final case class ValidatePipelineDefinitionInput(pipelineId: java.lang.String, pipelineObjects: scala.List[org.lyranthe.araethura.datapipeline.models.PipelineObject], parameterObjects: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ParameterObject]] = scala.None, parameterValues: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ParameterValue]] = scala.None)
final case class CreatePipelineInput(name: java.lang.String, uniqueId: java.lang.String, description: scala.Option[java.lang.String] = scala.None, tags: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.Tag]] = scala.None)
final case class Operator(`type`: scala.Option[java.lang.String] = scala.None, values: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class PipelineNotFoundException(message: scala.Option[java.lang.String] = scala.None)
final case class Query(selectors: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.Selector]] = scala.None)
final case class GetPipelineDefinitionInput(pipelineId: java.lang.String, version: scala.Option[java.lang.String] = scala.None)
final case class DescribePipelinesOutput(pipelineDescriptionList: scala.List[org.lyranthe.araethura.datapipeline.models.PipelineDescription])
final case class PutPipelineDefinitionInput(pipelineId: java.lang.String, pipelineObjects: scala.List[org.lyranthe.araethura.datapipeline.models.PipelineObject], parameterObjects: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ParameterObject]] = scala.None, parameterValues: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ParameterValue]] = scala.None)
final case class ValidationError(id: scala.Option[java.lang.String] = scala.None, errors: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class SetTaskStatusInput(taskId: java.lang.String, taskStatus: java.lang.String, errorId: scala.Option[java.lang.String] = scala.None, errorStackTrace: scala.Option[java.lang.String] = scala.None, errorMessage: scala.Option[java.lang.String] = scala.None)
final case class PipelineDescription(pipelineId: java.lang.String, name: java.lang.String, fields: scala.List[org.lyranthe.araethura.datapipeline.models.Field], description: scala.Option[java.lang.String] = scala.None, tags: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.Tag]] = scala.None)
final case class ListPipelinesOutput(pipelineIdList: scala.List[org.lyranthe.araethura.datapipeline.models.PipelineIdName], marker: scala.Option[java.lang.String] = scala.None, hasMoreResults: scala.Option[scala.Boolean] = scala.None)
final case class CreatePipelineOutput(pipelineId: java.lang.String)
case object SetTaskStatusOutput
final case class DescribeObjectsInput(pipelineId: java.lang.String, objectIds: scala.List[java.lang.String], evaluateExpressions: scala.Option[scala.Boolean] = scala.None, marker: scala.Option[java.lang.String] = scala.None)
final case class ValidatePipelineDefinitionOutput(errored: scala.Boolean, validationErrors: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ValidationError]] = scala.None, validationWarnings: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ValidationWarning]] = scala.None)
final case class PipelineDeletedException(message: scala.Option[java.lang.String] = scala.None)
final case class GetPipelineDefinitionOutput(pipelineObjects: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.PipelineObject]] = scala.None, parameterObjects: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ParameterObject]] = scala.None, parameterValues: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ParameterValue]] = scala.None)
final case class InternalServiceError(message: scala.Option[java.lang.String] = scala.None)
final case class Selector(fieldName: scala.Option[java.lang.String] = scala.None, operator: scala.Option[org.lyranthe.araethura.datapipeline.models.Operator] = scala.None)
final case class TaskObject(taskId: scala.Option[java.lang.String] = scala.None, pipelineId: scala.Option[java.lang.String] = scala.None, attemptId: scala.Option[java.lang.String] = scala.None, objects: scala.Option[scala.collection.immutable.Map[java.lang.String, org.lyranthe.araethura.datapipeline.models.PipelineObject]] = scala.None)
final case class InstanceIdentity(document: scala.Option[java.lang.String] = scala.None, signature: scala.Option[java.lang.String] = scala.None)
final case class SetStatusInput(pipelineId: java.lang.String, objectIds: scala.List[java.lang.String], status: java.lang.String)
final case class DeactivatePipelineInput(pipelineId: java.lang.String, cancelActive: scala.Option[scala.Boolean] = scala.None)
case object DeactivatePipelineOutput
final case class ParameterObject(id: java.lang.String, attributes: scala.List[org.lyranthe.araethura.datapipeline.models.ParameterAttribute])
final case class ReportTaskRunnerHeartbeatInput(taskrunnerId: java.lang.String, hostname: scala.Option[java.lang.String] = scala.None, workerGroup: scala.Option[java.lang.String] = scala.None)
final case class ParameterAttribute(key: java.lang.String, stringValue: java.lang.String)
final case class InvalidRequestException(message: scala.Option[java.lang.String] = scala.None)
final case class AddTagsInput(pipelineId: java.lang.String, tags: scala.List[org.lyranthe.araethura.datapipeline.models.Tag])
case object RemoveTagsOutput
final case class PollForTaskOutput(taskObject: scala.Option[org.lyranthe.araethura.datapipeline.models.TaskObject] = scala.None)
final case class PipelineObject(id: java.lang.String, name: java.lang.String, fields: scala.List[org.lyranthe.araethura.datapipeline.models.Field])
case object ActivatePipelineOutput
final case class PollForTaskInput(workerGroup: java.lang.String, hostname: scala.Option[java.lang.String] = scala.None, instanceIdentity: scala.Option[org.lyranthe.araethura.datapipeline.models.InstanceIdentity] = scala.None)
final case class ValidationWarning(id: scala.Option[java.lang.String] = scala.None, warnings: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class QueryObjectsInput(pipelineId: java.lang.String, sphere: java.lang.String, marker: scala.Option[java.lang.String] = scala.None, query: scala.Option[org.lyranthe.araethura.datapipeline.models.Query] = scala.None, limit: scala.Option[scala.Int] = scala.None)
final case class ParameterValue(id: java.lang.String, stringValue: java.lang.String)
final case class PipelineIdName(id: scala.Option[java.lang.String] = scala.None, name: scala.Option[java.lang.String] = scala.None)
final case class ReportTaskProgressOutput(canceled: scala.Boolean)
case object AddTagsOutput
final case class RemoveTagsInput(pipelineId: java.lang.String, tagKeys: scala.List[java.lang.String])
final case class Tag(key: java.lang.String, value: java.lang.String)
final case class DeletePipelineInput(pipelineId: java.lang.String)
final case class EvaluateExpressionInput(pipelineId: java.lang.String, objectId: java.lang.String, expression: java.lang.String)
final case class TaskNotFoundException(message: scala.Option[java.lang.String] = scala.None)
final case class ActivatePipelineInput(pipelineId: java.lang.String, parameterValues: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.ParameterValue]] = scala.None, startTimestamp: scala.Option[java.time.Instant] = scala.None)
final case class DescribeObjectsOutput(pipelineObjects: scala.List[org.lyranthe.araethura.datapipeline.models.PipelineObject], marker: scala.Option[java.lang.String] = scala.None, hasMoreResults: scala.Option[scala.Boolean] = scala.None)
final case class ListPipelinesInput(marker: scala.Option[java.lang.String] = scala.None)
final case class ReportTaskProgressInput(taskId: java.lang.String, fields: scala.Option[scala.List[org.lyranthe.araethura.datapipeline.models.Field]] = scala.None)
final case class EvaluateExpressionOutput(evaluatedExpression: java.lang.String)