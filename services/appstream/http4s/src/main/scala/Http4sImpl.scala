package org.lyranthe.araethura.appstream.http4s
import org.http4s.Method._
import org.lyranthe.araethura.appstream.circe._
import org.lyranthe.araethura.appstream.models
class AmazonappstreamClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.appstream.Amazonappstream[F] {
  private[this] final val ServiceType: String = "appstream2"
  private[this] final val ServiceAndPrefix: Option[String] = Some("PhotonAdminProxyService")
  override def createStreamingURL(input: models.CreateStreamingURLRequest): F[models.CreateStreamingURLResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateStreamingURLResult, models.CreateStreamingURLRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateStreamingURL", POST, "/", input)
  override def describeSessions(input: models.DescribeSessionsRequest): F[models.DescribeSessionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeSessionsResult, models.DescribeSessionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeSessions", POST, "/", input)
  override def describeStacks(input: models.DescribeStacksRequest): F[models.DescribeStacksResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeStacksResult, models.DescribeStacksRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeStacks", POST, "/", input)
  override def associateFleet(input: models.AssociateFleetRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.AssociateFleetRequest](client, awsData, ServiceType, ServiceAndPrefix, "AssociateFleet", POST, "/", input)
  override def deleteStack(input: models.DeleteStackRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteStackRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteStack", POST, "/", input)
  override def disassociateFleet(input: models.DisassociateFleetRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DisassociateFleetRequest](client, awsData, ServiceType, ServiceAndPrefix, "DisassociateFleet", POST, "/", input)
  override def stopImageBuilder(input: models.StopImageBuilderRequest): F[models.StopImageBuilderResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StopImageBuilderResult, models.StopImageBuilderRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopImageBuilder", POST, "/", input)
  override def describeImages(input: models.DescribeImagesRequest): F[models.DescribeImagesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeImagesResult, models.DescribeImagesRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeImages", POST, "/", input)
  override def describeDirectoryConfigs(input: models.DescribeDirectoryConfigsRequest): F[models.DescribeDirectoryConfigsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeDirectoryConfigsResult, models.DescribeDirectoryConfigsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeDirectoryConfigs", POST, "/", input)
  override def updateStack(input: models.UpdateStackRequest): F[models.UpdateStackResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateStackResult, models.UpdateStackRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateStack", POST, "/", input)
  override def listAssociatedFleets(input: models.ListAssociatedFleetsRequest): F[models.ListAssociatedFleetsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListAssociatedFleetsResult, models.ListAssociatedFleetsRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAssociatedFleets", POST, "/", input)
  override def updateDirectoryConfig(input: models.UpdateDirectoryConfigRequest): F[models.UpdateDirectoryConfigResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateDirectoryConfigResult, models.UpdateDirectoryConfigRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDirectoryConfig", POST, "/", input)
  override def createStack(input: models.CreateStackRequest): F[models.CreateStackResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateStackResult, models.CreateStackRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateStack", POST, "/", input)
  override def listAssociatedStacks(input: models.ListAssociatedStacksRequest): F[models.ListAssociatedStacksResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ListAssociatedStacksResult, models.ListAssociatedStacksRequest](client, awsData, ServiceType, ServiceAndPrefix, "ListAssociatedStacks", POST, "/", input)
  override def deleteImage(input: models.DeleteImageRequest): F[models.DeleteImageResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteImageResult, models.DeleteImageRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteImage", POST, "/", input)
  override def updateFleet(input: models.UpdateFleetRequest): F[models.UpdateFleetResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateFleetResult, models.UpdateFleetRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateFleet", POST, "/", input)
  override def createDirectoryConfig(input: models.CreateDirectoryConfigRequest): F[models.CreateDirectoryConfigResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDirectoryConfigResult, models.CreateDirectoryConfigRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDirectoryConfig", POST, "/", input)
  override def deleteImageBuilder(input: models.DeleteImageBuilderRequest): F[models.DeleteImageBuilderResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteImageBuilderResult, models.DeleteImageBuilderRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteImageBuilder", POST, "/", input)
  override def deleteFleet(input: models.DeleteFleetRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteFleetRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteFleet", POST, "/", input)
  override def describeImageBuilders(input: models.DescribeImageBuildersRequest): F[models.DescribeImageBuildersResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeImageBuildersResult, models.DescribeImageBuildersRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeImageBuilders", POST, "/", input)
  override def createFleet(input: models.CreateFleetRequest): F[models.CreateFleetResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateFleetResult, models.CreateFleetRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateFleet", POST, "/", input)
  override def createImageBuilder(input: models.CreateImageBuilderRequest): F[models.CreateImageBuilderResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateImageBuilderResult, models.CreateImageBuilderRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateImageBuilder", POST, "/", input)
  override def startFleet(input: models.StartFleetRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.StartFleetRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartFleet", POST, "/", input)
  override def deleteDirectoryConfig(input: models.DeleteDirectoryConfigRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.DeleteDirectoryConfigRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDirectoryConfig", POST, "/", input)
  override def expireSession(input: models.ExpireSessionRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.ExpireSessionRequest](client, awsData, ServiceType, ServiceAndPrefix, "ExpireSession", POST, "/", input)
  override def describeFleets(input: models.DescribeFleetsRequest): F[models.DescribeFleetsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DescribeFleetsResult, models.DescribeFleetsRequest](client, awsData, ServiceType, ServiceAndPrefix, "DescribeFleets", POST, "/", input)
  override def createImageBuilderStreamingURL(input: models.CreateImageBuilderStreamingURLRequest): F[models.CreateImageBuilderStreamingURLResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateImageBuilderStreamingURLResult, models.CreateImageBuilderStreamingURLRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateImageBuilderStreamingURL", POST, "/", input)
  override def stopFleet(input: models.StopFleetRequest): F[scala.Unit] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, scala.Unit, models.StopFleetRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopFleet", POST, "/", input)
  override def startImageBuilder(input: models.StartImageBuilderRequest): F[models.StartImageBuilderResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StartImageBuilderResult, models.StartImageBuilderRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartImageBuilder", POST, "/", input)
}