package org.lyranthe.araethura.appstream
trait Amazonappstream[F[_]] {
  def createStreamingURL(input: models.CreateStreamingURLRequest): F[models.CreateStreamingURLResult]
  def describeSessions(input: models.DescribeSessionsRequest): F[models.DescribeSessionsResult]
  def describeStacks(input: models.DescribeStacksRequest): F[models.DescribeStacksResult]
  def associateFleet(input: models.AssociateFleetRequest): F[scala.Unit]
  def deleteStack(input: models.DeleteStackRequest): F[scala.Unit]
  def disassociateFleet(input: models.DisassociateFleetRequest): F[scala.Unit]
  def stopImageBuilder(input: models.StopImageBuilderRequest): F[models.StopImageBuilderResult]
  def describeImages(input: models.DescribeImagesRequest): F[models.DescribeImagesResult]
  def describeDirectoryConfigs(input: models.DescribeDirectoryConfigsRequest): F[models.DescribeDirectoryConfigsResult]
  def updateStack(input: models.UpdateStackRequest): F[models.UpdateStackResult]
  def listAssociatedFleets(input: models.ListAssociatedFleetsRequest): F[models.ListAssociatedFleetsResult]
  def updateDirectoryConfig(input: models.UpdateDirectoryConfigRequest): F[models.UpdateDirectoryConfigResult]
  def createStack(input: models.CreateStackRequest): F[models.CreateStackResult]
  def listAssociatedStacks(input: models.ListAssociatedStacksRequest): F[models.ListAssociatedStacksResult]
  def deleteImage(input: models.DeleteImageRequest): F[models.DeleteImageResult]
  def updateFleet(input: models.UpdateFleetRequest): F[models.UpdateFleetResult]
  def createDirectoryConfig(input: models.CreateDirectoryConfigRequest): F[models.CreateDirectoryConfigResult]
  def deleteImageBuilder(input: models.DeleteImageBuilderRequest): F[models.DeleteImageBuilderResult]
  def deleteFleet(input: models.DeleteFleetRequest): F[scala.Unit]
  def describeImageBuilders(input: models.DescribeImageBuildersRequest): F[models.DescribeImageBuildersResult]
  def createFleet(input: models.CreateFleetRequest): F[models.CreateFleetResult]
  def createImageBuilder(input: models.CreateImageBuilderRequest): F[models.CreateImageBuilderResult]
  def startFleet(input: models.StartFleetRequest): F[scala.Unit]
  def deleteDirectoryConfig(input: models.DeleteDirectoryConfigRequest): F[scala.Unit]
  def expireSession(input: models.ExpireSessionRequest): F[scala.Unit]
  def describeFleets(input: models.DescribeFleetsRequest): F[models.DescribeFleetsResult]
  def createImageBuilderStreamingURL(input: models.CreateImageBuilderStreamingURLRequest): F[models.CreateImageBuilderStreamingURLResult]
  def stopFleet(input: models.StopFleetRequest): F[scala.Unit]
  def startImageBuilder(input: models.StartImageBuilderRequest): F[models.StartImageBuilderResult]
}