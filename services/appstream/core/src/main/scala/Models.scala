package org.lyranthe.araethura.appstream.models
final case class ImageBuilderStateChangeReason(code: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class DisassociateFleetRequest(fleetName: java.lang.String, stackName: java.lang.String)
final case class DirectoryConfig(directoryName: java.lang.String, organizationalUnitDistinguishedNames: scala.Option[scala.List[java.lang.String]] = scala.None, serviceAccountCredentials: scala.Option[org.lyranthe.araethura.appstream.models.ServiceAccountCredentials] = scala.None, createdTime: scala.Option[java.time.Instant] = scala.None)
final case class ListAssociatedFleetsRequest(stackName: java.lang.String, nextToken: scala.Option[java.lang.String] = scala.None)
final case class ResourceInUseException(message: scala.Option[java.lang.String] = scala.None)
final case class ConcurrentModificationException(message: scala.Option[java.lang.String] = scala.None)
case object StopFleetResult
final case class DescribeSessionsRequest(stackName: java.lang.String, fleetName: java.lang.String, nextToken: scala.Option[java.lang.String] = scala.None, userId: scala.Option[java.lang.String] = scala.None, limit: scala.Option[scala.Int] = scala.None, authenticationType: scala.Option[java.lang.String] = scala.None)
final case class DeleteFleetRequest(name: java.lang.String)
final case class StorageConnector(connectorType: java.lang.String, resourceIdentifier: scala.Option[java.lang.String] = scala.None)
final case class DomainJoinInfo(directoryName: scala.Option[java.lang.String] = scala.None, organizationalUnitDistinguishedName: scala.Option[java.lang.String] = scala.None)
final case class Image(name: java.lang.String, platform: scala.Option[java.lang.String] = scala.None, createdTime: scala.Option[java.time.Instant] = scala.None, publicBaseImageReleasedDate: scala.Option[java.time.Instant] = scala.None, arn: scala.Option[java.lang.String] = scala.None, baseImageArn: scala.Option[java.lang.String] = scala.None, displayName: scala.Option[java.lang.String] = scala.None, description: scala.Option[java.lang.String] = scala.None, state: scala.Option[java.lang.String] = scala.None, applications: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.Application]] = scala.None, visibility: scala.Option[java.lang.String] = scala.None, imageBuilderSupported: scala.Option[scala.Boolean] = scala.None, stateChangeReason: scala.Option[org.lyranthe.araethura.appstream.models.ImageStateChangeReason] = scala.None)
final case class StopFleetRequest(name: java.lang.String)
final case class DescribeImagesResult(images: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.Image]] = scala.None)
final case class UpdateDirectoryConfigResult(directoryConfig: scala.Option[org.lyranthe.araethura.appstream.models.DirectoryConfig] = scala.None)
final case class DescribeStacksRequest(names: scala.Option[scala.List[java.lang.String]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class CreateStreamingURLRequest(stackName: java.lang.String, fleetName: java.lang.String, userId: java.lang.String, applicationId: scala.Option[java.lang.String] = scala.None, sessionContext: scala.Option[java.lang.String] = scala.None, validity: scala.Option[scala.Long] = scala.None)
final case class ListAssociatedStacksResult(names: scala.Option[scala.List[java.lang.String]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class DeleteImageRequest(name: java.lang.String)
final case class CreateDirectoryConfigRequest(directoryName: java.lang.String, organizationalUnitDistinguishedNames: scala.List[java.lang.String], serviceAccountCredentials: org.lyranthe.araethura.appstream.models.ServiceAccountCredentials)
final case class StartImageBuilderRequest(name: java.lang.String)
final case class LimitExceededException(message: scala.Option[java.lang.String] = scala.None)
final case class UpdateStackResult(stack: scala.Option[org.lyranthe.araethura.appstream.models.Stack] = scala.None)
case object DeleteFleetResult
final case class ListAssociatedStacksRequest(fleetName: java.lang.String, nextToken: scala.Option[java.lang.String] = scala.None)
final case class CreateImageBuilderResult(imageBuilder: scala.Option[org.lyranthe.araethura.appstream.models.ImageBuilder] = scala.None)
final case class FleetError(errorCode: scala.Option[java.lang.String] = scala.None, errorMessage: scala.Option[java.lang.String] = scala.None)
final case class CreateStackResult(stack: scala.Option[org.lyranthe.araethura.appstream.models.Stack] = scala.None)
final case class CreateStreamingURLResult(streamingURL: scala.Option[java.lang.String] = scala.None, expires: scala.Option[java.time.Instant] = scala.None)
final case class ComputeCapacity(desiredInstances: scala.Int)
final case class InvalidRoleException(message: scala.Option[java.lang.String] = scala.None)
final case class DeleteImageBuilderResult(imageBuilder: scala.Option[org.lyranthe.araethura.appstream.models.ImageBuilder] = scala.None)
final case class ImageBuilder(name: java.lang.String, stateChangeReason: scala.Option[org.lyranthe.araethura.appstream.models.ImageBuilderStateChangeReason] = scala.None, platform: scala.Option[java.lang.String] = scala.None, createdTime: scala.Option[java.time.Instant] = scala.None, domainJoinInfo: scala.Option[org.lyranthe.araethura.appstream.models.DomainJoinInfo] = scala.None, arn: scala.Option[java.lang.String] = scala.None, imageArn: scala.Option[java.lang.String] = scala.None, description: scala.Option[java.lang.String] = scala.None, displayName: scala.Option[java.lang.String] = scala.None, instanceType: scala.Option[java.lang.String] = scala.None, imageBuilderErrors: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.ResourceError]] = scala.None, state: scala.Option[java.lang.String] = scala.None, enableDefaultInternetAccess: scala.Option[scala.Boolean] = scala.None, vpcConfig: scala.Option[org.lyranthe.araethura.appstream.models.VpcConfig] = scala.None)
final case class DeleteDirectoryConfigRequest(directoryName: java.lang.String)
final case class CreateImageBuilderRequest(imageName: java.lang.String, instanceType: java.lang.String, name: java.lang.String, displayName: scala.Option[java.lang.String] = scala.None, domainJoinInfo: scala.Option[org.lyranthe.araethura.appstream.models.DomainJoinInfo] = scala.None, enableDefaultInternetAccess: scala.Option[scala.Boolean] = scala.None, vpcConfig: scala.Option[org.lyranthe.araethura.appstream.models.VpcConfig] = scala.None, description: scala.Option[java.lang.String] = scala.None)
final case class UpdateFleetRequest(name: java.lang.String, displayName: scala.Option[java.lang.String] = scala.None, domainJoinInfo: scala.Option[org.lyranthe.araethura.appstream.models.DomainJoinInfo] = scala.None, imageName: scala.Option[java.lang.String] = scala.None, instanceType: scala.Option[java.lang.String] = scala.None, computeCapacity: scala.Option[org.lyranthe.araethura.appstream.models.ComputeCapacity] = scala.None, enableDefaultInternetAccess: scala.Option[scala.Boolean] = scala.None, attributesToDelete: scala.Option[scala.List[java.lang.String]] = scala.None, maxUserDurationInSeconds: scala.Option[scala.Int] = scala.None, disconnectTimeoutInSeconds: scala.Option[scala.Int] = scala.None, deleteVpcConfig: scala.Option[scala.Boolean] = scala.None, vpcConfig: scala.Option[org.lyranthe.araethura.appstream.models.VpcConfig] = scala.None, description: scala.Option[java.lang.String] = scala.None)
final case class ExpireSessionRequest(sessionId: java.lang.String)
final case class CreateImageBuilderStreamingURLResult(streamingURL: scala.Option[java.lang.String] = scala.None, expires: scala.Option[java.time.Instant] = scala.None)
final case class ComputeCapacityStatus(desired: scala.Int, running: scala.Option[scala.Int] = scala.None, inUse: scala.Option[scala.Int] = scala.None, available: scala.Option[scala.Int] = scala.None)
final case class ResourceAlreadyExistsException(message: scala.Option[java.lang.String] = scala.None)
final case class DeleteImageBuilderRequest(name: java.lang.String)
final case class ResourceNotAvailableException(message: scala.Option[java.lang.String] = scala.None)
final case class InvalidParameterCombinationException(message: scala.Option[java.lang.String] = scala.None)
final case class Session(id: java.lang.String, stackName: java.lang.String, fleetName: java.lang.String, userId: java.lang.String, state: java.lang.String, authenticationType: scala.Option[java.lang.String] = scala.None)
case object ExpireSessionResult
final case class DescribeSessionsResult(sessions: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.Session]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class ResourceNotFoundException(message: scala.Option[java.lang.String] = scala.None)
final case class AssociateFleetRequest(fleetName: java.lang.String, stackName: java.lang.String)
final case class CreateStackRequest(name: java.lang.String, description: scala.Option[java.lang.String] = scala.None, displayName: scala.Option[java.lang.String] = scala.None, storageConnectors: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.StorageConnector]] = scala.None)
final case class ServiceAccountCredentials(accountName: java.lang.String, accountPassword: java.lang.String)
case object StartFleetResult
final case class CreateDirectoryConfigResult(directoryConfig: scala.Option[org.lyranthe.araethura.appstream.models.DirectoryConfig] = scala.None)
final case class Fleet(arn: java.lang.String, name: java.lang.String, imageName: java.lang.String, instanceType: java.lang.String, computeCapacityStatus: org.lyranthe.araethura.appstream.models.ComputeCapacityStatus, state: java.lang.String, createdTime: scala.Option[java.time.Instant] = scala.None, fleetErrors: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.FleetError]] = scala.None, domainJoinInfo: scala.Option[org.lyranthe.araethura.appstream.models.DomainJoinInfo] = scala.None, displayName: scala.Option[java.lang.String] = scala.None, description: scala.Option[java.lang.String] = scala.None, fleetType: scala.Option[java.lang.String] = scala.None, enableDefaultInternetAccess: scala.Option[scala.Boolean] = scala.None, maxUserDurationInSeconds: scala.Option[scala.Int] = scala.None, disconnectTimeoutInSeconds: scala.Option[scala.Int] = scala.None, vpcConfig: scala.Option[org.lyranthe.araethura.appstream.models.VpcConfig] = scala.None)
case object DisassociateFleetResult
final case class OperationNotPermittedException(message: scala.Option[java.lang.String] = scala.None)
final case class IncompatibleImageException(message: scala.Option[java.lang.String] = scala.None)
final case class Stack(name: java.lang.String, createdTime: scala.Option[java.time.Instant] = scala.None, storageConnectors: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.StorageConnector]] = scala.None, arn: scala.Option[java.lang.String] = scala.None, description: scala.Option[java.lang.String] = scala.None, displayName: scala.Option[java.lang.String] = scala.None, stackErrors: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.StackError]] = scala.None)
final case class UpdateDirectoryConfigRequest(directoryName: java.lang.String, organizationalUnitDistinguishedNames: scala.Option[scala.List[java.lang.String]] = scala.None, serviceAccountCredentials: scala.Option[org.lyranthe.araethura.appstream.models.ServiceAccountCredentials] = scala.None)
final case class DescribeImagesRequest(names: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class Application(name: scala.Option[java.lang.String] = scala.None, displayName: scala.Option[java.lang.String] = scala.None, iconURL: scala.Option[java.lang.String] = scala.None, launchParameters: scala.Option[java.lang.String] = scala.None, launchPath: scala.Option[java.lang.String] = scala.None, enabled: scala.Option[scala.Boolean] = scala.None, metadata: scala.Option[scala.collection.immutable.Map[java.lang.String, java.lang.String]] = scala.None)
final case class DescribeImageBuildersResult(imageBuilders: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.ImageBuilder]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class StopImageBuilderRequest(name: java.lang.String)
final case class UpdateStackRequest(name: java.lang.String, displayName: scala.Option[java.lang.String] = scala.None, storageConnectors: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.StorageConnector]] = scala.None, deleteStorageConnectors: scala.Option[scala.Boolean] = scala.None, description: scala.Option[java.lang.String] = scala.None)
final case class UpdateFleetResult(fleet: scala.Option[org.lyranthe.araethura.appstream.models.Fleet] = scala.None)
final case class CreateFleetResult(fleet: scala.Option[org.lyranthe.araethura.appstream.models.Fleet] = scala.None)
final case class StopImageBuilderResult(imageBuilder: scala.Option[org.lyranthe.araethura.appstream.models.ImageBuilder] = scala.None)
final case class CreateImageBuilderStreamingURLRequest(name: java.lang.String, validity: scala.Option[scala.Long] = scala.None)
final case class ResourceError(errorCode: scala.Option[java.lang.String] = scala.None, errorMessage: scala.Option[java.lang.String] = scala.None, errorTimestamp: scala.Option[java.time.Instant] = scala.None)
final case class ImageStateChangeReason(code: scala.Option[java.lang.String] = scala.None, message: scala.Option[java.lang.String] = scala.None)
final case class DescribeImageBuildersRequest(names: scala.Option[scala.List[java.lang.String]] = scala.None, maxResults: scala.Option[scala.Int] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class DeleteImageResult(image: scala.Option[org.lyranthe.araethura.appstream.models.Image] = scala.None)
case object AssociateFleetResult
final case class VpcConfig(subnetIds: scala.Option[scala.List[java.lang.String]] = scala.None, securityGroupIds: scala.Option[scala.List[java.lang.String]] = scala.None)
final case class CreateFleetRequest(imageName: java.lang.String, instanceType: java.lang.String, computeCapacity: org.lyranthe.araethura.appstream.models.ComputeCapacity, name: java.lang.String, displayName: scala.Option[java.lang.String] = scala.None, domainJoinInfo: scala.Option[org.lyranthe.araethura.appstream.models.DomainJoinInfo] = scala.None, fleetType: scala.Option[java.lang.String] = scala.None, enableDefaultInternetAccess: scala.Option[scala.Boolean] = scala.None, maxUserDurationInSeconds: scala.Option[scala.Int] = scala.None, disconnectTimeoutInSeconds: scala.Option[scala.Int] = scala.None, vpcConfig: scala.Option[org.lyranthe.araethura.appstream.models.VpcConfig] = scala.None, description: scala.Option[java.lang.String] = scala.None)
final case class DescribeDirectoryConfigsRequest(directoryNames: scala.Option[scala.List[java.lang.String]] = scala.None, maxResults: scala.Option[scala.Int] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class DescribeStacksResult(stacks: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.Stack]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class DescribeFleetsResult(fleets: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.Fleet]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class StartImageBuilderResult(imageBuilder: scala.Option[org.lyranthe.araethura.appstream.models.ImageBuilder] = scala.None)
final case class DeleteStackRequest(name: java.lang.String)
final case class DescribeFleetsRequest(names: scala.Option[scala.List[java.lang.String]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class ListAssociatedFleetsResult(names: scala.Option[scala.List[java.lang.String]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
final case class StackError(errorCode: scala.Option[java.lang.String] = scala.None, errorMessage: scala.Option[java.lang.String] = scala.None)
final case class DescribeDirectoryConfigsResult(directoryConfigs: scala.Option[scala.List[org.lyranthe.araethura.appstream.models.DirectoryConfig]] = scala.None, nextToken: scala.Option[java.lang.String] = scala.None)
case object DeleteStackResult
case object DeleteDirectoryConfigResult
final case class StartFleetRequest(name: java.lang.String)