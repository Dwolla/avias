package avias.cognitoidentity
trait Amazoncognitoidentity[F[_]] {
  def updateIdentityPool(input: avias.cognitoidentity.models.IdentityPool): F[avias.cognitoidentity.models.IdentityPool]
  def deleteIdentities(input: avias.cognitoidentity.models.DeleteIdentitiesInput): F[avias.cognitoidentity.models.DeleteIdentitiesResponse]
  def getId(input: avias.cognitoidentity.models.GetIdInput): F[avias.cognitoidentity.models.GetIdResponse]
  def getIdentityPoolRoles(input: avias.cognitoidentity.models.GetIdentityPoolRolesInput): F[avias.cognitoidentity.models.GetIdentityPoolRolesResponse]
  def unlinkDeveloperIdentity(input: avias.cognitoidentity.models.UnlinkDeveloperIdentityInput): F[scala.Unit]
  def unlinkIdentity(input: avias.cognitoidentity.models.UnlinkIdentityInput): F[scala.Unit]
  def getOpenIdTokenForDeveloperIdentity(input: avias.cognitoidentity.models.GetOpenIdTokenForDeveloperIdentityInput): F[avias.cognitoidentity.models.GetOpenIdTokenForDeveloperIdentityResponse]
  def listIdentities(input: avias.cognitoidentity.models.ListIdentitiesInput): F[avias.cognitoidentity.models.ListIdentitiesResponse]
  def createIdentityPool(input: avias.cognitoidentity.models.CreateIdentityPoolInput): F[avias.cognitoidentity.models.IdentityPool]
  def setIdentityPoolRoles(input: avias.cognitoidentity.models.SetIdentityPoolRolesInput): F[scala.Unit]
  def lookupDeveloperIdentity(input: avias.cognitoidentity.models.LookupDeveloperIdentityInput): F[avias.cognitoidentity.models.LookupDeveloperIdentityResponse]
  def mergeDeveloperIdentities(input: avias.cognitoidentity.models.MergeDeveloperIdentitiesInput): F[avias.cognitoidentity.models.MergeDeveloperIdentitiesResponse]
  def describeIdentity(input: avias.cognitoidentity.models.DescribeIdentityInput): F[avias.cognitoidentity.models.IdentityDescription]
  def describeIdentityPool(input: avias.cognitoidentity.models.DescribeIdentityPoolInput): F[avias.cognitoidentity.models.IdentityPool]
  def getCredentialsForIdentity(input: avias.cognitoidentity.models.GetCredentialsForIdentityInput): F[avias.cognitoidentity.models.GetCredentialsForIdentityResponse]
  def listIdentityPools(input: avias.cognitoidentity.models.ListIdentityPoolsInput): F[avias.cognitoidentity.models.ListIdentityPoolsResponse]
  def getOpenIdToken(input: avias.cognitoidentity.models.GetOpenIdTokenInput): F[avias.cognitoidentity.models.GetOpenIdTokenResponse]
  def deleteIdentityPool(input: avias.cognitoidentity.models.DeleteIdentityPoolInput): F[scala.Unit]
}