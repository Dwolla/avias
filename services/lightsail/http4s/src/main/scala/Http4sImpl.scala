package org.lyranthe.araethura.lightsail.http4s
import org.http4s.Method._
import org.lyranthe.araethura.lightsail.circe._
import org.lyranthe.araethura.lightsail.models
class AmazonlightsailClient[F[_]: cats.effect.Sync](client: org.http4s.client.Client[F], awsData: org.lyranthe.araethura.common.AwsData[F]) extends org.lyranthe.araethura.lightsail.Amazonlightsail[F] {
  private[this] final val ServiceType: String = "lightsail"
  private[this] final val ServiceAndPrefix: Option[String] = Some("Lightsail_20161128")
  override def deleteInstance(input: models.DeleteInstanceRequest): F[models.DeleteInstanceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteInstanceResult, models.DeleteInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteInstance", POST, "/", input)
  override def deleteDomainEntry(input: models.DeleteDomainEntryRequest): F[models.DeleteDomainEntryResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteDomainEntryResult, models.DeleteDomainEntryRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDomainEntry", POST, "/", input)
  override def createDomainEntry(input: models.CreateDomainEntryRequest): F[models.CreateDomainEntryResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDomainEntryResult, models.CreateDomainEntryRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDomainEntry", POST, "/", input)
  override def allocateStaticIp(input: models.AllocateStaticIpRequest): F[models.AllocateStaticIpResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AllocateStaticIpResult, models.AllocateStaticIpRequest](client, awsData, ServiceType, ServiceAndPrefix, "AllocateStaticIp", POST, "/", input)
  override def attachDisk(input: models.AttachDiskRequest): F[models.AttachDiskResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AttachDiskResult, models.AttachDiskRequest](client, awsData, ServiceType, ServiceAndPrefix, "AttachDisk", POST, "/", input)
  override def createDiskFromSnapshot(input: models.CreateDiskFromSnapshotRequest): F[models.CreateDiskFromSnapshotResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDiskFromSnapshotResult, models.CreateDiskFromSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDiskFromSnapshot", POST, "/", input)
  override def createInstancesFromSnapshot(input: models.CreateInstancesFromSnapshotRequest): F[models.CreateInstancesFromSnapshotResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateInstancesFromSnapshotResult, models.CreateInstancesFromSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateInstancesFromSnapshot", POST, "/", input)
  override def getInstanceAccessDetails(input: models.GetInstanceAccessDetailsRequest): F[models.GetInstanceAccessDetailsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetInstanceAccessDetailsResult, models.GetInstanceAccessDetailsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInstanceAccessDetails", POST, "/", input)
  override def getInstances(input: models.GetInstancesRequest): F[models.GetInstancesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetInstancesResult, models.GetInstancesRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInstances", POST, "/", input)
  override def getKeyPair(input: models.GetKeyPairRequest): F[models.GetKeyPairResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetKeyPairResult, models.GetKeyPairRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetKeyPair", POST, "/", input)
  override def unpeerVpc: F[models.UnpeerVpcResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UnpeerVpcResult, scala.Unit](client, awsData, ServiceType, ServiceAndPrefix, "UnpeerVpc", POST, "/", ())
  override def getDomains(input: models.GetDomainsRequest): F[models.GetDomainsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDomainsResult, models.GetDomainsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDomains", POST, "/", input)
  override def deleteDiskSnapshot(input: models.DeleteDiskSnapshotRequest): F[models.DeleteDiskSnapshotResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteDiskSnapshotResult, models.DeleteDiskSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDiskSnapshot", POST, "/", input)
  override def closeInstancePublicPorts(input: models.CloseInstancePublicPortsRequest): F[models.CloseInstancePublicPortsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CloseInstancePublicPortsResult, models.CloseInstancePublicPortsRequest](client, awsData, ServiceType, ServiceAndPrefix, "CloseInstancePublicPorts", POST, "/", input)
  override def getDisks(input: models.GetDisksRequest): F[models.GetDisksResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDisksResult, models.GetDisksRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDisks", POST, "/", input)
  override def putInstancePublicPorts(input: models.PutInstancePublicPortsRequest): F[models.PutInstancePublicPortsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PutInstancePublicPortsResult, models.PutInstancePublicPortsRequest](client, awsData, ServiceType, ServiceAndPrefix, "PutInstancePublicPorts", POST, "/", input)
  override def createDiskSnapshot(input: models.CreateDiskSnapshotRequest): F[models.CreateDiskSnapshotResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDiskSnapshotResult, models.CreateDiskSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDiskSnapshot", POST, "/", input)
  override def getInstanceSnapshot(input: models.GetInstanceSnapshotRequest): F[models.GetInstanceSnapshotResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetInstanceSnapshotResult, models.GetInstanceSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInstanceSnapshot", POST, "/", input)
  override def updateDomainEntry(input: models.UpdateDomainEntryRequest): F[models.UpdateDomainEntryResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.UpdateDomainEntryResult, models.UpdateDomainEntryRequest](client, awsData, ServiceType, ServiceAndPrefix, "UpdateDomainEntry", POST, "/", input)
  override def deleteDomain(input: models.DeleteDomainRequest): F[models.DeleteDomainResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteDomainResult, models.DeleteDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDomain", POST, "/", input)
  override def getOperation(input: models.GetOperationRequest): F[models.GetOperationResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetOperationResult, models.GetOperationRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetOperation", POST, "/", input)
  override def openInstancePublicPorts(input: models.OpenInstancePublicPortsRequest): F[models.OpenInstancePublicPortsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.OpenInstancePublicPortsResult, models.OpenInstancePublicPortsRequest](client, awsData, ServiceType, ServiceAndPrefix, "OpenInstancePublicPorts", POST, "/", input)
  override def getInstancePortStates(input: models.GetInstancePortStatesRequest): F[models.GetInstancePortStatesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetInstancePortStatesResult, models.GetInstancePortStatesRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInstancePortStates", POST, "/", input)
  override def getOperationsForResource(input: models.GetOperationsForResourceRequest): F[models.GetOperationsForResourceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetOperationsForResourceResult, models.GetOperationsForResourceRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetOperationsForResource", POST, "/", input)
  override def peerVpc: F[models.PeerVpcResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.PeerVpcResult, scala.Unit](client, awsData, ServiceType, ServiceAndPrefix, "PeerVpc", POST, "/", ())
  override def createInstances(input: models.CreateInstancesRequest): F[models.CreateInstancesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateInstancesResult, models.CreateInstancesRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateInstances", POST, "/", input)
  override def getOperations(input: models.GetOperationsRequest): F[models.GetOperationsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetOperationsResult, models.GetOperationsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetOperations", POST, "/", input)
  override def getStaticIp(input: models.GetStaticIpRequest): F[models.GetStaticIpResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetStaticIpResult, models.GetStaticIpRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetStaticIp", POST, "/", input)
  override def detachDisk(input: models.DetachDiskRequest): F[models.DetachDiskResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DetachDiskResult, models.DetachDiskRequest](client, awsData, ServiceType, ServiceAndPrefix, "DetachDisk", POST, "/", input)
  override def rebootInstance(input: models.RebootInstanceRequest): F[models.RebootInstanceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.RebootInstanceResult, models.RebootInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "RebootInstance", POST, "/", input)
  override def createInstanceSnapshot(input: models.CreateInstanceSnapshotRequest): F[models.CreateInstanceSnapshotResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateInstanceSnapshotResult, models.CreateInstanceSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateInstanceSnapshot", POST, "/", input)
  override def getDiskSnapshot(input: models.GetDiskSnapshotRequest): F[models.GetDiskSnapshotResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDiskSnapshotResult, models.GetDiskSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDiskSnapshot", POST, "/", input)
  override def getKeyPairs(input: models.GetKeyPairsRequest): F[models.GetKeyPairsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetKeyPairsResult, models.GetKeyPairsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetKeyPairs", POST, "/", input)
  override def deleteDisk(input: models.DeleteDiskRequest): F[models.DeleteDiskResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteDiskResult, models.DeleteDiskRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteDisk", POST, "/", input)
  override def getRegions(input: models.GetRegionsRequest): F[models.GetRegionsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetRegionsResult, models.GetRegionsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetRegions", POST, "/", input)
  override def detachStaticIp(input: models.DetachStaticIpRequest): F[models.DetachStaticIpResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DetachStaticIpResult, models.DetachStaticIpRequest](client, awsData, ServiceType, ServiceAndPrefix, "DetachStaticIp", POST, "/", input)
  override def createKeyPair(input: models.CreateKeyPairRequest): F[models.CreateKeyPairResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateKeyPairResult, models.CreateKeyPairRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateKeyPair", POST, "/", input)
  override def isVpcPeered: F[models.IsVpcPeeredResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.IsVpcPeeredResult, scala.Unit](client, awsData, ServiceType, ServiceAndPrefix, "IsVpcPeered", POST, "/", ())
  override def importKeyPair(input: models.ImportKeyPairRequest): F[models.ImportKeyPairResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ImportKeyPairResult, models.ImportKeyPairRequest](client, awsData, ServiceType, ServiceAndPrefix, "ImportKeyPair", POST, "/", input)
  override def deleteInstanceSnapshot(input: models.DeleteInstanceSnapshotRequest): F[models.DeleteInstanceSnapshotResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteInstanceSnapshotResult, models.DeleteInstanceSnapshotRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteInstanceSnapshot", POST, "/", input)
  override def deleteKeyPair(input: models.DeleteKeyPairRequest): F[models.DeleteKeyPairResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DeleteKeyPairResult, models.DeleteKeyPairRequest](client, awsData, ServiceType, ServiceAndPrefix, "DeleteKeyPair", POST, "/", input)
  override def getStaticIps(input: models.GetStaticIpsRequest): F[models.GetStaticIpsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetStaticIpsResult, models.GetStaticIpsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetStaticIps", POST, "/", input)
  override def getInstanceState(input: models.GetInstanceStateRequest): F[models.GetInstanceStateResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetInstanceStateResult, models.GetInstanceStateRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInstanceState", POST, "/", input)
  override def getActiveNames(input: models.GetActiveNamesRequest): F[models.GetActiveNamesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetActiveNamesResult, models.GetActiveNamesRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetActiveNames", POST, "/", input)
  override def downloadDefaultKeyPair: F[models.DownloadDefaultKeyPairResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.DownloadDefaultKeyPairResult, scala.Unit](client, awsData, ServiceType, ServiceAndPrefix, "DownloadDefaultKeyPair", POST, "/", ())
  override def createDisk(input: models.CreateDiskRequest): F[models.CreateDiskResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDiskResult, models.CreateDiskRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDisk", POST, "/", input)
  override def getBundles(input: models.GetBundlesRequest): F[models.GetBundlesResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetBundlesResult, models.GetBundlesRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetBundles", POST, "/", input)
  override def releaseStaticIp(input: models.ReleaseStaticIpRequest): F[models.ReleaseStaticIpResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.ReleaseStaticIpResult, models.ReleaseStaticIpRequest](client, awsData, ServiceType, ServiceAndPrefix, "ReleaseStaticIp", POST, "/", input)
  override def getDiskSnapshots(input: models.GetDiskSnapshotsRequest): F[models.GetDiskSnapshotsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDiskSnapshotsResult, models.GetDiskSnapshotsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDiskSnapshots", POST, "/", input)
  override def getDomain(input: models.GetDomainRequest): F[models.GetDomainResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDomainResult, models.GetDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDomain", POST, "/", input)
  override def startInstance(input: models.StartInstanceRequest): F[models.StartInstanceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StartInstanceResult, models.StartInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "StartInstance", POST, "/", input)
  override def stopInstance(input: models.StopInstanceRequest): F[models.StopInstanceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.StopInstanceResult, models.StopInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "StopInstance", POST, "/", input)
  override def getDisk(input: models.GetDiskRequest): F[models.GetDiskResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetDiskResult, models.GetDiskRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetDisk", POST, "/", input)
  override def getInstanceSnapshots(input: models.GetInstanceSnapshotsRequest): F[models.GetInstanceSnapshotsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetInstanceSnapshotsResult, models.GetInstanceSnapshotsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInstanceSnapshots", POST, "/", input)
  override def createDomain(input: models.CreateDomainRequest): F[models.CreateDomainResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.CreateDomainResult, models.CreateDomainRequest](client, awsData, ServiceType, ServiceAndPrefix, "CreateDomain", POST, "/", input)
  override def getInstanceMetricData(input: models.GetInstanceMetricDataRequest): F[models.GetInstanceMetricDataResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetInstanceMetricDataResult, models.GetInstanceMetricDataRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInstanceMetricData", POST, "/", input)
  override def attachStaticIp(input: models.AttachStaticIpRequest): F[models.AttachStaticIpResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.AttachStaticIpResult, models.AttachStaticIpRequest](client, awsData, ServiceType, ServiceAndPrefix, "AttachStaticIp", POST, "/", input)
  override def getInstance(input: models.GetInstanceRequest): F[models.GetInstanceResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetInstanceResult, models.GetInstanceRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetInstance", POST, "/", input)
  override def getBlueprints(input: models.GetBlueprintsRequest): F[models.GetBlueprintsResult] = org.lyranthe.araethura.common.http4s.ClientUtils.doRequest[F, models.GetBlueprintsResult, models.GetBlueprintsRequest](client, awsData, ServiceType, ServiceAndPrefix, "GetBlueprints", POST, "/", input)
}